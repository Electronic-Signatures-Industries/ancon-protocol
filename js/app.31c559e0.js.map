{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/module/types/anconprotocol/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.feegrant.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.feegrant.v1beta1/module/types/google/protobuf/duration.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/types/cosmos/evidence/v1beta1/evidence.js","webpack:///./src/store/generated/tharsis/ethermint/ethermint.evm.v1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/google/protobuf/duration.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/cosmos/vesting/v1beta1/vesting.js","webpack:///./src/store/generated/tharsis/ethermint/ethermint.evm.v1/module/types/cosmos/base/query/v1beta1/pagination.js","webpack:///./src/store/generated/tharsis/ethermint/ethermint.evm.v1/module/types/ethermint/evm/v1/evm.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.authz.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.authz.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/cosmos/ibc-go/ibc.applications.transfer.v1/module/types/ibc/core/client/v1/client.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/cosmos/staking/v1beta1/staking.js","webpack:///./src/App.vue","webpack:///./src/components/Sidebar.vue","webpack:///./src/components/Sidebar.vue?cc14","webpack:///./src/App.vue?8ecf","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.aguaclara/module/rest.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.aguaclara/module/types/aguaclara/packet.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.aguaclara/module/types/aguaclara/tx.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.aguaclara/module/index.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.aguaclara/index.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/module/rest.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/module/index.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.authz.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.authz.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.authz.v1beta1/module/types/cosmos/authz/v1beta1/event.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.authz.v1beta1/module/types/cosmos/authz/v1beta1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.authz.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/types/cosmos/bank/v1beta1/bank.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/types/cosmos/bank/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/types/cosmos/bank/v1beta1/authz.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/types/cosmos/bank/v1beta1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.crisis.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.crisis.v1beta1/module/types/cosmos/crisis/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.crisis.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.crisis.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/types/cosmos/distribution/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.feegrant.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.feegrant.v1beta1/module/types/cosmos/feegrant/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.feegrant.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.feegrant.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.feegrant.v1beta1/module/types/cosmos/feegrant/v1beta1/feegrant.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.feegrant.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/cosmos/slashing/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/cosmos/staking/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/cosmos/staking/v1beta1/authz.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/index.js","webpack:///./src/store/generated/cosmos/ibc-go/ibc.applications.transfer.v1/module/rest.js","webpack:///./src/store/generated/cosmos/ibc-go/ibc.applications.transfer.v1/module/index.js","webpack:///./src/store/generated/cosmos/ibc-go/ibc.applications.transfer.v1/module/types/ibc/applications/transfer/v1/transfer.js","webpack:///./src/store/generated/cosmos/ibc-go/ibc.applications.transfer.v1/index.js","webpack:///./src/store/generated/cosmos/ibc-go/ibc.applications.transfer.v2/module/rest.js","webpack:///./src/store/generated/cosmos/ibc-go/ibc.applications.transfer.v2/module/index.js","webpack:///./src/store/generated/cosmos/ibc-go/ibc.applications.transfer.v2/module/types/ibc/applications/transfer/v2/packet.js","webpack:///./src/store/generated/cosmos/ibc-go/ibc.applications.transfer.v2/index.js","webpack:///./src/store/generated/tharsis/ethermint/ethermint.evm.v1/module/rest.js","webpack:///./src/store/generated/tharsis/ethermint/ethermint.evm.v1/module/index.js","webpack:///./src/store/generated/tharsis/ethermint/ethermint.evm.v1/module/types/ethermint/evm/v1/genesis.js","webpack:///./src/store/generated/tharsis/ethermint/ethermint.evm.v1/index.js","webpack:///./src/store/generated/index.js","webpack:///./src/store/config.js","webpack:///./src/store/index.js","webpack:///./src/views/Index.vue","webpack:///./src/views/Index.vue?5e87","webpack:///./src/views/Types.vue","webpack:///./src/views/Types.vue?4306","webpack:///./src/views/Relayers.vue","webpack:///./src/views/Relayers.vue?eaa4","webpack:///./src/router/index.js","webpack:///./src/main.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/crypto/proof.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/cosmos/slashing/v1beta1/genesis.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/module/types/cosmos/base/query/v1beta1/pagination.js","webpack:///./src/App.vue?b519","webpack:///./src/store/generated/tharsis/ethermint/ethermint.evm.v1/module/types/ethermint/evm/v1/query.js","webpack:///./src/store/generated/cosmos/ibc-go/ibc.applications.transfer.v1/module/types/ibc/applications/transfer/v1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/types/cosmos/distribution/v1beta1/distribution.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/cosmos/slashing/v1beta1/slashing.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/module/types/anconprotocol/nft.js","webpack:///./src/store/generated/tharsis/ethermint/ethermint.evm.v1/module/types/ethermint/evm/v1/tx.js","webpack:///./src/store/generated/cosmos/ibc-go/ibc.applications.transfer.v1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/types/cosmos/evidence/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/types/cosmos/distribution/v1beta1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.feegrant.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/cosmos/vesting/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.authz.v1beta1/module/types/cosmos/authz/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/google/protobuf/duration.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/cosmos/auth/v1beta1/auth.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/cosmos/gov/v1beta1/gov.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/module/types/anconprotocol/did_registry.js","webpack:///./src/store/generated/Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol/module/types/anconprotocol/query.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/version/types.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/cosmos/staking/v1beta1/genesis.js","webpack:///./src/store/generated/cosmos/ibc-go/ibc.applications.transfer.v1/module/types/cosmos/upgrade/v1beta1/upgrade.js","webpack:///./src/store/generated/cosmos/ibc-go/ibc.applications.transfer.v1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/crypto/keys.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/types/validator.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/types/types.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.authz.v1beta1/module/types/cosmos/authz/v1beta1/authz.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/google/protobuf/duration.js","webpack:///./src/store/generated/cosmos/ibc-go/ibc.applications.transfer.v1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/cosmos/gov/v1beta1/tx.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","baseTimestamp","seconds","nanos","Timestamp","encode","message","writer","Writer","uint32","int64","int32","decode","input","reader","Uint8Array","Reader","end","undefined","len","pos","tag","longToNumber","skipType","fromJSON","Number","toJSON","obj","fromPartial","globalThis","self","global","long","gt","MAX_SAFE_INTEGER","Error","toNumber","util","Long","configure","baseMsgUpdateMetadataOwnership","hash","previousOwner","newOwner","currentChainId","recipientChainId","sender","tokenAddress","tokenId","MsgUpdateMetadataOwnership","string","String","baseMsgRegisterRelay","chain","alg","pub","MsgRegisterRelay","baseMsgRegisterRelayResponse","id","MsgRegisterRelayResponse","baseMsgCreateDid","creator","vanityName","didType","MsgCreateDid","baseMsgUpdateDid","did","metadata","cid","MsgUpdateDid","baseMsgRevokeDid","MsgRevokeDid","baseMsgMintTrustedContent","metadataRef","denomId","recipient","didOwner","lazyMint","price","v","MsgMintTrustedContent","bool","uint64","Boolean","baseMsgSendCrossMintTrusted","metaTransaction","destinationDomain","MsgSendCrossMintTrusted","baseMsgSendCrossMintTrustedResponse","MsgSendCrossMintTrustedResponse","baseMsgMintSwapResponse","MsgMintSwapResponse","baseMsgMintSwap","destinationDenomId","MsgMintSwap","baseMsgInitiateSwap","MsgInitiateSwap","baseMsgInitiateSwapResponse","relayTo","voucher","MsgInitiateSwapResponse","baseMsgClaimSwap","MsgClaimSwap","baseMsgClaimSwapResponse","MsgClaimSwapResponse","baseMsgMintTrustedResource","resourceWhitelistAccess","resourceLocation","MsgMintTrustedResource","e","map","baseMsgRoyaltyInfo","receiver","royaltyFeePercentage","MsgRoyaltyInfo","baseMsgIssueDenom","schema","symbol","mintRestricted","updateRestricted","MsgIssueDenom","baseMsgTransferNFT","uri","MsgTransferNFT","baseMsgCreateDIDOwner","owner","didKey","didWeb","MsgCreateDIDOwner","baseMsgCreateDIDOwnerResponse","MsgCreateDIDOwnerResponse","_","baseMsgChangeOwner","identity","MsgChangeOwner","baseMsgGrantDelegate","delegate","delegateType","validity","MsgGrantDelegate","baseMsgRevokeDelegate","MsgRevokeDelegate","baseMsgSetAttribute","actor","MsgSetAttribute","bytes","bytesFromBase64","base64FromBytes","baseMsgSetAttributeResponse","MsgSetAttributeResponse","baseMsgGrantAttribute","MsgGrantAttribute","baseMsgRevokeAttribute","MsgRevokeAttribute","baseMsgEditNFT","MsgEditNFT","baseMsgMintNFT","MsgMintNFT","baseMsgBurnNFT","MsgBurnNFT","baseMsgTransferDenom","MsgTransferDenom","baseMsgFileMetadataResponse","MsgFileMetadataResponse","baseMsgMetadata","description","image","parent","additionalSources","links","verifiedCredentialRef","from","enableIpldForestAccess","factRef","MsgMetadata","baseMsgFile","path","content","time","contentType","MsgFile","baseMsgFileResponse","MsgFileResponse","baseMsgSendMetadataOwnership","MsgSendMetadataOwnership","AguaclaraPacketData","fork","ldelim","baseAguaclaraPacketData","didRecipient","toMetadata","atob","b64","Buffer","toString","bin","arr","charCodeAt","btoa","byteLength","fromCharCode","join","baseAny","typeUrl","Any","baseDuration","Duration","baseEquivocation","height","power","consensusAddress","Equivocation","toTimestamp","fromTimestamp","fromJsonTimestamp","toISOString","date","getTime","millis","Date","baseBaseVestingAccount","endTime","BaseVestingAccount","baseAccount","BaseAccount","originalVesting","Coin","delegatedFree","delegatedVesting","baseContinuousVestingAccount","startTime","ContinuousVestingAccount","baseVestingAccount","baseDelayedVestingAccount","DelayedVestingAccount","basePeriod","Period","amount","basePeriodicVestingAccount","PeriodicVestingAccount","vestingPeriods","basePermanentLockedAccount","PermanentLockedAccount","basePageRequest","offset","limit","countTotal","reverse","PageRequest","basePageResponse","total","PageResponse","nextKey","baseParams","evmDenom","enableCreate","enableCall","extraEips","Params","chainConfig","ChainConfig","end2","baseChainConfig","homesteadBlock","daoForkBlock","daoForkSupport","eip150Block","eip150Hash","eip155Block","eip158Block","byzantiumBlock","constantinopleBlock","petersburgBlock","istanbulBlock","muirGlacierBlock","berlinBlock","londonBlock","baseState","State","baseTransactionLogs","TransactionLogs","logs","Log","baseLog","address","topics","blockNumber","txHash","txIndex","blockHash","index","removed","baseTxResult","contractAddress","reverted","gasUsed","TxResult","bloom","txLogs","ret","baseAccessTuple","storageKeys","AccessTuple","baseTraceConfig","tracer","timeout","reexec","disableStack","disableStorage","debug","enableMemory","enableReturnData","TraceConfig","overrides","baseHeight","revisionNumber","revisionHeight","Height","BondStatus","bondStatusFromJSON","BOND_STATUS_UNSPECIFIED","BOND_STATUS_UNBONDED","BOND_STATUS_UNBONDING","BOND_STATUS_BONDED","UNRECOGNIZED","bondStatusToJSON","baseHistoricalInfo","HistoricalInfo","header","Header","valset","Validator","baseCommissionRates","rate","maxRate","maxChangeRate","CommissionRates","baseCommission","Commission","commissionRates","updateTime","baseDescription","moniker","website","securityContact","details","Description","baseValidator","operatorAddress","jailed","status","tokens","delegatorShares","unbondingHeight","minSelfDelegation","consensusPubkey","unbondingTime","commission","baseValAddresses","addresses","ValAddresses","baseDVPair","delegatorAddress","validatorAddress","DVPair","baseDVPairs","DVPairs","pairs","baseDVVTriplet","validatorSrcAddress","validatorDstAddress","DVVTriplet","baseDVVTriplets","DVVTriplets","triplets","baseDelegation","shares","Delegation","baseUnbondingDelegation","UnbondingDelegation","entries","UnbondingDelegationEntry","baseUnbondingDelegationEntry","creationHeight","initialBalance","balance","completionTime","baseRedelegationEntry","sharesDst","RedelegationEntry","baseRedelegation","Redelegation","maxValidators","maxEntries","historicalEntries","bondDenom","baseDelegationResponse","DelegationResponse","delegation","baseRedelegationEntryResponse","RedelegationEntryResponse","redelegationEntry","baseRedelegationResponse","RedelegationResponse","redelegation","basePool","notBondedTokens","bondedTokens","Pool","initialized","ref","$refs","menu","closeDropdown","sidebar","class","sidebarOpen","default","link","text","icon","href","target","footer","showText","computed","hasWallet","this","$store","hasModule","__exports__","components","Sidebar","created","dispatch","errorCaptured","err","console","log","render","ContentType","baseNoData","NoData","portId","channelId","types","MissingWalletError","registry","Registry","defaultFee","gas","txClient","wallet","addr","SigningStargateClient","connectWithSigner","client","getAccounts","signAndBroadcast","msgs","fee","memo","msgSendMetadataOwnership","initTxClient","vuexGetters","getStructure","template","structure","fields","field","type","getDefaultState","_Structure","_Subscriptions","Set","state","namespaced","mutations","RESET_STATE","assign","QUERY","query","JSON","stringify","SUBSCRIBE","subscription","add","UNSUBSCRIBE","delete","getters","getTypeStructure","actions","init","rootGetters","on","resetState","commit","unsubscribe","StoreUpdate","forEach","action","payload","SpVuexError","sendMsgSendMetadataOwnership","msg","HttpClient","apiConfig","baseUrl","securityData","securityWorker","abortControllers","Map","baseApiParams","credentials","headers","redirect","referrerPolicy","setSecurityData","contentFormatters","Json","FormData","keys","reduce","append","UrlEncoded","toQueryString","createAbortSignal","cancelToken","has","abortController","signal","AbortController","set","abortRequest","abort","request","body","secure","format","params","secureParams","requestParams","mergeRequestParams","queryString","payloadFormatter","fetch","then","response","error","ok","catch","encodeURIComponent","Array","isArray","rawQuery","filter","addQueryParam","params1","params2","Api","arguments","queryReadDelegate","method","queryIdentifyOwner","queryGetAttributes","queryGetDidKey","queryCollection","queryDenoms","queryDenom","queryOwner","queryGetNft","queryReadMetadataProof","queryResource","queryReadRoyaltyInfo","queryReadWithPath","queryResolveDidWeb","msgMintTrustedContent","msgMintTrustedResource","msgIssueDenom","msgRevokeDelegate","msgGrantAttribute","msgTransferNFT","msgMetadata","msgUpdateMetadataOwnership","msgRevokeDid","msgGrantDelegate","msgRevokeAttribute","msgUpdateDid","msgMintNFT","msgTransferDenom","msgCreateDid","msgRoyaltyInfo","msgFile","msgChangeOwner","msgBurnNFT","msgEditNFT","queryClient","initQueryClient","mergeResults","next_values","prop","ReadRoyaltyInfo","ReadWithPath","ReadMetadataProof","IdentifyOwner","GetAttributes","Resource","ReadDelegate","Owner","Collection","Denom","Denoms","GetNft","ResolveDidWeb","GetDidKey","DIDOwner","DIDWebRoute","Delegate","Change","Attribute","BaseNFT","IDCollection","QueryReadDidKeyRequest","QueryReadDidKeyResponse","QueryNonceRequest","QueryNonceResponse","QueryOwnersResponse","getReadRoyaltyInfo","getReadWithPath","getReadMetadataProof","getIdentifyOwner","getGetAttributes","getResource","getReadDelegate","getOwner","getCollection","getDenom","getDenoms","getGetNft","getResolveDidWeb","getGetDidKey","QueryReadRoyaltyInfo","options","subscribe","all","QueryReadWithPath","QueryReadMetadataProof","QueryIdentifyOwner","QueryGetAttributes","QueryResource","pagination","QueryReadDelegate","QueryOwner","QueryCollection","denom_id","QueryDenom","QueryDenoms","QueryGetNft","token_id","QueryResolveDidWeb","QueryGetDidKey","sendMsgMintTrustedContent","sendMsgMintTrustedResource","sendMsgIssueDenom","sendMsgRevokeDelegate","sendMsgGrantAttribute","sendMsgTransferNFT","sendMsgMetadata","sendMsgUpdateMetadataOwnership","sendMsgRevokeDid","sendMsgGrantDelegate","sendMsgRevokeAttribute","sendMsgUpdateDid","sendMsgMintNFT","sendMsgTransferDenom","sendMsgCreateDid","sendMsgRoyaltyInfo","sendMsgFile","sendMsgChangeOwner","sendMsgBurnNFT","sendMsgEditNFT","queryGrants","MsgExec","MsgGrant","MsgRevoke","msgExec","msgGrant","msgRevoke","baseEventGrant","msgTypeUrl","granter","grantee","EventGrant","baseEventRevoke","EventRevoke","baseGrantAuthorization","GrantAuthorization","authorization","expiration","Grants","GenericAuthorization","Grant","getGrants","QueryGrants","sendMsgExec","sendMsgGrant","sendMsgRevoke","queryAllBalances","queryBalance","denom","queryDenomsMetadata","queryDenomMetadata","queryParams","queryTotalSupply","querySupplyOf","baseCoin","defaultSendEnabled","sendEnabled","SendEnabled","baseSendEnabled","enabled","baseInput","Input","coins","baseOutput","Output","baseSupply","Supply","baseDenomUnit","exponent","aliases","DenomUnit","baseMetadata","base","display","Metadata","denomUnits","baseMsgSend","fromAddress","toAddress","MsgSend","baseMsgMultiSend","MsgMultiSend","inputs","outputs","msgSend","msgMultiSend","baseSendAuthorization","SendAuthorization","spendLimit","baseBalance","Balance","AllBalances","TotalSupply","SupplyOf","DenomMetadata","DenomsMetadata","getBalance","getAllBalances","getTotalSupply","getSupplyOf","getParams","getDenomMetadata","getDenomsMetadata","QueryBalance","QueryAllBalances","QueryTotalSupply","QuerySupplyOf","QueryParams","QueryDenomMetadata","QueryDenomsMetadata","sendMsgSend","sendMsgMultiSend","baseMsgVerifyInvariant","invariantModuleName","invariantRoute","MsgVerifyInvariant","msgVerifyInvariant","sendMsgVerifyInvariant","queryCommunityPool","queryDelegationTotalRewards","queryDelegationRewards","queryDelegatorValidators","queryDelegatorWithdrawAddress","queryValidatorCommission","queryValidatorOutstandingRewards","queryValidatorSlashes","baseMsgSetWithdrawAddress","withdrawAddress","MsgSetWithdrawAddress","baseMsgWithdrawDelegatorReward","MsgWithdrawDelegatorReward","baseMsgWithdrawValidatorCommission","MsgWithdrawValidatorCommission","baseMsgFundCommunityPool","depositor","MsgFundCommunityPool","msgWithdrawDelegatorReward","msgFundCommunityPool","msgSetWithdrawAddress","msgWithdrawValidatorCommission","ValidatorOutstandingRewards","ValidatorCommission","ValidatorSlashes","DelegationRewards","DelegationTotalRewards","DelegatorValidators","DelegatorWithdrawAddress","CommunityPool","ValidatorHistoricalRewards","ValidatorCurrentRewards","ValidatorAccumulatedCommission","ValidatorSlashEvent","ValidatorSlashEvents","FeePool","CommunityPoolSpendProposal","DelegatorStartingInfo","DelegationDelegatorReward","CommunityPoolSpendProposalWithDeposit","DelegatorWithdrawInfo","ValidatorOutstandingRewardsRecord","ValidatorAccumulatedCommissionRecord","ValidatorHistoricalRewardsRecord","ValidatorCurrentRewardsRecord","DelegatorStartingInfoRecord","ValidatorSlashEventRecord","getValidatorOutstandingRewards","getValidatorCommission","getValidatorSlashes","getDelegationRewards","getDelegationTotalRewards","getDelegatorValidators","getDelegatorWithdrawAddress","getCommunityPool","QueryValidatorOutstandingRewards","validator_address","QueryValidatorCommission","QueryValidatorSlashes","QueryDelegationRewards","delegator_address","QueryDelegationTotalRewards","QueryDelegatorValidators","QueryDelegatorWithdrawAddress","QueryCommunityPool","sendMsgWithdrawDelegatorReward","sendMsgFundCommunityPool","sendMsgSetWithdrawAddress","sendMsgWithdrawValidatorCommission","queryAllEvidence","queryEvidence","evidenceHash","MsgSubmitEvidence","msgSubmitEvidence","Evidence","AllEvidence","getEvidence","getAllEvidence","QueryEvidence","evidence_hash","QueryAllEvidence","sendMsgSubmitEvidence","queryAllowance","queryAllowances","baseMsgGrantAllowance","MsgGrantAllowance","allowance","baseMsgRevokeAllowance","MsgRevokeAllowance","msgGrantAllowance","msgRevokeAllowance","baseBasicAllowance","BasicAllowance","basePeriodicAllowance","PeriodicAllowance","basic","period","periodSpendLimit","periodCanSpend","periodReset","baseAllowedMsgAllowance","allowedMessages","AllowedMsgAllowance","baseGrant","V1Beta1ProposalStatus","V1Beta1VoteOption","Allowance","Allowances","getAllowance","getAllowances","QueryAllowance","QueryAllowances","sendMsgGrantAllowance","sendMsgRevokeAllowance","paramsType","queryProposals","queryProposal","proposalId","queryDeposits","queryDeposit","queryTallyResult","queryVotes","queryVote","voter","MsgVoteWeighted","MsgSubmitProposal","MsgVote","MsgDeposit","msgVoteWeighted","msgSubmitProposal","msgVote","msgDeposit","Proposal","Proposals","Vote","Votes","Deposit","Deposits","TallyResult","WeightedVoteOption","TextProposal","DepositParams","VotingParams","TallyParams","getProposal","getProposals","getVote","getVotes","getDeposit","getDeposits","getTallyResult","QueryProposal","proposal_id","QueryProposals","QueryVote","QueryVotes","params_type","QueryDeposit","QueryDeposits","QueryTallyResult","sendMsgVoteWeighted","sendMsgSubmitProposal","sendMsgVote","sendMsgDeposit","querySigningInfos","querySigningInfo","consAddress","baseMsgUnjail","validatorAddr","MsgUnjail","msgUnjail","V1Beta1BondStatus","SigningInfo","SigningInfos","ValidatorMissedBlocks","MissedBlock","ValidatorSigningInfo","getSigningInfo","getSigningInfos","QuerySigningInfo","cons_address","QuerySigningInfos","sendMsgUnjail","queryDelegatorDelegations","delegatorAddr","queryRedelegations","queryDelegatorUnbondingDelegations","queryDelegatorValidator","queryHistoricalInfo","queryPool","queryValidators","queryValidator","queryValidatorDelegations","queryDelegation","queryUnbondingDelegation","queryValidatorUnbondingDelegations","baseMsgCreateValidator","MsgCreateValidator","pubkey","baseMsgEditValidator","commissionRate","MsgEditValidator","baseMsgDelegate","MsgDelegate","baseMsgBeginRedelegate","MsgBeginRedelegate","baseMsgUndelegate","MsgUndelegate","AuthorizationType","msgBeginRedelegate","msgUndelegate","msgDelegate","msgCreateValidator","msgEditValidator","authorizationTypeFromJSON","AUTHORIZATION_TYPE_UNSPECIFIED","AUTHORIZATION_TYPE_DELEGATE","AUTHORIZATION_TYPE_UNDELEGATE","AUTHORIZATION_TYPE_REDELEGATE","authorizationTypeToJSON","baseStakeAuthorization","authorizationType","StakeAuthorization","maxTokens","allowList","StakeAuthorization_Validators","denyList","baseStakeAuthorization_Validators","Validators","ValidatorDelegations","ValidatorUnbondingDelegations","DelegatorDelegations","DelegatorUnbondingDelegations","Redelegations","DelegatorValidator","LastValidatorPower","getValidators","getValidator","getValidatorDelegations","getValidatorUnbondingDelegations","getDelegation","getUnbondingDelegation","getDelegatorDelegations","getDelegatorUnbondingDelegations","getRedelegations","getDelegatorValidator","getHistoricalInfo","getPool","QueryValidators","QueryValidator","validator_addr","QueryValidatorDelegations","QueryValidatorUnbondingDelegations","QueryDelegation","delegator_addr","QueryUnbondingDelegation","QueryDelegatorDelegations","QueryDelegatorUnbondingDelegations","QueryRedelegations","QueryDelegatorValidator","QueryHistoricalInfo","QueryPool","sendMsgBeginRedelegate","sendMsgUndelegate","sendMsgDelegate","sendMsgCreateValidator","sendMsgEditValidator","MsgCreateVestingAccount","msgCreateVestingAccount","sendMsgCreateVestingAccount","queryDenomTraces","queryDenomTrace","MsgTransfer","msgTransfer","baseDenomTrace","baseDenom","DenomTrace","receiveEnabled","DenomTraces","getDenomTrace","getDenomTraces","QueryDenomTrace","QueryDenomTraces","sendMsgTransfer","baseFungibleTokenPacketData","FungibleTokenPacketData","queryAccount","queryCode","queryCosmosAccount","queryEstimateGas","queryEthCall","queryStorage","queryTraceTx","queryValidatorAccount","MsgEthereumTx","msgEthereumTx","baseGenesisAccount","code","GenesisAccount","storage","Account","CosmosAccount","ValidatorAccount","Storage","Code","EthCall","EstimateGas","TraceTx","QueryTxLogsRequest","QueryTxLogsResponse","LegacyTx","AccessListTx","DynamicFeeTx","ExtensionOptionsEthereumTx","getAccount","getCosmosAccount","getValidatorAccount","getStorage","getCode","getEthCall","getEstimateGas","getTraceTx","QueryAccount","QueryCosmosAccount","QueryValidatorAccount","QueryStorage","QueryCode","QueryEthCall","QueryEstimateGas","QueryTraceTx","sendMsgEthereumTx","ElectronicSignaturesIndustriesAnconProtocolElectronicSignaturesIndustriesAnconprotocolAguaclara","load","ElectronicSignaturesIndustriesAnconProtocolElectronicSignaturesIndustriesAnconprotocolAnconprotocol","CosmosCosmosSdkCosmosAuthzV1Beta1","CosmosCosmosSdkCosmosBankV1Beta1","CosmosCosmosSdkCosmosCrisisV1Beta1","CosmosCosmosSdkCosmosDistributionV1Beta1","CosmosCosmosSdkCosmosEvidenceV1Beta1","CosmosCosmosSdkCosmosFeegrantV1Beta1","CosmosCosmosSdkCosmosGovV1Beta1","CosmosCosmosSdkCosmosSlashingV1Beta1","CosmosCosmosSdkCosmosStakingV1Beta1","CosmosCosmosSdkCosmosVestingV1Beta1","CosmosIbcGoIbcApplicationsTransferV1","CosmosIbcGoIbcApplicationsTransferV2","TharsisEthermintEthermintEvmV1","mod","fullns","store","registerModule","mutation","root","values","generated","moduleInit","transfers","blocks","env","relayers","createStore","routerHistory","createWebHistory","routes","component","Index","Types","Relayers","router","createRouter","history","app","createApp","App","config","globalProperties","_depsLoaded","use","vueLib","mount","baseProof","Proof","leafHash","aunts","baseSigningInfo","validatorSigningInfo","baseValidatorMissedBlocks","missedBlocks","baseMissedBlock","missed","baseQueryTxLogsRequest","baseQueryTxLogsResponse","baseMsgTransfer","sourcePort","sourceChannel","timeoutTimestamp","token","timeoutHeight","communityTax","baseProposerReward","bonusProposerReward","withdrawAddrEnabled","baseValidatorHistoricalRewards","referenceCount","cumulativeRewardRatio","DecCoin","baseValidatorCurrentRewards","rewards","baseValidatorAccumulatedCommission","baseValidatorOutstandingRewards","baseValidatorSlashEvent","validatorPeriod","fraction","baseValidatorSlashEvents","validatorSlashEvents","baseFeePool","communityPool","baseCommunityPoolSpendProposal","title","baseDelegatorStartingInfo","previousPeriod","stake","baseDelegationDelegatorReward","reward","baseCommunityPoolSpendProposalWithDeposit","deposit","baseValidatorSigningInfo","startHeight","indexOffset","tombstoned","missedBlocksCounter","jailedUntil","signedBlocksWindow","minSignedPerWindow","downtimeJailDuration","slashFractionDoubleSign","slashFractionDowntime","baseBaseNFT","baseIDCollection","tokenIds","baseOwner","idCollections","baseCollection","nfts","baseMsgEthereumTx","size","double","baseLegacyTx","nonce","gasPrice","to","baseAccessListTx","chainId","accesses","baseDynamicFeeTx","gasTipCap","gasFeeCap","baseExtensionOptionsEthereumTx","baseMsgEthereumTxResponse","vmError","MsgEthereumTxResponse","baseMsgSubmitEvidence","submitter","evidence","baseDelegatorWithdrawInfo","baseValidatorOutstandingRewardsRecord","outstandingRewards","baseValidatorAccumulatedCommissionRecord","accumulated","baseValidatorHistoricalRewardsRecord","baseValidatorCurrentRewardsRecord","baseDelegatorStartingInfoRecord","startingInfo","baseValidatorSlashEventRecord","validatorSlashEvent","baseMsgCreateVestingAccount","delayed","baseDecCoin","baseMsgGrant","grant","baseMsgExec","baseMsgRevoke","baseBaseAccount","accountNumber","sequence","pubKey","VoteOption","ProposalStatus","voteOptionFromJSON","VOTE_OPTION_UNSPECIFIED","VOTE_OPTION_YES","VOTE_OPTION_ABSTAIN","VOTE_OPTION_NO","VOTE_OPTION_NO_WITH_VETO","voteOptionToJSON","proposalStatusFromJSON","PROPOSAL_STATUS_UNSPECIFIED","PROPOSAL_STATUS_DEPOSIT_PERIOD","PROPOSAL_STATUS_VOTING_PERIOD","PROPOSAL_STATUS_PASSED","PROPOSAL_STATUS_REJECTED","PROPOSAL_STATUS_FAILED","proposalStatusToJSON","baseWeightedVoteOption","option","weight","baseTextProposal","baseDeposit","baseProposal","finalTallyResult","submitTime","depositEndTime","totalDeposit","votingStartTime","votingEndTime","baseTallyResult","yes","abstain","no","noWithVeto","baseVote","baseDepositParams","minDeposit","maxDepositPeriod","baseVotingParams","votingPeriod","baseTallyParams","quorum","threshold","vetoThreshold","baseDIDOwner","didWebDeactivated","baseDIDWebRoute","route","baseDelegate","baseChange","previousChange","baseAttribute","baseQueryReadDidKeyRequest","baseQueryReadDidKeyResponse","baseQueryNonceRequest","baseQueryNonceResponse","baseQueryOwnersResponse","baseConsensus","block","Consensus","baseLastValidatorPower","basePlan","info","Plan","basePublicKey","PublicKey","ed25519","secp256k1","baseValidatorSet","totalVotingPower","ValidatorSet","validators","proposer","votingPower","proposerPriority","BlockIDFlag","SignedMsgType","basePartSetHeader","PartSetHeader","baseBlockID","BlockID","partSetHeader","baseHeader","version","lastBlockId","lastCommitHash","dataHash","validatorsHash","nextValidatorsHash","consensusHash","appHash","lastResultsHash","proposerAddress","baseGenericAuthorization","baseMsgSubmitProposal","initialDeposit","baseMsgVote","baseMsgVoteWeighted","baseMsgDeposit"],"mappings":"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","file":"js/app.31c559e0.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([1,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from 'protobufjs/minimal';\nimport * as Long from 'long';\nexport const protobufPackage = 'ElectronicSignaturesIndustries.anconprotocol.anconprotocol';\nconst baseMsgUpdateMetadataOwnership = {\n    hash: '',\n    previousOwner: '',\n    newOwner: '',\n    currentChainId: '',\n    recipientChainId: '',\n    sender: '',\n    tokenAddress: '',\n    tokenId: ''\n};\nexport const MsgUpdateMetadataOwnership = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash !== '') {\n            writer.uint32(10).string(message.hash);\n        }\n        if (message.previousOwner !== '') {\n            writer.uint32(18).string(message.previousOwner);\n        }\n        if (message.newOwner !== '') {\n            writer.uint32(26).string(message.newOwner);\n        }\n        if (message.currentChainId !== '') {\n            writer.uint32(34).string(message.currentChainId);\n        }\n        if (message.recipientChainId !== '') {\n            writer.uint32(42).string(message.recipientChainId);\n        }\n        if (message.sender !== '') {\n            writer.uint32(50).string(message.sender);\n        }\n        if (message.tokenAddress !== '') {\n            writer.uint32(58).string(message.tokenAddress);\n        }\n        if (message.tokenId !== '') {\n            writer.uint32(66).string(message.tokenId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUpdateMetadataOwnership };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.string();\n                    break;\n                case 2:\n                    message.previousOwner = reader.string();\n                    break;\n                case 3:\n                    message.newOwner = reader.string();\n                    break;\n                case 4:\n                    message.currentChainId = reader.string();\n                    break;\n                case 5:\n                    message.recipientChainId = reader.string();\n                    break;\n                case 6:\n                    message.sender = reader.string();\n                    break;\n                case 7:\n                    message.tokenAddress = reader.string();\n                    break;\n                case 8:\n                    message.tokenId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUpdateMetadataOwnership };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = String(object.hash);\n        }\n        else {\n            message.hash = '';\n        }\n        if (object.previousOwner !== undefined && object.previousOwner !== null) {\n            message.previousOwner = String(object.previousOwner);\n        }\n        else {\n            message.previousOwner = '';\n        }\n        if (object.newOwner !== undefined && object.newOwner !== null) {\n            message.newOwner = String(object.newOwner);\n        }\n        else {\n            message.newOwner = '';\n        }\n        if (object.currentChainId !== undefined && object.currentChainId !== null) {\n            message.currentChainId = String(object.currentChainId);\n        }\n        else {\n            message.currentChainId = '';\n        }\n        if (object.recipientChainId !== undefined && object.recipientChainId !== null) {\n            message.recipientChainId = String(object.recipientChainId);\n        }\n        else {\n            message.recipientChainId = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.tokenAddress !== undefined && object.tokenAddress !== null) {\n            message.tokenAddress = String(object.tokenAddress);\n        }\n        else {\n            message.tokenAddress = '';\n        }\n        if (object.tokenId !== undefined && object.tokenId !== null) {\n            message.tokenId = String(object.tokenId);\n        }\n        else {\n            message.tokenId = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = message.hash);\n        message.previousOwner !== undefined && (obj.previousOwner = message.previousOwner);\n        message.newOwner !== undefined && (obj.newOwner = message.newOwner);\n        message.currentChainId !== undefined && (obj.currentChainId = message.currentChainId);\n        message.recipientChainId !== undefined && (obj.recipientChainId = message.recipientChainId);\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.tokenAddress !== undefined && (obj.tokenAddress = message.tokenAddress);\n        message.tokenId !== undefined && (obj.tokenId = message.tokenId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUpdateMetadataOwnership };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = '';\n        }\n        if (object.previousOwner !== undefined && object.previousOwner !== null) {\n            message.previousOwner = object.previousOwner;\n        }\n        else {\n            message.previousOwner = '';\n        }\n        if (object.newOwner !== undefined && object.newOwner !== null) {\n            message.newOwner = object.newOwner;\n        }\n        else {\n            message.newOwner = '';\n        }\n        if (object.currentChainId !== undefined && object.currentChainId !== null) {\n            message.currentChainId = object.currentChainId;\n        }\n        else {\n            message.currentChainId = '';\n        }\n        if (object.recipientChainId !== undefined && object.recipientChainId !== null) {\n            message.recipientChainId = object.recipientChainId;\n        }\n        else {\n            message.recipientChainId = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.tokenAddress !== undefined && object.tokenAddress !== null) {\n            message.tokenAddress = object.tokenAddress;\n        }\n        else {\n            message.tokenAddress = '';\n        }\n        if (object.tokenId !== undefined && object.tokenId !== null) {\n            message.tokenId = object.tokenId;\n        }\n        else {\n            message.tokenId = '';\n        }\n        return message;\n    }\n};\nconst baseMsgUpdateMetadataOwnershipResponse = { metadataRef: '', packetRef: '' };\nexport const MsgUpdateMetadataOwnershipResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.metadataRef !== '') {\n            writer.uint32(10).string(message.metadataRef);\n        }\n        if (message.packetRef !== '') {\n            writer.uint32(18).string(message.packetRef);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUpdateMetadataOwnershipResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.metadataRef = reader.string();\n                    break;\n                case 2:\n                    message.packetRef = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUpdateMetadataOwnershipResponse };\n        if (object.metadataRef !== undefined && object.metadataRef !== null) {\n            message.metadataRef = String(object.metadataRef);\n        }\n        else {\n            message.metadataRef = '';\n        }\n        if (object.packetRef !== undefined && object.packetRef !== null) {\n            message.packetRef = String(object.packetRef);\n        }\n        else {\n            message.packetRef = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.metadataRef !== undefined && (obj.metadataRef = message.metadataRef);\n        message.packetRef !== undefined && (obj.packetRef = message.packetRef);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUpdateMetadataOwnershipResponse };\n        if (object.metadataRef !== undefined && object.metadataRef !== null) {\n            message.metadataRef = object.metadataRef;\n        }\n        else {\n            message.metadataRef = '';\n        }\n        if (object.packetRef !== undefined && object.packetRef !== null) {\n            message.packetRef = object.packetRef;\n        }\n        else {\n            message.packetRef = '';\n        }\n        return message;\n    }\n};\nconst baseMsgRegisterRelay = { sender: '', chain: '', alg: '', pub: '' };\nexport const MsgRegisterRelay = {\n    encode(message, writer = Writer.create()) {\n        if (message.sender !== '') {\n            writer.uint32(10).string(message.sender);\n        }\n        if (message.chain !== '') {\n            writer.uint32(18).string(message.chain);\n        }\n        if (message.alg !== '') {\n            writer.uint32(26).string(message.alg);\n        }\n        if (message.pub !== '') {\n            writer.uint32(34).string(message.pub);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRegisterRelay };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sender = reader.string();\n                    break;\n                case 2:\n                    message.chain = reader.string();\n                    break;\n                case 3:\n                    message.alg = reader.string();\n                    break;\n                case 4:\n                    message.pub = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRegisterRelay };\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.chain !== undefined && object.chain !== null) {\n            message.chain = String(object.chain);\n        }\n        else {\n            message.chain = '';\n        }\n        if (object.alg !== undefined && object.alg !== null) {\n            message.alg = String(object.alg);\n        }\n        else {\n            message.alg = '';\n        }\n        if (object.pub !== undefined && object.pub !== null) {\n            message.pub = String(object.pub);\n        }\n        else {\n            message.pub = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.chain !== undefined && (obj.chain = message.chain);\n        message.alg !== undefined && (obj.alg = message.alg);\n        message.pub !== undefined && (obj.pub = message.pub);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRegisterRelay };\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.chain !== undefined && object.chain !== null) {\n            message.chain = object.chain;\n        }\n        else {\n            message.chain = '';\n        }\n        if (object.alg !== undefined && object.alg !== null) {\n            message.alg = object.alg;\n        }\n        else {\n            message.alg = '';\n        }\n        if (object.pub !== undefined && object.pub !== null) {\n            message.pub = object.pub;\n        }\n        else {\n            message.pub = '';\n        }\n        return message;\n    }\n};\nconst baseMsgRegisterRelayResponse = { id: '' };\nexport const MsgRegisterRelayResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRegisterRelayResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRegisterRelayResponse };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRegisterRelayResponse };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        return message;\n    }\n};\nconst baseMsgCreateDid = { creator: '', vanityName: '', didType: '' };\nexport const MsgCreateDid = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.vanityName !== '') {\n            writer.uint32(18).string(message.vanityName);\n        }\n        if (message.didType !== '') {\n            writer.uint32(26).string(message.didType);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateDid };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.vanityName = reader.string();\n                    break;\n                case 3:\n                    message.didType = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateDid };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.vanityName !== undefined && object.vanityName !== null) {\n            message.vanityName = String(object.vanityName);\n        }\n        else {\n            message.vanityName = '';\n        }\n        if (object.didType !== undefined && object.didType !== null) {\n            message.didType = String(object.didType);\n        }\n        else {\n            message.didType = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.vanityName !== undefined && (obj.vanityName = message.vanityName);\n        message.didType !== undefined && (obj.didType = message.didType);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateDid };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.vanityName !== undefined && object.vanityName !== null) {\n            message.vanityName = object.vanityName;\n        }\n        else {\n            message.vanityName = '';\n        }\n        if (object.didType !== undefined && object.didType !== null) {\n            message.didType = object.didType;\n        }\n        else {\n            message.didType = '';\n        }\n        return message;\n    }\n};\nconst baseMsgCreateDidResponse = { cid: '', did: '' };\nexport const MsgCreateDidResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.cid !== '') {\n            writer.uint32(10).string(message.cid);\n        }\n        if (message.did !== '') {\n            writer.uint32(18).string(message.did);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateDidResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.cid = reader.string();\n                    break;\n                case 2:\n                    message.did = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateDidResponse };\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = String(object.cid);\n        }\n        else {\n            message.cid = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = String(object.did);\n        }\n        else {\n            message.did = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.cid !== undefined && (obj.cid = message.cid);\n        message.did !== undefined && (obj.did = message.did);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateDidResponse };\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = object.cid;\n        }\n        else {\n            message.cid = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = object.did;\n        }\n        else {\n            message.did = '';\n        }\n        return message;\n    }\n};\nconst baseMsgUpdateDid = { creator: '', did: '', metadata: '', cid: '' };\nexport const MsgUpdateDid = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.did !== '') {\n            writer.uint32(18).string(message.did);\n        }\n        if (message.metadata !== '') {\n            writer.uint32(26).string(message.metadata);\n        }\n        if (message.cid !== '') {\n            writer.uint32(34).string(message.cid);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUpdateDid };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.did = reader.string();\n                    break;\n                case 3:\n                    message.metadata = reader.string();\n                    break;\n                case 4:\n                    message.cid = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUpdateDid };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = String(object.did);\n        }\n        else {\n            message.did = '';\n        }\n        if (object.metadata !== undefined && object.metadata !== null) {\n            message.metadata = String(object.metadata);\n        }\n        else {\n            message.metadata = '';\n        }\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = String(object.cid);\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.did !== undefined && (obj.did = message.did);\n        message.metadata !== undefined && (obj.metadata = message.metadata);\n        message.cid !== undefined && (obj.cid = message.cid);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUpdateDid };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = object.did;\n        }\n        else {\n            message.did = '';\n        }\n        if (object.metadata !== undefined && object.metadata !== null) {\n            message.metadata = object.metadata;\n        }\n        else {\n            message.metadata = '';\n        }\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = object.cid;\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    }\n};\nconst baseMsgUpdateDidResponse = {};\nexport const MsgUpdateDidResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUpdateDidResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgUpdateDidResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgUpdateDidResponse };\n        return message;\n    }\n};\nconst baseMsgRevokeDid = { creator: '', did: '', metadata: '', cid: '' };\nexport const MsgRevokeDid = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.did !== '') {\n            writer.uint32(18).string(message.did);\n        }\n        if (message.metadata !== '') {\n            writer.uint32(26).string(message.metadata);\n        }\n        if (message.cid !== '') {\n            writer.uint32(34).string(message.cid);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRevokeDid };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.did = reader.string();\n                    break;\n                case 3:\n                    message.metadata = reader.string();\n                    break;\n                case 4:\n                    message.cid = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRevokeDid };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = String(object.did);\n        }\n        else {\n            message.did = '';\n        }\n        if (object.metadata !== undefined && object.metadata !== null) {\n            message.metadata = String(object.metadata);\n        }\n        else {\n            message.metadata = '';\n        }\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = String(object.cid);\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.did !== undefined && (obj.did = message.did);\n        message.metadata !== undefined && (obj.metadata = message.metadata);\n        message.cid !== undefined && (obj.cid = message.cid);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRevokeDid };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = object.did;\n        }\n        else {\n            message.did = '';\n        }\n        if (object.metadata !== undefined && object.metadata !== null) {\n            message.metadata = object.metadata;\n        }\n        else {\n            message.metadata = '';\n        }\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = object.cid;\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    }\n};\nconst baseMsgRevokeDidResponse = { id: 0 };\nexport const MsgRevokeDidResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== 0) {\n            writer.uint32(8).uint64(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRevokeDidResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRevokeDidResponse };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRevokeDidResponse };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgMintTrustedContent = {\n    creator: '',\n    metadataRef: '',\n    denomId: '',\n    name: '',\n    recipient: '',\n    didOwner: '',\n    lazyMint: false,\n    price: 0,\n    r: '',\n    s: '',\n    v: 0\n};\nexport const MsgMintTrustedContent = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.metadataRef !== '') {\n            writer.uint32(18).string(message.metadataRef);\n        }\n        if (message.denomId !== '') {\n            writer.uint32(26).string(message.denomId);\n        }\n        if (message.name !== '') {\n            writer.uint32(34).string(message.name);\n        }\n        if (message.recipient !== '') {\n            writer.uint32(42).string(message.recipient);\n        }\n        if (message.didOwner !== '') {\n            writer.uint32(50).string(message.didOwner);\n        }\n        if (message.lazyMint === true) {\n            writer.uint32(56).bool(message.lazyMint);\n        }\n        if (message.price !== 0) {\n            writer.uint32(64).uint64(message.price);\n        }\n        if (message.r !== '') {\n            writer.uint32(74).string(message.r);\n        }\n        if (message.s !== '') {\n            writer.uint32(82).string(message.s);\n        }\n        if (message.v !== 0) {\n            writer.uint32(88).uint64(message.v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMintTrustedContent };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.metadataRef = reader.string();\n                    break;\n                case 3:\n                    message.denomId = reader.string();\n                    break;\n                case 4:\n                    message.name = reader.string();\n                    break;\n                case 5:\n                    message.recipient = reader.string();\n                    break;\n                case 6:\n                    message.didOwner = reader.string();\n                    break;\n                case 7:\n                    message.lazyMint = reader.bool();\n                    break;\n                case 8:\n                    message.price = longToNumber(reader.uint64());\n                    break;\n                case 9:\n                    message.r = reader.string();\n                    break;\n                case 10:\n                    message.s = reader.string();\n                    break;\n                case 11:\n                    message.v = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMintTrustedContent };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.metadataRef !== undefined && object.metadataRef !== null) {\n            message.metadataRef = String(object.metadataRef);\n        }\n        else {\n            message.metadataRef = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = String(object.recipient);\n        }\n        else {\n            message.recipient = '';\n        }\n        if (object.didOwner !== undefined && object.didOwner !== null) {\n            message.didOwner = String(object.didOwner);\n        }\n        else {\n            message.didOwner = '';\n        }\n        if (object.lazyMint !== undefined && object.lazyMint !== null) {\n            message.lazyMint = Boolean(object.lazyMint);\n        }\n        else {\n            message.lazyMint = false;\n        }\n        if (object.price !== undefined && object.price !== null) {\n            message.price = Number(object.price);\n        }\n        else {\n            message.price = 0;\n        }\n        if (object.r !== undefined && object.r !== null) {\n            message.r = String(object.r);\n        }\n        else {\n            message.r = '';\n        }\n        if (object.s !== undefined && object.s !== null) {\n            message.s = String(object.s);\n        }\n        else {\n            message.s = '';\n        }\n        if (object.v !== undefined && object.v !== null) {\n            message.v = Number(object.v);\n        }\n        else {\n            message.v = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.metadataRef !== undefined && (obj.metadataRef = message.metadataRef);\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        message.name !== undefined && (obj.name = message.name);\n        message.recipient !== undefined && (obj.recipient = message.recipient);\n        message.didOwner !== undefined && (obj.didOwner = message.didOwner);\n        message.lazyMint !== undefined && (obj.lazyMint = message.lazyMint);\n        message.price !== undefined && (obj.price = message.price);\n        message.r !== undefined && (obj.r = message.r);\n        message.s !== undefined && (obj.s = message.s);\n        message.v !== undefined && (obj.v = message.v);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMintTrustedContent };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.metadataRef !== undefined && object.metadataRef !== null) {\n            message.metadataRef = object.metadataRef;\n        }\n        else {\n            message.metadataRef = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = object.recipient;\n        }\n        else {\n            message.recipient = '';\n        }\n        if (object.didOwner !== undefined && object.didOwner !== null) {\n            message.didOwner = object.didOwner;\n        }\n        else {\n            message.didOwner = '';\n        }\n        if (object.lazyMint !== undefined && object.lazyMint !== null) {\n            message.lazyMint = object.lazyMint;\n        }\n        else {\n            message.lazyMint = false;\n        }\n        if (object.price !== undefined && object.price !== null) {\n            message.price = object.price;\n        }\n        else {\n            message.price = 0;\n        }\n        if (object.r !== undefined && object.r !== null) {\n            message.r = object.r;\n        }\n        else {\n            message.r = '';\n        }\n        if (object.s !== undefined && object.s !== null) {\n            message.s = object.s;\n        }\n        else {\n            message.s = '';\n        }\n        if (object.v !== undefined && object.v !== null) {\n            message.v = object.v;\n        }\n        else {\n            message.v = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgMintTrustedContentResponse = { id: 0 };\nexport const MsgMintTrustedContentResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== 0) {\n            writer.uint32(8).uint64(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMintTrustedContentResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMintTrustedContentResponse };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMintTrustedContentResponse };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgSendCrossMintTrusted = {\n    creator: '',\n    metadataRef: '',\n    denomId: '',\n    name: '',\n    recipient: '',\n    didOwner: '',\n    lazyMint: false,\n    price: 0,\n    metaTransaction: '',\n    destinationDomain: 0\n};\nexport const MsgSendCrossMintTrusted = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.metadataRef !== '') {\n            writer.uint32(18).string(message.metadataRef);\n        }\n        if (message.denomId !== '') {\n            writer.uint32(26).string(message.denomId);\n        }\n        if (message.name !== '') {\n            writer.uint32(34).string(message.name);\n        }\n        if (message.recipient !== '') {\n            writer.uint32(42).string(message.recipient);\n        }\n        if (message.didOwner !== '') {\n            writer.uint32(50).string(message.didOwner);\n        }\n        if (message.lazyMint === true) {\n            writer.uint32(56).bool(message.lazyMint);\n        }\n        if (message.price !== 0) {\n            writer.uint32(64).uint64(message.price);\n        }\n        if (message.metaTransaction !== '') {\n            writer.uint32(74).string(message.metaTransaction);\n        }\n        if (message.destinationDomain !== 0) {\n            writer.uint32(80).uint64(message.destinationDomain);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSendCrossMintTrusted };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.metadataRef = reader.string();\n                    break;\n                case 3:\n                    message.denomId = reader.string();\n                    break;\n                case 4:\n                    message.name = reader.string();\n                    break;\n                case 5:\n                    message.recipient = reader.string();\n                    break;\n                case 6:\n                    message.didOwner = reader.string();\n                    break;\n                case 7:\n                    message.lazyMint = reader.bool();\n                    break;\n                case 8:\n                    message.price = longToNumber(reader.uint64());\n                    break;\n                case 9:\n                    message.metaTransaction = reader.string();\n                    break;\n                case 10:\n                    message.destinationDomain = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSendCrossMintTrusted };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.metadataRef !== undefined && object.metadataRef !== null) {\n            message.metadataRef = String(object.metadataRef);\n        }\n        else {\n            message.metadataRef = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = String(object.recipient);\n        }\n        else {\n            message.recipient = '';\n        }\n        if (object.didOwner !== undefined && object.didOwner !== null) {\n            message.didOwner = String(object.didOwner);\n        }\n        else {\n            message.didOwner = '';\n        }\n        if (object.lazyMint !== undefined && object.lazyMint !== null) {\n            message.lazyMint = Boolean(object.lazyMint);\n        }\n        else {\n            message.lazyMint = false;\n        }\n        if (object.price !== undefined && object.price !== null) {\n            message.price = Number(object.price);\n        }\n        else {\n            message.price = 0;\n        }\n        if (object.metaTransaction !== undefined && object.metaTransaction !== null) {\n            message.metaTransaction = String(object.metaTransaction);\n        }\n        else {\n            message.metaTransaction = '';\n        }\n        if (object.destinationDomain !== undefined && object.destinationDomain !== null) {\n            message.destinationDomain = Number(object.destinationDomain);\n        }\n        else {\n            message.destinationDomain = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.metadataRef !== undefined && (obj.metadataRef = message.metadataRef);\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        message.name !== undefined && (obj.name = message.name);\n        message.recipient !== undefined && (obj.recipient = message.recipient);\n        message.didOwner !== undefined && (obj.didOwner = message.didOwner);\n        message.lazyMint !== undefined && (obj.lazyMint = message.lazyMint);\n        message.price !== undefined && (obj.price = message.price);\n        message.metaTransaction !== undefined && (obj.metaTransaction = message.metaTransaction);\n        message.destinationDomain !== undefined && (obj.destinationDomain = message.destinationDomain);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSendCrossMintTrusted };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.metadataRef !== undefined && object.metadataRef !== null) {\n            message.metadataRef = object.metadataRef;\n        }\n        else {\n            message.metadataRef = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = object.recipient;\n        }\n        else {\n            message.recipient = '';\n        }\n        if (object.didOwner !== undefined && object.didOwner !== null) {\n            message.didOwner = object.didOwner;\n        }\n        else {\n            message.didOwner = '';\n        }\n        if (object.lazyMint !== undefined && object.lazyMint !== null) {\n            message.lazyMint = object.lazyMint;\n        }\n        else {\n            message.lazyMint = false;\n        }\n        if (object.price !== undefined && object.price !== null) {\n            message.price = object.price;\n        }\n        else {\n            message.price = 0;\n        }\n        if (object.metaTransaction !== undefined && object.metaTransaction !== null) {\n            message.metaTransaction = object.metaTransaction;\n        }\n        else {\n            message.metaTransaction = '';\n        }\n        if (object.destinationDomain !== undefined && object.destinationDomain !== null) {\n            message.destinationDomain = object.destinationDomain;\n        }\n        else {\n            message.destinationDomain = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgSendCrossMintTrustedResponse = { id: 0 };\nexport const MsgSendCrossMintTrustedResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== 0) {\n            writer.uint32(8).uint64(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSendCrossMintTrustedResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSendCrossMintTrustedResponse };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSendCrossMintTrustedResponse };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgMintSwapResponse = { id: 0 };\nexport const MsgMintSwapResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== 0) {\n            writer.uint32(8).uint64(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMintSwapResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMintSwapResponse };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMintSwapResponse };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgMintSwap = {\n    creator: '',\n    metadataRef: '',\n    denomId: '',\n    name: '',\n    recipient: '',\n    didOwner: '',\n    destinationDenomId: '',\n    price: 0,\n    r: '',\n    s: '',\n    v: 0\n};\nexport const MsgMintSwap = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.metadataRef !== '') {\n            writer.uint32(18).string(message.metadataRef);\n        }\n        if (message.denomId !== '') {\n            writer.uint32(26).string(message.denomId);\n        }\n        if (message.name !== '') {\n            writer.uint32(34).string(message.name);\n        }\n        if (message.recipient !== '') {\n            writer.uint32(42).string(message.recipient);\n        }\n        if (message.didOwner !== '') {\n            writer.uint32(50).string(message.didOwner);\n        }\n        if (message.destinationDenomId !== '') {\n            writer.uint32(58).string(message.destinationDenomId);\n        }\n        if (message.price !== 0) {\n            writer.uint32(64).uint64(message.price);\n        }\n        if (message.r !== '') {\n            writer.uint32(74).string(message.r);\n        }\n        if (message.s !== '') {\n            writer.uint32(82).string(message.s);\n        }\n        if (message.v !== 0) {\n            writer.uint32(88).uint64(message.v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMintSwap };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.metadataRef = reader.string();\n                    break;\n                case 3:\n                    message.denomId = reader.string();\n                    break;\n                case 4:\n                    message.name = reader.string();\n                    break;\n                case 5:\n                    message.recipient = reader.string();\n                    break;\n                case 6:\n                    message.didOwner = reader.string();\n                    break;\n                case 7:\n                    message.destinationDenomId = reader.string();\n                    break;\n                case 8:\n                    message.price = longToNumber(reader.uint64());\n                    break;\n                case 9:\n                    message.r = reader.string();\n                    break;\n                case 10:\n                    message.s = reader.string();\n                    break;\n                case 11:\n                    message.v = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMintSwap };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.metadataRef !== undefined && object.metadataRef !== null) {\n            message.metadataRef = String(object.metadataRef);\n        }\n        else {\n            message.metadataRef = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = String(object.recipient);\n        }\n        else {\n            message.recipient = '';\n        }\n        if (object.didOwner !== undefined && object.didOwner !== null) {\n            message.didOwner = String(object.didOwner);\n        }\n        else {\n            message.didOwner = '';\n        }\n        if (object.destinationDenomId !== undefined && object.destinationDenomId !== null) {\n            message.destinationDenomId = String(object.destinationDenomId);\n        }\n        else {\n            message.destinationDenomId = '';\n        }\n        if (object.price !== undefined && object.price !== null) {\n            message.price = Number(object.price);\n        }\n        else {\n            message.price = 0;\n        }\n        if (object.r !== undefined && object.r !== null) {\n            message.r = String(object.r);\n        }\n        else {\n            message.r = '';\n        }\n        if (object.s !== undefined && object.s !== null) {\n            message.s = String(object.s);\n        }\n        else {\n            message.s = '';\n        }\n        if (object.v !== undefined && object.v !== null) {\n            message.v = Number(object.v);\n        }\n        else {\n            message.v = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.metadataRef !== undefined && (obj.metadataRef = message.metadataRef);\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        message.name !== undefined && (obj.name = message.name);\n        message.recipient !== undefined && (obj.recipient = message.recipient);\n        message.didOwner !== undefined && (obj.didOwner = message.didOwner);\n        message.destinationDenomId !== undefined && (obj.destinationDenomId = message.destinationDenomId);\n        message.price !== undefined && (obj.price = message.price);\n        message.r !== undefined && (obj.r = message.r);\n        message.s !== undefined && (obj.s = message.s);\n        message.v !== undefined && (obj.v = message.v);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMintSwap };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.metadataRef !== undefined && object.metadataRef !== null) {\n            message.metadataRef = object.metadataRef;\n        }\n        else {\n            message.metadataRef = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = object.recipient;\n        }\n        else {\n            message.recipient = '';\n        }\n        if (object.didOwner !== undefined && object.didOwner !== null) {\n            message.didOwner = object.didOwner;\n        }\n        else {\n            message.didOwner = '';\n        }\n        if (object.destinationDenomId !== undefined && object.destinationDenomId !== null) {\n            message.destinationDenomId = object.destinationDenomId;\n        }\n        else {\n            message.destinationDenomId = '';\n        }\n        if (object.price !== undefined && object.price !== null) {\n            message.price = object.price;\n        }\n        else {\n            message.price = 0;\n        }\n        if (object.r !== undefined && object.r !== null) {\n            message.r = object.r;\n        }\n        else {\n            message.r = '';\n        }\n        if (object.s !== undefined && object.s !== null) {\n            message.s = object.s;\n        }\n        else {\n            message.s = '';\n        }\n        if (object.v !== undefined && object.v !== null) {\n            message.v = object.v;\n        }\n        else {\n            message.v = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgInitiateSwap = { creator: '' };\nexport const MsgInitiateSwap = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgInitiateSwap };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgInitiateSwap };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgInitiateSwap };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        return message;\n    }\n};\nconst baseMsgInitiateSwapResponse = { relayTo: 0, voucher: '', key: '' };\nexport const MsgInitiateSwapResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.relayTo !== 0) {\n            writer.uint32(8).uint64(message.relayTo);\n        }\n        if (message.voucher !== '') {\n            writer.uint32(18).string(message.voucher);\n        }\n        if (message.key !== '') {\n            writer.uint32(26).string(message.key);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgInitiateSwapResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.relayTo = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.voucher = reader.string();\n                    break;\n                case 3:\n                    message.key = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgInitiateSwapResponse };\n        if (object.relayTo !== undefined && object.relayTo !== null) {\n            message.relayTo = Number(object.relayTo);\n        }\n        else {\n            message.relayTo = 0;\n        }\n        if (object.voucher !== undefined && object.voucher !== null) {\n            message.voucher = String(object.voucher);\n        }\n        else {\n            message.voucher = '';\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = String(object.key);\n        }\n        else {\n            message.key = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.relayTo !== undefined && (obj.relayTo = message.relayTo);\n        message.voucher !== undefined && (obj.voucher = message.voucher);\n        message.key !== undefined && (obj.key = message.key);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgInitiateSwapResponse };\n        if (object.relayTo !== undefined && object.relayTo !== null) {\n            message.relayTo = object.relayTo;\n        }\n        else {\n            message.relayTo = 0;\n        }\n        if (object.voucher !== undefined && object.voucher !== null) {\n            message.voucher = object.voucher;\n        }\n        else {\n            message.voucher = '';\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = '';\n        }\n        return message;\n    }\n};\nconst baseMsgClaimSwap = { creator: '', did: '', metadata: '', cid: '' };\nexport const MsgClaimSwap = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.did !== '') {\n            writer.uint32(18).string(message.did);\n        }\n        if (message.metadata !== '') {\n            writer.uint32(26).string(message.metadata);\n        }\n        if (message.cid !== '') {\n            writer.uint32(34).string(message.cid);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgClaimSwap };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.did = reader.string();\n                    break;\n                case 3:\n                    message.metadata = reader.string();\n                    break;\n                case 4:\n                    message.cid = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgClaimSwap };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = String(object.did);\n        }\n        else {\n            message.did = '';\n        }\n        if (object.metadata !== undefined && object.metadata !== null) {\n            message.metadata = String(object.metadata);\n        }\n        else {\n            message.metadata = '';\n        }\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = String(object.cid);\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.did !== undefined && (obj.did = message.did);\n        message.metadata !== undefined && (obj.metadata = message.metadata);\n        message.cid !== undefined && (obj.cid = message.cid);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgClaimSwap };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = object.did;\n        }\n        else {\n            message.did = '';\n        }\n        if (object.metadata !== undefined && object.metadata !== null) {\n            message.metadata = object.metadata;\n        }\n        else {\n            message.metadata = '';\n        }\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = object.cid;\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    }\n};\nconst baseMsgClaimSwapResponse = { id: 0 };\nexport const MsgClaimSwapResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== 0) {\n            writer.uint32(8).uint64(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgClaimSwapResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgClaimSwapResponse };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgClaimSwapResponse };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgMintTrustedResource = {\n    creator: '',\n    metadataRef: '',\n    didOwner: '',\n    denomId: '',\n    name: '',\n    recipient: '',\n    resourceWhitelistAccess: '',\n    resourceLocation: '',\n    lazyMint: false,\n    price: 0,\n    r: '',\n    s: '',\n    v: 0\n};\nexport const MsgMintTrustedResource = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.metadataRef !== '') {\n            writer.uint32(18).string(message.metadataRef);\n        }\n        if (message.didOwner !== '') {\n            writer.uint32(26).string(message.didOwner);\n        }\n        if (message.denomId !== '') {\n            writer.uint32(34).string(message.denomId);\n        }\n        if (message.name !== '') {\n            writer.uint32(42).string(message.name);\n        }\n        if (message.recipient !== '') {\n            writer.uint32(50).string(message.recipient);\n        }\n        for (const v of message.resourceWhitelistAccess) {\n            writer.uint32(58).string(v);\n        }\n        if (message.resourceLocation !== '') {\n            writer.uint32(66).string(message.resourceLocation);\n        }\n        if (message.lazyMint === true) {\n            writer.uint32(72).bool(message.lazyMint);\n        }\n        if (message.price !== 0) {\n            writer.uint32(80).uint64(message.price);\n        }\n        if (message.r !== '') {\n            writer.uint32(90).string(message.r);\n        }\n        if (message.s !== '') {\n            writer.uint32(98).string(message.s);\n        }\n        if (message.v !== 0) {\n            writer.uint32(104).uint64(message.v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMintTrustedResource };\n        message.resourceWhitelistAccess = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.metadataRef = reader.string();\n                    break;\n                case 3:\n                    message.didOwner = reader.string();\n                    break;\n                case 4:\n                    message.denomId = reader.string();\n                    break;\n                case 5:\n                    message.name = reader.string();\n                    break;\n                case 6:\n                    message.recipient = reader.string();\n                    break;\n                case 7:\n                    message.resourceWhitelistAccess.push(reader.string());\n                    break;\n                case 8:\n                    message.resourceLocation = reader.string();\n                    break;\n                case 9:\n                    message.lazyMint = reader.bool();\n                    break;\n                case 10:\n                    message.price = longToNumber(reader.uint64());\n                    break;\n                case 11:\n                    message.r = reader.string();\n                    break;\n                case 12:\n                    message.s = reader.string();\n                    break;\n                case 13:\n                    message.v = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMintTrustedResource };\n        message.resourceWhitelistAccess = [];\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.metadataRef !== undefined && object.metadataRef !== null) {\n            message.metadataRef = String(object.metadataRef);\n        }\n        else {\n            message.metadataRef = '';\n        }\n        if (object.didOwner !== undefined && object.didOwner !== null) {\n            message.didOwner = String(object.didOwner);\n        }\n        else {\n            message.didOwner = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = String(object.recipient);\n        }\n        else {\n            message.recipient = '';\n        }\n        if (object.resourceWhitelistAccess !== undefined && object.resourceWhitelistAccess !== null) {\n            for (const e of object.resourceWhitelistAccess) {\n                message.resourceWhitelistAccess.push(String(e));\n            }\n        }\n        if (object.resourceLocation !== undefined && object.resourceLocation !== null) {\n            message.resourceLocation = String(object.resourceLocation);\n        }\n        else {\n            message.resourceLocation = '';\n        }\n        if (object.lazyMint !== undefined && object.lazyMint !== null) {\n            message.lazyMint = Boolean(object.lazyMint);\n        }\n        else {\n            message.lazyMint = false;\n        }\n        if (object.price !== undefined && object.price !== null) {\n            message.price = Number(object.price);\n        }\n        else {\n            message.price = 0;\n        }\n        if (object.r !== undefined && object.r !== null) {\n            message.r = String(object.r);\n        }\n        else {\n            message.r = '';\n        }\n        if (object.s !== undefined && object.s !== null) {\n            message.s = String(object.s);\n        }\n        else {\n            message.s = '';\n        }\n        if (object.v !== undefined && object.v !== null) {\n            message.v = Number(object.v);\n        }\n        else {\n            message.v = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.metadataRef !== undefined && (obj.metadataRef = message.metadataRef);\n        message.didOwner !== undefined && (obj.didOwner = message.didOwner);\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        message.name !== undefined && (obj.name = message.name);\n        message.recipient !== undefined && (obj.recipient = message.recipient);\n        if (message.resourceWhitelistAccess) {\n            obj.resourceWhitelistAccess = message.resourceWhitelistAccess.map((e) => e);\n        }\n        else {\n            obj.resourceWhitelistAccess = [];\n        }\n        message.resourceLocation !== undefined && (obj.resourceLocation = message.resourceLocation);\n        message.lazyMint !== undefined && (obj.lazyMint = message.lazyMint);\n        message.price !== undefined && (obj.price = message.price);\n        message.r !== undefined && (obj.r = message.r);\n        message.s !== undefined && (obj.s = message.s);\n        message.v !== undefined && (obj.v = message.v);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMintTrustedResource };\n        message.resourceWhitelistAccess = [];\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.metadataRef !== undefined && object.metadataRef !== null) {\n            message.metadataRef = object.metadataRef;\n        }\n        else {\n            message.metadataRef = '';\n        }\n        if (object.didOwner !== undefined && object.didOwner !== null) {\n            message.didOwner = object.didOwner;\n        }\n        else {\n            message.didOwner = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = object.recipient;\n        }\n        else {\n            message.recipient = '';\n        }\n        if (object.resourceWhitelistAccess !== undefined && object.resourceWhitelistAccess !== null) {\n            for (const e of object.resourceWhitelistAccess) {\n                message.resourceWhitelistAccess.push(e);\n            }\n        }\n        if (object.resourceLocation !== undefined && object.resourceLocation !== null) {\n            message.resourceLocation = object.resourceLocation;\n        }\n        else {\n            message.resourceLocation = '';\n        }\n        if (object.lazyMint !== undefined && object.lazyMint !== null) {\n            message.lazyMint = object.lazyMint;\n        }\n        else {\n            message.lazyMint = false;\n        }\n        if (object.price !== undefined && object.price !== null) {\n            message.price = object.price;\n        }\n        else {\n            message.price = 0;\n        }\n        if (object.r !== undefined && object.r !== null) {\n            message.r = object.r;\n        }\n        else {\n            message.r = '';\n        }\n        if (object.s !== undefined && object.s !== null) {\n            message.s = object.s;\n        }\n        else {\n            message.s = '';\n        }\n        if (object.v !== undefined && object.v !== null) {\n            message.v = object.v;\n        }\n        else {\n            message.v = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgMintTrustedResourceResponse = { id: 0 };\nexport const MsgMintTrustedResourceResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== 0) {\n            writer.uint32(8).uint64(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMintTrustedResourceResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMintTrustedResourceResponse };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMintTrustedResourceResponse };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgRoyaltyInfo = { creator: '', id: '', receiver: '', royaltyFeePercentage: 0, metadataRef: '', denomId: '' };\nexport const MsgRoyaltyInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.id !== '') {\n            writer.uint32(18).string(message.id);\n        }\n        if (message.receiver !== '') {\n            writer.uint32(26).string(message.receiver);\n        }\n        if (message.royaltyFeePercentage !== 0) {\n            writer.uint32(32).uint64(message.royaltyFeePercentage);\n        }\n        if (message.metadataRef !== '') {\n            writer.uint32(42).string(message.metadataRef);\n        }\n        if (message.denomId !== '') {\n            writer.uint32(50).string(message.denomId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRoyaltyInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.id = reader.string();\n                    break;\n                case 3:\n                    message.receiver = reader.string();\n                    break;\n                case 4:\n                    message.royaltyFeePercentage = longToNumber(reader.uint64());\n                    break;\n                case 5:\n                    message.metadataRef = reader.string();\n                    break;\n                case 6:\n                    message.denomId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRoyaltyInfo };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = String(object.receiver);\n        }\n        else {\n            message.receiver = '';\n        }\n        if (object.royaltyFeePercentage !== undefined && object.royaltyFeePercentage !== null) {\n            message.royaltyFeePercentage = Number(object.royaltyFeePercentage);\n        }\n        else {\n            message.royaltyFeePercentage = 0;\n        }\n        if (object.metadataRef !== undefined && object.metadataRef !== null) {\n            message.metadataRef = String(object.metadataRef);\n        }\n        else {\n            message.metadataRef = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.id !== undefined && (obj.id = message.id);\n        message.receiver !== undefined && (obj.receiver = message.receiver);\n        message.royaltyFeePercentage !== undefined && (obj.royaltyFeePercentage = message.royaltyFeePercentage);\n        message.metadataRef !== undefined && (obj.metadataRef = message.metadataRef);\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRoyaltyInfo };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = object.receiver;\n        }\n        else {\n            message.receiver = '';\n        }\n        if (object.royaltyFeePercentage !== undefined && object.royaltyFeePercentage !== null) {\n            message.royaltyFeePercentage = object.royaltyFeePercentage;\n        }\n        else {\n            message.royaltyFeePercentage = 0;\n        }\n        if (object.metadataRef !== undefined && object.metadataRef !== null) {\n            message.metadataRef = object.metadataRef;\n        }\n        else {\n            message.metadataRef = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        return message;\n    }\n};\nconst baseMsgRoyaltyInfoResponse = { receiver: '', royaltyFeePercentage: 0, metadataRef: '' };\nexport const MsgRoyaltyInfoResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.receiver !== '') {\n            writer.uint32(10).string(message.receiver);\n        }\n        if (message.royaltyFeePercentage !== 0) {\n            writer.uint32(16).uint64(message.royaltyFeePercentage);\n        }\n        if (message.metadataRef !== '') {\n            writer.uint32(26).string(message.metadataRef);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRoyaltyInfoResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.receiver = reader.string();\n                    break;\n                case 2:\n                    message.royaltyFeePercentage = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.metadataRef = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRoyaltyInfoResponse };\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = String(object.receiver);\n        }\n        else {\n            message.receiver = '';\n        }\n        if (object.royaltyFeePercentage !== undefined && object.royaltyFeePercentage !== null) {\n            message.royaltyFeePercentage = Number(object.royaltyFeePercentage);\n        }\n        else {\n            message.royaltyFeePercentage = 0;\n        }\n        if (object.metadataRef !== undefined && object.metadataRef !== null) {\n            message.metadataRef = String(object.metadataRef);\n        }\n        else {\n            message.metadataRef = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.receiver !== undefined && (obj.receiver = message.receiver);\n        message.royaltyFeePercentage !== undefined && (obj.royaltyFeePercentage = message.royaltyFeePercentage);\n        message.metadataRef !== undefined && (obj.metadataRef = message.metadataRef);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRoyaltyInfoResponse };\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = object.receiver;\n        }\n        else {\n            message.receiver = '';\n        }\n        if (object.royaltyFeePercentage !== undefined && object.royaltyFeePercentage !== null) {\n            message.royaltyFeePercentage = object.royaltyFeePercentage;\n        }\n        else {\n            message.royaltyFeePercentage = 0;\n        }\n        if (object.metadataRef !== undefined && object.metadataRef !== null) {\n            message.metadataRef = object.metadataRef;\n        }\n        else {\n            message.metadataRef = '';\n        }\n        return message;\n    }\n};\nconst baseMsgIssueDenom = { id: '', name: '', schema: '', sender: '', symbol: '', mintRestricted: false, updateRestricted: false };\nexport const MsgIssueDenom = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.name !== '') {\n            writer.uint32(18).string(message.name);\n        }\n        if (message.schema !== '') {\n            writer.uint32(26).string(message.schema);\n        }\n        if (message.sender !== '') {\n            writer.uint32(34).string(message.sender);\n        }\n        if (message.symbol !== '') {\n            writer.uint32(42).string(message.symbol);\n        }\n        if (message.mintRestricted === true) {\n            writer.uint32(48).bool(message.mintRestricted);\n        }\n        if (message.updateRestricted === true) {\n            writer.uint32(56).bool(message.updateRestricted);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgIssueDenom };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.name = reader.string();\n                    break;\n                case 3:\n                    message.schema = reader.string();\n                    break;\n                case 4:\n                    message.sender = reader.string();\n                    break;\n                case 5:\n                    message.symbol = reader.string();\n                    break;\n                case 6:\n                    message.mintRestricted = reader.bool();\n                    break;\n                case 7:\n                    message.updateRestricted = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgIssueDenom };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.schema !== undefined && object.schema !== null) {\n            message.schema = String(object.schema);\n        }\n        else {\n            message.schema = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.symbol !== undefined && object.symbol !== null) {\n            message.symbol = String(object.symbol);\n        }\n        else {\n            message.symbol = '';\n        }\n        if (object.mintRestricted !== undefined && object.mintRestricted !== null) {\n            message.mintRestricted = Boolean(object.mintRestricted);\n        }\n        else {\n            message.mintRestricted = false;\n        }\n        if (object.updateRestricted !== undefined && object.updateRestricted !== null) {\n            message.updateRestricted = Boolean(object.updateRestricted);\n        }\n        else {\n            message.updateRestricted = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.name !== undefined && (obj.name = message.name);\n        message.schema !== undefined && (obj.schema = message.schema);\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.symbol !== undefined && (obj.symbol = message.symbol);\n        message.mintRestricted !== undefined && (obj.mintRestricted = message.mintRestricted);\n        message.updateRestricted !== undefined && (obj.updateRestricted = message.updateRestricted);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgIssueDenom };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.schema !== undefined && object.schema !== null) {\n            message.schema = object.schema;\n        }\n        else {\n            message.schema = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.symbol !== undefined && object.symbol !== null) {\n            message.symbol = object.symbol;\n        }\n        else {\n            message.symbol = '';\n        }\n        if (object.mintRestricted !== undefined && object.mintRestricted !== null) {\n            message.mintRestricted = object.mintRestricted;\n        }\n        else {\n            message.mintRestricted = false;\n        }\n        if (object.updateRestricted !== undefined && object.updateRestricted !== null) {\n            message.updateRestricted = object.updateRestricted;\n        }\n        else {\n            message.updateRestricted = false;\n        }\n        return message;\n    }\n};\nconst baseMsgIssueDenomResponse = {};\nexport const MsgIssueDenomResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgIssueDenomResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgIssueDenomResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgIssueDenomResponse };\n        return message;\n    }\n};\nconst baseMsgTransferNFT = { id: '', denomId: '', name: '', uri: '', data: '', sender: '', recipient: '' };\nexport const MsgTransferNFT = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.denomId !== '') {\n            writer.uint32(18).string(message.denomId);\n        }\n        if (message.name !== '') {\n            writer.uint32(26).string(message.name);\n        }\n        if (message.uri !== '') {\n            writer.uint32(34).string(message.uri);\n        }\n        if (message.data !== '') {\n            writer.uint32(42).string(message.data);\n        }\n        if (message.sender !== '') {\n            writer.uint32(50).string(message.sender);\n        }\n        if (message.recipient !== '') {\n            writer.uint32(58).string(message.recipient);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTransferNFT };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.denomId = reader.string();\n                    break;\n                case 3:\n                    message.name = reader.string();\n                    break;\n                case 4:\n                    message.uri = reader.string();\n                    break;\n                case 5:\n                    message.data = reader.string();\n                    break;\n                case 6:\n                    message.sender = reader.string();\n                    break;\n                case 7:\n                    message.recipient = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgTransferNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.uri !== undefined && object.uri !== null) {\n            message.uri = String(object.uri);\n        }\n        else {\n            message.uri = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = String(object.data);\n        }\n        else {\n            message.data = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = String(object.recipient);\n        }\n        else {\n            message.recipient = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        message.name !== undefined && (obj.name = message.name);\n        message.uri !== undefined && (obj.uri = message.uri);\n        message.data !== undefined && (obj.data = message.data);\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.recipient !== undefined && (obj.recipient = message.recipient);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgTransferNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.uri !== undefined && object.uri !== null) {\n            message.uri = object.uri;\n        }\n        else {\n            message.uri = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = object.recipient;\n        }\n        else {\n            message.recipient = '';\n        }\n        return message;\n    }\n};\nconst baseMsgChangeOwnerResponse = { identity: '', owner: '', previousChange: 0 };\nexport const MsgChangeOwnerResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.identity !== '') {\n            writer.uint32(10).string(message.identity);\n        }\n        if (message.owner !== '') {\n            writer.uint32(18).string(message.owner);\n        }\n        if (message.previousChange !== 0) {\n            writer.uint32(24).uint64(message.previousChange);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChangeOwnerResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.identity = reader.string();\n                    break;\n                case 2:\n                    message.owner = reader.string();\n                    break;\n                case 3:\n                    message.previousChange = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChangeOwnerResponse };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = String(object.owner);\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.previousChange !== undefined && object.previousChange !== null) {\n            message.previousChange = Number(object.previousChange);\n        }\n        else {\n            message.previousChange = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.identity !== undefined && (obj.identity = message.identity);\n        message.owner !== undefined && (obj.owner = message.owner);\n        message.previousChange !== undefined && (obj.previousChange = message.previousChange);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChangeOwnerResponse };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = object.owner;\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.previousChange !== undefined && object.previousChange !== null) {\n            message.previousChange = object.previousChange;\n        }\n        else {\n            message.previousChange = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgCreateDIDOwner = { creator: '', owner: '', didKey: '', didWeb: '' };\nexport const MsgCreateDIDOwner = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.owner !== '') {\n            writer.uint32(18).string(message.owner);\n        }\n        if (message.didKey !== '') {\n            writer.uint32(26).string(message.didKey);\n        }\n        if (message.didWeb !== '') {\n            writer.uint32(34).string(message.didWeb);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateDIDOwner };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.owner = reader.string();\n                    break;\n                case 3:\n                    message.didKey = reader.string();\n                    break;\n                case 4:\n                    message.didWeb = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateDIDOwner };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = String(object.owner);\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.didKey !== undefined && object.didKey !== null) {\n            message.didKey = String(object.didKey);\n        }\n        else {\n            message.didKey = '';\n        }\n        if (object.didWeb !== undefined && object.didWeb !== null) {\n            message.didWeb = String(object.didWeb);\n        }\n        else {\n            message.didWeb = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.owner !== undefined && (obj.owner = message.owner);\n        message.didKey !== undefined && (obj.didKey = message.didKey);\n        message.didWeb !== undefined && (obj.didWeb = message.didWeb);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateDIDOwner };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = object.owner;\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.didKey !== undefined && object.didKey !== null) {\n            message.didKey = object.didKey;\n        }\n        else {\n            message.didKey = '';\n        }\n        if (object.didWeb !== undefined && object.didWeb !== null) {\n            message.didWeb = object.didWeb;\n        }\n        else {\n            message.didWeb = '';\n        }\n        return message;\n    }\n};\nconst baseMsgCreateDIDOwnerResponse = {};\nexport const MsgCreateDIDOwnerResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateDIDOwnerResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgCreateDIDOwnerResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgCreateDIDOwnerResponse };\n        return message;\n    }\n};\nconst baseMsgChangeOwner = { creator: '', identity: '', newOwner: '' };\nexport const MsgChangeOwner = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.identity !== '') {\n            writer.uint32(18).string(message.identity);\n        }\n        if (message.newOwner !== '') {\n            writer.uint32(26).string(message.newOwner);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChangeOwner };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.identity = reader.string();\n                    break;\n                case 3:\n                    message.newOwner = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChangeOwner };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.newOwner !== undefined && object.newOwner !== null) {\n            message.newOwner = String(object.newOwner);\n        }\n        else {\n            message.newOwner = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.identity !== undefined && (obj.identity = message.identity);\n        message.newOwner !== undefined && (obj.newOwner = message.newOwner);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChangeOwner };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.newOwner !== undefined && object.newOwner !== null) {\n            message.newOwner = object.newOwner;\n        }\n        else {\n            message.newOwner = '';\n        }\n        return message;\n    }\n};\nconst baseMsgGrantDelegate = { delegate: '', delegateType: '', validity: 0, creator: '', identity: '' };\nexport const MsgGrantDelegate = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegate !== '') {\n            writer.uint32(10).string(message.delegate);\n        }\n        if (message.delegateType !== '') {\n            writer.uint32(18).string(message.delegateType);\n        }\n        if (message.validity !== 0) {\n            writer.uint32(24).uint64(message.validity);\n        }\n        if (message.creator !== '') {\n            writer.uint32(34).string(message.creator);\n        }\n        if (message.identity !== '') {\n            writer.uint32(42).string(message.identity);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgGrantDelegate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegate = reader.string();\n                    break;\n                case 2:\n                    message.delegateType = reader.string();\n                    break;\n                case 3:\n                    message.validity = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.creator = reader.string();\n                    break;\n                case 5:\n                    message.identity = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgGrantDelegate };\n        if (object.delegate !== undefined && object.delegate !== null) {\n            message.delegate = String(object.delegate);\n        }\n        else {\n            message.delegate = '';\n        }\n        if (object.delegateType !== undefined && object.delegateType !== null) {\n            message.delegateType = String(object.delegateType);\n        }\n        else {\n            message.delegateType = '';\n        }\n        if (object.validity !== undefined && object.validity !== null) {\n            message.validity = Number(object.validity);\n        }\n        else {\n            message.validity = 0;\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegate !== undefined && (obj.delegate = message.delegate);\n        message.delegateType !== undefined && (obj.delegateType = message.delegateType);\n        message.validity !== undefined && (obj.validity = message.validity);\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.identity !== undefined && (obj.identity = message.identity);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgGrantDelegate };\n        if (object.delegate !== undefined && object.delegate !== null) {\n            message.delegate = object.delegate;\n        }\n        else {\n            message.delegate = '';\n        }\n        if (object.delegateType !== undefined && object.delegateType !== null) {\n            message.delegateType = object.delegateType;\n        }\n        else {\n            message.delegateType = '';\n        }\n        if (object.validity !== undefined && object.validity !== null) {\n            message.validity = object.validity;\n        }\n        else {\n            message.validity = 0;\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        return message;\n    }\n};\nconst baseMsgGrantDelegateResponse = {};\nexport const MsgGrantDelegateResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgGrantDelegateResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgGrantDelegateResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgGrantDelegateResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseMsgRevokeDelegate = { delegate: '', delegateType: '', validity: 0, creator: '', identity: '' };\nexport const MsgRevokeDelegate = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegate !== '') {\n            writer.uint32(10).string(message.delegate);\n        }\n        if (message.delegateType !== '') {\n            writer.uint32(18).string(message.delegateType);\n        }\n        if (message.validity !== 0) {\n            writer.uint32(24).uint64(message.validity);\n        }\n        if (message.creator !== '') {\n            writer.uint32(34).string(message.creator);\n        }\n        if (message.identity !== '') {\n            writer.uint32(42).string(message.identity);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRevokeDelegate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegate = reader.string();\n                    break;\n                case 2:\n                    message.delegateType = reader.string();\n                    break;\n                case 3:\n                    message.validity = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.creator = reader.string();\n                    break;\n                case 5:\n                    message.identity = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRevokeDelegate };\n        if (object.delegate !== undefined && object.delegate !== null) {\n            message.delegate = String(object.delegate);\n        }\n        else {\n            message.delegate = '';\n        }\n        if (object.delegateType !== undefined && object.delegateType !== null) {\n            message.delegateType = String(object.delegateType);\n        }\n        else {\n            message.delegateType = '';\n        }\n        if (object.validity !== undefined && object.validity !== null) {\n            message.validity = Number(object.validity);\n        }\n        else {\n            message.validity = 0;\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegate !== undefined && (obj.delegate = message.delegate);\n        message.delegateType !== undefined && (obj.delegateType = message.delegateType);\n        message.validity !== undefined && (obj.validity = message.validity);\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.identity !== undefined && (obj.identity = message.identity);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRevokeDelegate };\n        if (object.delegate !== undefined && object.delegate !== null) {\n            message.delegate = object.delegate;\n        }\n        else {\n            message.delegate = '';\n        }\n        if (object.delegateType !== undefined && object.delegateType !== null) {\n            message.delegateType = object.delegateType;\n        }\n        else {\n            message.delegateType = '';\n        }\n        if (object.validity !== undefined && object.validity !== null) {\n            message.validity = object.validity;\n        }\n        else {\n            message.validity = 0;\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        return message;\n    }\n};\nconst baseMsgRevokeDelegateResponse = {};\nexport const MsgRevokeDelegateResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRevokeDelegateResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRevokeDelegateResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRevokeDelegateResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseMsgSetAttribute = { identity: '', actor: '', creator: '' };\nexport const MsgSetAttribute = {\n    encode(message, writer = Writer.create()) {\n        if (message.identity !== '') {\n            writer.uint32(10).string(message.identity);\n        }\n        if (message.actor !== '') {\n            writer.uint32(18).string(message.actor);\n        }\n        if (message.creator !== '') {\n            writer.uint32(26).string(message.creator);\n        }\n        if (message.name.length !== 0) {\n            writer.uint32(34).bytes(message.name);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(42).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSetAttribute };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.identity = reader.string();\n                    break;\n                case 2:\n                    message.actor = reader.string();\n                    break;\n                case 3:\n                    message.creator = reader.string();\n                    break;\n                case 4:\n                    message.name = reader.bytes();\n                    break;\n                case 5:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSetAttribute };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.actor !== undefined && object.actor !== null) {\n            message.actor = String(object.actor);\n        }\n        else {\n            message.actor = '';\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = bytesFromBase64(object.name);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.identity !== undefined && (obj.identity = message.identity);\n        message.actor !== undefined && (obj.actor = message.actor);\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.name !== undefined && (obj.name = base64FromBytes(message.name !== undefined ? message.name : new Uint8Array()));\n        message.value !== undefined && (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSetAttribute };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.actor !== undefined && object.actor !== null) {\n            message.actor = object.actor;\n        }\n        else {\n            message.actor = '';\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseMsgSetAttributeResponse = {};\nexport const MsgSetAttributeResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSetAttributeResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSetAttributeResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSetAttributeResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseMsgGrantAttribute = { identity: '', actor: '', creator: '', validity: 0 };\nexport const MsgGrantAttribute = {\n    encode(message, writer = Writer.create()) {\n        if (message.identity !== '') {\n            writer.uint32(10).string(message.identity);\n        }\n        if (message.actor !== '') {\n            writer.uint32(18).string(message.actor);\n        }\n        if (message.name.length !== 0) {\n            writer.uint32(26).bytes(message.name);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(34).bytes(message.value);\n        }\n        if (message.creator !== '') {\n            writer.uint32(42).string(message.creator);\n        }\n        if (message.validity !== 0) {\n            writer.uint32(48).uint64(message.validity);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgGrantAttribute };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.identity = reader.string();\n                    break;\n                case 2:\n                    message.actor = reader.string();\n                    break;\n                case 3:\n                    message.name = reader.bytes();\n                    break;\n                case 4:\n                    message.value = reader.bytes();\n                    break;\n                case 5:\n                    message.creator = reader.string();\n                    break;\n                case 6:\n                    message.validity = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgGrantAttribute };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.actor !== undefined && object.actor !== null) {\n            message.actor = String(object.actor);\n        }\n        else {\n            message.actor = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = bytesFromBase64(object.name);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.validity !== undefined && object.validity !== null) {\n            message.validity = Number(object.validity);\n        }\n        else {\n            message.validity = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.identity !== undefined && (obj.identity = message.identity);\n        message.actor !== undefined && (obj.actor = message.actor);\n        message.name !== undefined && (obj.name = base64FromBytes(message.name !== undefined ? message.name : new Uint8Array()));\n        message.value !== undefined && (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.validity !== undefined && (obj.validity = message.validity);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgGrantAttribute };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.actor !== undefined && object.actor !== null) {\n            message.actor = object.actor;\n        }\n        else {\n            message.actor = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.validity !== undefined && object.validity !== null) {\n            message.validity = object.validity;\n        }\n        else {\n            message.validity = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgGrantAttributeResponse = { ok: false };\nexport const MsgGrantAttributeResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.ok === true) {\n            writer.uint32(8).bool(message.ok);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgGrantAttributeResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.ok = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgGrantAttributeResponse };\n        if (object.ok !== undefined && object.ok !== null) {\n            message.ok = Boolean(object.ok);\n        }\n        else {\n            message.ok = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.ok !== undefined && (obj.ok = message.ok);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgGrantAttributeResponse };\n        if (object.ok !== undefined && object.ok !== null) {\n            message.ok = object.ok;\n        }\n        else {\n            message.ok = false;\n        }\n        return message;\n    }\n};\nconst baseMsgRevokeAttribute = { identity: '', actor: '', creator: '' };\nexport const MsgRevokeAttribute = {\n    encode(message, writer = Writer.create()) {\n        if (message.identity !== '') {\n            writer.uint32(10).string(message.identity);\n        }\n        if (message.actor !== '') {\n            writer.uint32(18).string(message.actor);\n        }\n        if (message.name.length !== 0) {\n            writer.uint32(26).bytes(message.name);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(34).bytes(message.value);\n        }\n        if (message.creator !== '') {\n            writer.uint32(42).string(message.creator);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRevokeAttribute };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.identity = reader.string();\n                    break;\n                case 2:\n                    message.actor = reader.string();\n                    break;\n                case 3:\n                    message.name = reader.bytes();\n                    break;\n                case 4:\n                    message.value = reader.bytes();\n                    break;\n                case 5:\n                    message.creator = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRevokeAttribute };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.actor !== undefined && object.actor !== null) {\n            message.actor = String(object.actor);\n        }\n        else {\n            message.actor = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = bytesFromBase64(object.name);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.identity !== undefined && (obj.identity = message.identity);\n        message.actor !== undefined && (obj.actor = message.actor);\n        message.name !== undefined && (obj.name = base64FromBytes(message.name !== undefined ? message.name : new Uint8Array()));\n        message.value !== undefined && (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        message.creator !== undefined && (obj.creator = message.creator);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRevokeAttribute };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.actor !== undefined && object.actor !== null) {\n            message.actor = object.actor;\n        }\n        else {\n            message.actor = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        return message;\n    }\n};\nconst baseMsgRevokeAttributeResponse = {};\nexport const MsgRevokeAttributeResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRevokeAttributeResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRevokeAttributeResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRevokeAttributeResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseMsgTransferNFTResponse = {};\nexport const MsgTransferNFTResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTransferNFTResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgTransferNFTResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgTransferNFTResponse };\n        return message;\n    }\n};\nconst baseMsgEditNFT = { id: '', denomId: '', name: '', uri: '', data: '', sender: '' };\nexport const MsgEditNFT = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.denomId !== '') {\n            writer.uint32(18).string(message.denomId);\n        }\n        if (message.name !== '') {\n            writer.uint32(26).string(message.name);\n        }\n        if (message.uri !== '') {\n            writer.uint32(34).string(message.uri);\n        }\n        if (message.data !== '') {\n            writer.uint32(42).string(message.data);\n        }\n        if (message.sender !== '') {\n            writer.uint32(50).string(message.sender);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgEditNFT };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.denomId = reader.string();\n                    break;\n                case 3:\n                    message.name = reader.string();\n                    break;\n                case 4:\n                    message.uri = reader.string();\n                    break;\n                case 5:\n                    message.data = reader.string();\n                    break;\n                case 6:\n                    message.sender = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgEditNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.uri !== undefined && object.uri !== null) {\n            message.uri = String(object.uri);\n        }\n        else {\n            message.uri = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = String(object.data);\n        }\n        else {\n            message.data = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        message.name !== undefined && (obj.name = message.name);\n        message.uri !== undefined && (obj.uri = message.uri);\n        message.data !== undefined && (obj.data = message.data);\n        message.sender !== undefined && (obj.sender = message.sender);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgEditNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.uri !== undefined && object.uri !== null) {\n            message.uri = object.uri;\n        }\n        else {\n            message.uri = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        return message;\n    }\n};\nconst baseMsgEditNFTResponse = {};\nexport const MsgEditNFTResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgEditNFTResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgEditNFTResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgEditNFTResponse };\n        return message;\n    }\n};\nconst baseMsgMintNFT = { id: '', denomId: '', name: '', uri: '', data: '', sender: '', recipient: '' };\nexport const MsgMintNFT = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.denomId !== '') {\n            writer.uint32(18).string(message.denomId);\n        }\n        if (message.name !== '') {\n            writer.uint32(26).string(message.name);\n        }\n        if (message.uri !== '') {\n            writer.uint32(34).string(message.uri);\n        }\n        if (message.data !== '') {\n            writer.uint32(42).string(message.data);\n        }\n        if (message.sender !== '') {\n            writer.uint32(50).string(message.sender);\n        }\n        if (message.recipient !== '') {\n            writer.uint32(58).string(message.recipient);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMintNFT };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.denomId = reader.string();\n                    break;\n                case 3:\n                    message.name = reader.string();\n                    break;\n                case 4:\n                    message.uri = reader.string();\n                    break;\n                case 5:\n                    message.data = reader.string();\n                    break;\n                case 6:\n                    message.sender = reader.string();\n                    break;\n                case 7:\n                    message.recipient = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMintNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.uri !== undefined && object.uri !== null) {\n            message.uri = String(object.uri);\n        }\n        else {\n            message.uri = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = String(object.data);\n        }\n        else {\n            message.data = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = String(object.recipient);\n        }\n        else {\n            message.recipient = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        message.name !== undefined && (obj.name = message.name);\n        message.uri !== undefined && (obj.uri = message.uri);\n        message.data !== undefined && (obj.data = message.data);\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.recipient !== undefined && (obj.recipient = message.recipient);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMintNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.uri !== undefined && object.uri !== null) {\n            message.uri = object.uri;\n        }\n        else {\n            message.uri = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = object.recipient;\n        }\n        else {\n            message.recipient = '';\n        }\n        return message;\n    }\n};\nconst baseMsgMintNFTResponse = {};\nexport const MsgMintNFTResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMintNFTResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgMintNFTResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgMintNFTResponse };\n        return message;\n    }\n};\nconst baseMsgBurnNFT = { id: '', denomId: '', sender: '' };\nexport const MsgBurnNFT = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.denomId !== '') {\n            writer.uint32(18).string(message.denomId);\n        }\n        if (message.sender !== '') {\n            writer.uint32(26).string(message.sender);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgBurnNFT };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.denomId = reader.string();\n                    break;\n                case 3:\n                    message.sender = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgBurnNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        message.sender !== undefined && (obj.sender = message.sender);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgBurnNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        return message;\n    }\n};\nconst baseMsgBurnNFTResponse = {};\nexport const MsgBurnNFTResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgBurnNFTResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgBurnNFTResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgBurnNFTResponse };\n        return message;\n    }\n};\nconst baseMsgTransferDenom = { id: '', sender: '', recipient: '' };\nexport const MsgTransferDenom = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.sender !== '') {\n            writer.uint32(18).string(message.sender);\n        }\n        if (message.recipient !== '') {\n            writer.uint32(26).string(message.recipient);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTransferDenom };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.sender = reader.string();\n                    break;\n                case 3:\n                    message.recipient = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgTransferDenom };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = String(object.recipient);\n        }\n        else {\n            message.recipient = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.recipient !== undefined && (obj.recipient = message.recipient);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgTransferDenom };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = object.recipient;\n        }\n        else {\n            message.recipient = '';\n        }\n        return message;\n    }\n};\nconst baseMsgTransferDenomResponse = {};\nexport const MsgTransferDenomResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTransferDenomResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgTransferDenomResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgTransferDenomResponse };\n        return message;\n    }\n};\nconst baseMsgFileMetadataResponse = {};\nexport const MsgFileMetadataResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgFileMetadataResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgFileMetadataResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgFileMetadataResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseMsgMetadata = {\n    creator: '',\n    name: '',\n    description: '',\n    image: '',\n    owner: '',\n    parent: '',\n    additionalSources: '',\n    links: '',\n    verifiedCredentialRef: '',\n    did: '',\n    from: '',\n    enableIpldForestAccess: false,\n    factRef: ''\n};\nexport const MsgMetadata = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.name !== '') {\n            writer.uint32(18).string(message.name);\n        }\n        if (message.description !== '') {\n            writer.uint32(26).string(message.description);\n        }\n        if (message.image !== '') {\n            writer.uint32(34).string(message.image);\n        }\n        if (message.owner !== '') {\n            writer.uint32(42).string(message.owner);\n        }\n        if (message.parent !== '') {\n            writer.uint32(50).string(message.parent);\n        }\n        for (const v of message.additionalSources) {\n            writer.uint32(58).string(v);\n        }\n        for (const v of message.links) {\n            writer.uint32(66).string(v);\n        }\n        if (message.verifiedCredentialRef !== '') {\n            writer.uint32(74).string(message.verifiedCredentialRef);\n        }\n        if (message.did !== '') {\n            writer.uint32(82).string(message.did);\n        }\n        if (message.from !== '') {\n            writer.uint32(90).string(message.from);\n        }\n        if (message.enableIpldForestAccess === true) {\n            writer.uint32(96).bool(message.enableIpldForestAccess);\n        }\n        if (message.factRef !== '') {\n            writer.uint32(106).string(message.factRef);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMetadata };\n        message.additionalSources = [];\n        message.links = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.name = reader.string();\n                    break;\n                case 3:\n                    message.description = reader.string();\n                    break;\n                case 4:\n                    message.image = reader.string();\n                    break;\n                case 5:\n                    message.owner = reader.string();\n                    break;\n                case 6:\n                    message.parent = reader.string();\n                    break;\n                case 7:\n                    message.additionalSources.push(reader.string());\n                    break;\n                case 8:\n                    message.links.push(reader.string());\n                    break;\n                case 9:\n                    message.verifiedCredentialRef = reader.string();\n                    break;\n                case 10:\n                    message.did = reader.string();\n                    break;\n                case 11:\n                    message.from = reader.string();\n                    break;\n                case 12:\n                    message.enableIpldForestAccess = reader.bool();\n                    break;\n                case 13:\n                    message.factRef = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMetadata };\n        message.additionalSources = [];\n        message.links = [];\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.image !== undefined && object.image !== null) {\n            message.image = String(object.image);\n        }\n        else {\n            message.image = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = String(object.owner);\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.parent !== undefined && object.parent !== null) {\n            message.parent = String(object.parent);\n        }\n        else {\n            message.parent = '';\n        }\n        if (object.additionalSources !== undefined && object.additionalSources !== null) {\n            for (const e of object.additionalSources) {\n                message.additionalSources.push(String(e));\n            }\n        }\n        if (object.links !== undefined && object.links !== null) {\n            for (const e of object.links) {\n                message.links.push(String(e));\n            }\n        }\n        if (object.verifiedCredentialRef !== undefined && object.verifiedCredentialRef !== null) {\n            message.verifiedCredentialRef = String(object.verifiedCredentialRef);\n        }\n        else {\n            message.verifiedCredentialRef = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = String(object.did);\n        }\n        else {\n            message.did = '';\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = String(object.from);\n        }\n        else {\n            message.from = '';\n        }\n        if (object.enableIpldForestAccess !== undefined && object.enableIpldForestAccess !== null) {\n            message.enableIpldForestAccess = Boolean(object.enableIpldForestAccess);\n        }\n        else {\n            message.enableIpldForestAccess = false;\n        }\n        if (object.factRef !== undefined && object.factRef !== null) {\n            message.factRef = String(object.factRef);\n        }\n        else {\n            message.factRef = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.name !== undefined && (obj.name = message.name);\n        message.description !== undefined && (obj.description = message.description);\n        message.image !== undefined && (obj.image = message.image);\n        message.owner !== undefined && (obj.owner = message.owner);\n        message.parent !== undefined && (obj.parent = message.parent);\n        if (message.additionalSources) {\n            obj.additionalSources = message.additionalSources.map((e) => e);\n        }\n        else {\n            obj.additionalSources = [];\n        }\n        if (message.links) {\n            obj.links = message.links.map((e) => e);\n        }\n        else {\n            obj.links = [];\n        }\n        message.verifiedCredentialRef !== undefined && (obj.verifiedCredentialRef = message.verifiedCredentialRef);\n        message.did !== undefined && (obj.did = message.did);\n        message.from !== undefined && (obj.from = message.from);\n        message.enableIpldForestAccess !== undefined && (obj.enableIpldForestAccess = message.enableIpldForestAccess);\n        message.factRef !== undefined && (obj.factRef = message.factRef);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMetadata };\n        message.additionalSources = [];\n        message.links = [];\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.image !== undefined && object.image !== null) {\n            message.image = object.image;\n        }\n        else {\n            message.image = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = object.owner;\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.parent !== undefined && object.parent !== null) {\n            message.parent = object.parent;\n        }\n        else {\n            message.parent = '';\n        }\n        if (object.additionalSources !== undefined && object.additionalSources !== null) {\n            for (const e of object.additionalSources) {\n                message.additionalSources.push(e);\n            }\n        }\n        if (object.links !== undefined && object.links !== null) {\n            for (const e of object.links) {\n                message.links.push(e);\n            }\n        }\n        if (object.verifiedCredentialRef !== undefined && object.verifiedCredentialRef !== null) {\n            message.verifiedCredentialRef = object.verifiedCredentialRef;\n        }\n        else {\n            message.verifiedCredentialRef = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = object.did;\n        }\n        else {\n            message.did = '';\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = object.from;\n        }\n        else {\n            message.from = '';\n        }\n        if (object.enableIpldForestAccess !== undefined && object.enableIpldForestAccess !== null) {\n            message.enableIpldForestAccess = object.enableIpldForestAccess;\n        }\n        else {\n            message.enableIpldForestAccess = false;\n        }\n        if (object.factRef !== undefined && object.factRef !== null) {\n            message.factRef = object.factRef;\n        }\n        else {\n            message.factRef = '';\n        }\n        return message;\n    }\n};\nconst baseMsgMetadataResponse = { cid: '' };\nexport const MsgMetadataResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.cid !== '') {\n            writer.uint32(10).string(message.cid);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMetadataResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.cid = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMetadataResponse };\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = String(object.cid);\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.cid !== undefined && (obj.cid = message.cid);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMetadataResponse };\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = object.cid;\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    }\n};\nconst baseMsgFile = { creator: '', path: '', content: '', mode: '', time: '', contentType: '', did: '', from: '' };\nexport const MsgFile = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.path !== '') {\n            writer.uint32(18).string(message.path);\n        }\n        if (message.content !== '') {\n            writer.uint32(26).string(message.content);\n        }\n        if (message.mode !== '') {\n            writer.uint32(34).string(message.mode);\n        }\n        if (message.time !== '') {\n            writer.uint32(42).string(message.time);\n        }\n        if (message.contentType !== '') {\n            writer.uint32(50).string(message.contentType);\n        }\n        if (message.did !== '') {\n            writer.uint32(58).string(message.did);\n        }\n        if (message.from !== '') {\n            writer.uint32(66).string(message.from);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgFile };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.path = reader.string();\n                    break;\n                case 3:\n                    message.content = reader.string();\n                    break;\n                case 4:\n                    message.mode = reader.string();\n                    break;\n                case 5:\n                    message.time = reader.string();\n                    break;\n                case 6:\n                    message.contentType = reader.string();\n                    break;\n                case 7:\n                    message.did = reader.string();\n                    break;\n                case 8:\n                    message.from = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgFile };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.path !== undefined && object.path !== null) {\n            message.path = String(object.path);\n        }\n        else {\n            message.path = '';\n        }\n        if (object.content !== undefined && object.content !== null) {\n            message.content = String(object.content);\n        }\n        else {\n            message.content = '';\n        }\n        if (object.mode !== undefined && object.mode !== null) {\n            message.mode = String(object.mode);\n        }\n        else {\n            message.mode = '';\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = String(object.time);\n        }\n        else {\n            message.time = '';\n        }\n        if (object.contentType !== undefined && object.contentType !== null) {\n            message.contentType = String(object.contentType);\n        }\n        else {\n            message.contentType = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = String(object.did);\n        }\n        else {\n            message.did = '';\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = String(object.from);\n        }\n        else {\n            message.from = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.path !== undefined && (obj.path = message.path);\n        message.content !== undefined && (obj.content = message.content);\n        message.mode !== undefined && (obj.mode = message.mode);\n        message.time !== undefined && (obj.time = message.time);\n        message.contentType !== undefined && (obj.contentType = message.contentType);\n        message.did !== undefined && (obj.did = message.did);\n        message.from !== undefined && (obj.from = message.from);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgFile };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.path !== undefined && object.path !== null) {\n            message.path = object.path;\n        }\n        else {\n            message.path = '';\n        }\n        if (object.content !== undefined && object.content !== null) {\n            message.content = object.content;\n        }\n        else {\n            message.content = '';\n        }\n        if (object.mode !== undefined && object.mode !== null) {\n            message.mode = object.mode;\n        }\n        else {\n            message.mode = '';\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = '';\n        }\n        if (object.contentType !== undefined && object.contentType !== null) {\n            message.contentType = object.contentType;\n        }\n        else {\n            message.contentType = '';\n        }\n        if (object.did !== undefined && object.did !== null) {\n            message.did = object.did;\n        }\n        else {\n            message.did = '';\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = object.from;\n        }\n        else {\n            message.from = '';\n        }\n        return message;\n    }\n};\nconst baseMsgFileResponse = { hash: '' };\nexport const MsgFileResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash !== '') {\n            writer.uint32(10).string(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgFileResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgFileResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = String(object.hash);\n        }\n        else {\n            message.hash = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = message.hash);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgFileResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = '';\n        }\n        return message;\n    }\n};\nconst baseMsgSendMetadataOwnership = { creator: '' };\nexport const MsgSendMetadataOwnership = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.data !== undefined) {\n            AguaclaraPacketData.encode(message.data, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSendMetadataOwnership };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.data = AguaclaraPacketData.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSendMetadataOwnership };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = AguaclaraPacketData.fromJSON(object.data);\n        }\n        else {\n            message.data = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.data !== undefined && (obj.data = message.data ? AguaclaraPacketData.toJSON(message.data) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSendMetadataOwnership };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = AguaclaraPacketData.fromPartial(object.data);\n        }\n        else {\n            message.data = undefined;\n        }\n        return message;\n    }\n};\nconst baseMsgSendMetadataOwnershipResponse = { cid: '' };\nexport const MsgSendMetadataOwnershipResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.cid !== '') {\n            writer.uint32(10).string(message.cid);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSendMetadataOwnershipResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.cid = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSendMetadataOwnershipResponse };\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = String(object.cid);\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.cid !== undefined && (obj.cid = message.cid);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSendMetadataOwnershipResponse };\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = object.cid;\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    }\n};\nconst baseAguaclaraPacketData = {\n    creator: '',\n    tokenAddress: '',\n    tokenId: '',\n    didRecipient: '',\n    toMetadata: '',\n    hash: '',\n    currentChainId: '',\n    recipientChainId: ''\n};\nexport const AguaclaraPacketData = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.tokenAddress !== '') {\n            writer.uint32(18).string(message.tokenAddress);\n        }\n        if (message.tokenId !== '') {\n            writer.uint32(26).string(message.tokenId);\n        }\n        if (message.didRecipient !== '') {\n            writer.uint32(34).string(message.didRecipient);\n        }\n        if (message.toMetadata !== '') {\n            writer.uint32(42).string(message.toMetadata);\n        }\n        if (message.hash !== '') {\n            writer.uint32(50).string(message.hash);\n        }\n        if (message.currentChainId !== '') {\n            writer.uint32(58).string(message.currentChainId);\n        }\n        if (message.recipientChainId !== '') {\n            writer.uint32(66).string(message.recipientChainId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAguaclaraPacketData };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.tokenAddress = reader.string();\n                    break;\n                case 3:\n                    message.tokenId = reader.string();\n                    break;\n                case 4:\n                    message.didRecipient = reader.string();\n                    break;\n                case 5:\n                    message.toMetadata = reader.string();\n                    break;\n                case 6:\n                    message.hash = reader.string();\n                    break;\n                case 7:\n                    message.currentChainId = reader.string();\n                    break;\n                case 8:\n                    message.recipientChainId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAguaclaraPacketData };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.tokenAddress !== undefined && object.tokenAddress !== null) {\n            message.tokenAddress = String(object.tokenAddress);\n        }\n        else {\n            message.tokenAddress = '';\n        }\n        if (object.tokenId !== undefined && object.tokenId !== null) {\n            message.tokenId = String(object.tokenId);\n        }\n        else {\n            message.tokenId = '';\n        }\n        if (object.didRecipient !== undefined && object.didRecipient !== null) {\n            message.didRecipient = String(object.didRecipient);\n        }\n        else {\n            message.didRecipient = '';\n        }\n        if (object.toMetadata !== undefined && object.toMetadata !== null) {\n            message.toMetadata = String(object.toMetadata);\n        }\n        else {\n            message.toMetadata = '';\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = String(object.hash);\n        }\n        else {\n            message.hash = '';\n        }\n        if (object.currentChainId !== undefined && object.currentChainId !== null) {\n            message.currentChainId = String(object.currentChainId);\n        }\n        else {\n            message.currentChainId = '';\n        }\n        if (object.recipientChainId !== undefined && object.recipientChainId !== null) {\n            message.recipientChainId = String(object.recipientChainId);\n        }\n        else {\n            message.recipientChainId = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.tokenAddress !== undefined && (obj.tokenAddress = message.tokenAddress);\n        message.tokenId !== undefined && (obj.tokenId = message.tokenId);\n        message.didRecipient !== undefined && (obj.didRecipient = message.didRecipient);\n        message.toMetadata !== undefined && (obj.toMetadata = message.toMetadata);\n        message.hash !== undefined && (obj.hash = message.hash);\n        message.currentChainId !== undefined && (obj.currentChainId = message.currentChainId);\n        message.recipientChainId !== undefined && (obj.recipientChainId = message.recipientChainId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAguaclaraPacketData };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.tokenAddress !== undefined && object.tokenAddress !== null) {\n            message.tokenAddress = object.tokenAddress;\n        }\n        else {\n            message.tokenAddress = '';\n        }\n        if (object.tokenId !== undefined && object.tokenId !== null) {\n            message.tokenId = object.tokenId;\n        }\n        else {\n            message.tokenId = '';\n        }\n        if (object.didRecipient !== undefined && object.didRecipient !== null) {\n            message.didRecipient = object.didRecipient;\n        }\n        else {\n            message.didRecipient = '';\n        }\n        if (object.toMetadata !== undefined && object.toMetadata !== null) {\n            message.toMetadata = object.toMetadata;\n        }\n        else {\n            message.toMetadata = '';\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = '';\n        }\n        if (object.currentChainId !== undefined && object.currentChainId !== null) {\n            message.currentChainId = object.currentChainId;\n        }\n        else {\n            message.currentChainId = '';\n        }\n        if (object.recipientChainId !== undefined && object.recipientChainId !== null) {\n            message.recipientChainId = object.recipientChainId;\n        }\n        else {\n            message.recipientChainId = '';\n        }\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    SendMetadataOwnership(request) {\n        const data = MsgSendMetadataOwnership.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'SendMetadataOwnership', data);\n        return promise.then((data) => MsgSendMetadataOwnershipResponse.decode(new Reader(data)));\n    }\n    CreateDid(request) {\n        const data = MsgCreateDid.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'CreateDid', data);\n        return promise.then((data) => MsgCreateDidResponse.decode(new Reader(data)));\n    }\n    UpdateDid(request) {\n        const data = MsgUpdateDid.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'UpdateDid', data);\n        return promise.then((data) => MsgUpdateDidResponse.decode(new Reader(data)));\n    }\n    RevokeDid(request) {\n        const data = MsgRevokeDid.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'RevokeDid', data);\n        return promise.then((data) => MsgRevokeDidResponse.decode(new Reader(data)));\n    }\n    RoyaltyInfo(request) {\n        const data = MsgRoyaltyInfo.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'RoyaltyInfo', data);\n        return promise.then((data) => MsgRoyaltyInfoResponse.decode(new Reader(data)));\n    }\n    ChangeOwner(request) {\n        const data = MsgChangeOwner.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'ChangeOwner', data);\n        return promise.then((data) => MsgChangeOwnerResponse.decode(new Reader(data)));\n    }\n    RevokeDelegate(request) {\n        const data = MsgRevokeDelegate.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'RevokeDelegate', data);\n        return promise.then((data) => MsgRevokeDelegateResponse.decode(new Reader(data)));\n    }\n    GrantDelegate(request) {\n        const data = MsgGrantDelegate.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'GrantDelegate', data);\n        return promise.then((data) => MsgGrantDelegateResponse.decode(new Reader(data)));\n    }\n    GrantAttribute(request) {\n        const data = MsgGrantAttribute.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'GrantAttribute', data);\n        return promise.then((data) => MsgGrantAttributeResponse.decode(new Reader(data)));\n    }\n    RevokeAttribute(request) {\n        const data = MsgRevokeAttribute.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'RevokeAttribute', data);\n        return promise.then((data) => MsgRevokeAttributeResponse.decode(new Reader(data)));\n    }\n    Metadata(request) {\n        const data = MsgMetadata.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'Metadata', data);\n        return promise.then((data) => MsgMetadataResponse.decode(new Reader(data)));\n    }\n    IssueDenom(request) {\n        const data = MsgIssueDenom.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'IssueDenom', data);\n        return promise.then((data) => MsgIssueDenomResponse.decode(new Reader(data)));\n    }\n    MintNFT(request) {\n        const data = MsgMintNFT.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'MintNFT', data);\n        return promise.then((data) => MsgMintNFTResponse.decode(new Reader(data)));\n    }\n    EditNFT(request) {\n        const data = MsgEditNFT.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'EditNFT', data);\n        return promise.then((data) => MsgEditNFTResponse.decode(new Reader(data)));\n    }\n    TransferNFT(request) {\n        const data = MsgTransferNFT.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'TransferNFT', data);\n        return promise.then((data) => MsgTransferNFTResponse.decode(new Reader(data)));\n    }\n    BurnNFT(request) {\n        const data = MsgBurnNFT.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'BurnNFT', data);\n        return promise.then((data) => MsgBurnNFTResponse.decode(new Reader(data)));\n    }\n    TransferDenom(request) {\n        const data = MsgTransferDenom.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'TransferDenom', data);\n        return promise.then((data) => MsgTransferDenomResponse.decode(new Reader(data)));\n    }\n    MintTrustedContent(request) {\n        const data = MsgMintTrustedContent.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'MintTrustedContent', data);\n        return promise.then((data) => MsgMintTrustedContentResponse.decode(new Reader(data)));\n    }\n    MintTrustedResource(request) {\n        const data = MsgMintTrustedResource.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'MintTrustedResource', data);\n        return promise.then((data) => MsgMintTrustedResourceResponse.decode(new Reader(data)));\n    }\n    UpdateMetadataOwnership(request) {\n        const data = MsgUpdateMetadataOwnership.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Msg', 'UpdateMetadataOwnership', data);\n        return promise.then((data) => MsgUpdateMetadataOwnershipResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined && (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseDuration = { seconds: 0, nanos: 0 };\nexport const Duration = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDuration };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined && (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport { Timestamp } from '../../../google/protobuf/timestamp';\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.evidence.v1beta1';\nconst baseEquivocation = { height: 0, power: 0, consensusAddress: '' };\nexport const Equivocation = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        if (message.time !== undefined) {\n            Timestamp.encode(toTimestamp(message.time), writer.uint32(18).fork()).ldelim();\n        }\n        if (message.power !== 0) {\n            writer.uint32(24).int64(message.power);\n        }\n        if (message.consensusAddress !== '') {\n            writer.uint32(34).string(message.consensusAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEquivocation };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.power = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.consensusAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEquivocation };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = fromJsonTimestamp(object.time);\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = Number(object.power);\n        }\n        else {\n            message.power = 0;\n        }\n        if (object.consensusAddress !== undefined && object.consensusAddress !== null) {\n            message.consensusAddress = String(object.consensusAddress);\n        }\n        else {\n            message.consensusAddress = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.time !== undefined && (obj.time = message.time !== undefined ? message.time.toISOString() : null);\n        message.power !== undefined && (obj.power = message.power);\n        message.consensusAddress !== undefined && (obj.consensusAddress = message.consensusAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEquivocation };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = object.power;\n        }\n        else {\n            message.power = 0;\n        }\n        if (object.consensusAddress !== undefined && object.consensusAddress !== null) {\n            message.consensusAddress = object.consensusAddress;\n        }\n        else {\n            message.consensusAddress = '';\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined && (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseDuration = { seconds: 0, nanos: 0 };\nexport const Duration = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDuration };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { BaseAccount } from '../../../cosmos/auth/v1beta1/auth';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nexport const protobufPackage = 'cosmos.vesting.v1beta1';\nconst baseBaseVestingAccount = { endTime: 0 };\nexport const BaseVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseAccount !== undefined) {\n            BaseAccount.encode(message.baseAccount, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.originalVesting) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.delegatedFree) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.delegatedVesting) {\n            Coin.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.endTime !== 0) {\n            writer.uint32(40).int64(message.endTime);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBaseVestingAccount };\n        message.originalVesting = [];\n        message.delegatedFree = [];\n        message.delegatedVesting = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseAccount = BaseAccount.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.originalVesting.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.delegatedFree.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.delegatedVesting.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.endTime = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBaseVestingAccount };\n        message.originalVesting = [];\n        message.delegatedFree = [];\n        message.delegatedVesting = [];\n        if (object.baseAccount !== undefined && object.baseAccount !== null) {\n            message.baseAccount = BaseAccount.fromJSON(object.baseAccount);\n        }\n        else {\n            message.baseAccount = undefined;\n        }\n        if (object.originalVesting !== undefined && object.originalVesting !== null) {\n            for (const e of object.originalVesting) {\n                message.originalVesting.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.delegatedFree !== undefined && object.delegatedFree !== null) {\n            for (const e of object.delegatedFree) {\n                message.delegatedFree.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.delegatedVesting !== undefined && object.delegatedVesting !== null) {\n            for (const e of object.delegatedVesting) {\n                message.delegatedVesting.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.endTime !== undefined && object.endTime !== null) {\n            message.endTime = Number(object.endTime);\n        }\n        else {\n            message.endTime = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseAccount !== undefined && (obj.baseAccount = message.baseAccount ? BaseAccount.toJSON(message.baseAccount) : undefined);\n        if (message.originalVesting) {\n            obj.originalVesting = message.originalVesting.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.originalVesting = [];\n        }\n        if (message.delegatedFree) {\n            obj.delegatedFree = message.delegatedFree.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.delegatedFree = [];\n        }\n        if (message.delegatedVesting) {\n            obj.delegatedVesting = message.delegatedVesting.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.delegatedVesting = [];\n        }\n        message.endTime !== undefined && (obj.endTime = message.endTime);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBaseVestingAccount };\n        message.originalVesting = [];\n        message.delegatedFree = [];\n        message.delegatedVesting = [];\n        if (object.baseAccount !== undefined && object.baseAccount !== null) {\n            message.baseAccount = BaseAccount.fromPartial(object.baseAccount);\n        }\n        else {\n            message.baseAccount = undefined;\n        }\n        if (object.originalVesting !== undefined && object.originalVesting !== null) {\n            for (const e of object.originalVesting) {\n                message.originalVesting.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.delegatedFree !== undefined && object.delegatedFree !== null) {\n            for (const e of object.delegatedFree) {\n                message.delegatedFree.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.delegatedVesting !== undefined && object.delegatedVesting !== null) {\n            for (const e of object.delegatedVesting) {\n                message.delegatedVesting.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.endTime !== undefined && object.endTime !== null) {\n            message.endTime = object.endTime;\n        }\n        else {\n            message.endTime = 0;\n        }\n        return message;\n    }\n};\nconst baseContinuousVestingAccount = { startTime: 0 };\nexport const ContinuousVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseVestingAccount !== undefined) {\n            BaseVestingAccount.encode(message.baseVestingAccount, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.startTime !== 0) {\n            writer.uint32(16).int64(message.startTime);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseContinuousVestingAccount };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseVestingAccount = BaseVestingAccount.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.startTime = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseContinuousVestingAccount };\n        if (object.baseVestingAccount !== undefined && object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromJSON(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        if (object.startTime !== undefined && object.startTime !== null) {\n            message.startTime = Number(object.startTime);\n        }\n        else {\n            message.startTime = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseVestingAccount !== undefined &&\n            (obj.baseVestingAccount = message.baseVestingAccount ? BaseVestingAccount.toJSON(message.baseVestingAccount) : undefined);\n        message.startTime !== undefined && (obj.startTime = message.startTime);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseContinuousVestingAccount };\n        if (object.baseVestingAccount !== undefined && object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromPartial(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        if (object.startTime !== undefined && object.startTime !== null) {\n            message.startTime = object.startTime;\n        }\n        else {\n            message.startTime = 0;\n        }\n        return message;\n    }\n};\nconst baseDelayedVestingAccount = {};\nexport const DelayedVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseVestingAccount !== undefined) {\n            BaseVestingAccount.encode(message.baseVestingAccount, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelayedVestingAccount };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseVestingAccount = BaseVestingAccount.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelayedVestingAccount };\n        if (object.baseVestingAccount !== undefined && object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromJSON(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseVestingAccount !== undefined &&\n            (obj.baseVestingAccount = message.baseVestingAccount ? BaseVestingAccount.toJSON(message.baseVestingAccount) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelayedVestingAccount };\n        if (object.baseVestingAccount !== undefined && object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromPartial(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        return message;\n    }\n};\nconst basePeriod = { length: 0 };\nexport const Period = {\n    encode(message, writer = Writer.create()) {\n        if (message.length !== 0) {\n            writer.uint32(8).int64(message.length);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePeriod };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.length = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePeriod };\n        message.amount = [];\n        if (object.length !== undefined && object.length !== null) {\n            message.length = Number(object.length);\n        }\n        else {\n            message.length = 0;\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.length !== undefined && (obj.length = message.length);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePeriod };\n        message.amount = [];\n        if (object.length !== undefined && object.length !== null) {\n            message.length = object.length;\n        }\n        else {\n            message.length = 0;\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst basePeriodicVestingAccount = { startTime: 0 };\nexport const PeriodicVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseVestingAccount !== undefined) {\n            BaseVestingAccount.encode(message.baseVestingAccount, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.startTime !== 0) {\n            writer.uint32(16).int64(message.startTime);\n        }\n        for (const v of message.vestingPeriods) {\n            Period.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePeriodicVestingAccount };\n        message.vestingPeriods = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseVestingAccount = BaseVestingAccount.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.startTime = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.vestingPeriods.push(Period.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePeriodicVestingAccount };\n        message.vestingPeriods = [];\n        if (object.baseVestingAccount !== undefined && object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromJSON(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        if (object.startTime !== undefined && object.startTime !== null) {\n            message.startTime = Number(object.startTime);\n        }\n        else {\n            message.startTime = 0;\n        }\n        if (object.vestingPeriods !== undefined && object.vestingPeriods !== null) {\n            for (const e of object.vestingPeriods) {\n                message.vestingPeriods.push(Period.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseVestingAccount !== undefined &&\n            (obj.baseVestingAccount = message.baseVestingAccount ? BaseVestingAccount.toJSON(message.baseVestingAccount) : undefined);\n        message.startTime !== undefined && (obj.startTime = message.startTime);\n        if (message.vestingPeriods) {\n            obj.vestingPeriods = message.vestingPeriods.map((e) => (e ? Period.toJSON(e) : undefined));\n        }\n        else {\n            obj.vestingPeriods = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePeriodicVestingAccount };\n        message.vestingPeriods = [];\n        if (object.baseVestingAccount !== undefined && object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromPartial(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        if (object.startTime !== undefined && object.startTime !== null) {\n            message.startTime = object.startTime;\n        }\n        else {\n            message.startTime = 0;\n        }\n        if (object.vestingPeriods !== undefined && object.vestingPeriods !== null) {\n            for (const e of object.vestingPeriods) {\n                message.vestingPeriods.push(Period.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst basePermanentLockedAccount = {};\nexport const PermanentLockedAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseVestingAccount !== undefined) {\n            BaseVestingAccount.encode(message.baseVestingAccount, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePermanentLockedAccount };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseVestingAccount = BaseVestingAccount.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePermanentLockedAccount };\n        if (object.baseVestingAccount !== undefined && object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromJSON(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseVestingAccount !== undefined &&\n            (obj.baseVestingAccount = message.baseVestingAccount ? BaseVestingAccount.toJSON(message.baseVestingAccount) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePermanentLockedAccount };\n        if (object.baseVestingAccount !== undefined && object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromPartial(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.base.query.v1beta1';\nconst basePageRequest = { offset: 0, limit: 0, countTotal: false, reverse: false };\nexport const PageRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.offset !== 0) {\n            writer.uint32(16).uint64(message.offset);\n        }\n        if (message.limit !== 0) {\n            writer.uint32(24).uint64(message.limit);\n        }\n        if (message.countTotal === true) {\n            writer.uint32(32).bool(message.countTotal);\n        }\n        if (message.reverse === true) {\n            writer.uint32(40).bool(message.reverse);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePageRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.offset = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.limit = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.countTotal = reader.bool();\n                    break;\n                case 5:\n                    message.reverse = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePageRequest };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.offset !== undefined && object.offset !== null) {\n            message.offset = Number(object.offset);\n        }\n        else {\n            message.offset = 0;\n        }\n        if (object.limit !== undefined && object.limit !== null) {\n            message.limit = Number(object.limit);\n        }\n        else {\n            message.limit = 0;\n        }\n        if (object.countTotal !== undefined && object.countTotal !== null) {\n            message.countTotal = Boolean(object.countTotal);\n        }\n        else {\n            message.countTotal = false;\n        }\n        if (object.reverse !== undefined && object.reverse !== null) {\n            message.reverse = Boolean(object.reverse);\n        }\n        else {\n            message.reverse = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.offset !== undefined && (obj.offset = message.offset);\n        message.limit !== undefined && (obj.limit = message.limit);\n        message.countTotal !== undefined && (obj.countTotal = message.countTotal);\n        message.reverse !== undefined && (obj.reverse = message.reverse);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePageRequest };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.offset !== undefined && object.offset !== null) {\n            message.offset = object.offset;\n        }\n        else {\n            message.offset = 0;\n        }\n        if (object.limit !== undefined && object.limit !== null) {\n            message.limit = object.limit;\n        }\n        else {\n            message.limit = 0;\n        }\n        if (object.countTotal !== undefined && object.countTotal !== null) {\n            message.countTotal = object.countTotal;\n        }\n        else {\n            message.countTotal = false;\n        }\n        if (object.reverse !== undefined && object.reverse !== null) {\n            message.reverse = object.reverse;\n        }\n        else {\n            message.reverse = false;\n        }\n        return message;\n    }\n};\nconst basePageResponse = { total: 0 };\nexport const PageResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.nextKey.length !== 0) {\n            writer.uint32(10).bytes(message.nextKey);\n        }\n        if (message.total !== 0) {\n            writer.uint32(16).uint64(message.total);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePageResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.nextKey = reader.bytes();\n                    break;\n                case 2:\n                    message.total = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePageResponse };\n        if (object.nextKey !== undefined && object.nextKey !== null) {\n            message.nextKey = bytesFromBase64(object.nextKey);\n        }\n        if (object.total !== undefined && object.total !== null) {\n            message.total = Number(object.total);\n        }\n        else {\n            message.total = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.nextKey !== undefined && (obj.nextKey = base64FromBytes(message.nextKey !== undefined ? message.nextKey : new Uint8Array()));\n        message.total !== undefined && (obj.total = message.total);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePageResponse };\n        if (object.nextKey !== undefined && object.nextKey !== null) {\n            message.nextKey = object.nextKey;\n        }\n        else {\n            message.nextKey = new Uint8Array();\n        }\n        if (object.total !== undefined && object.total !== null) {\n            message.total = object.total;\n        }\n        else {\n            message.total = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'ethermint.evm.v1';\nconst baseParams = { evmDenom: '', enableCreate: false, enableCall: false, extraEips: 0 };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.evmDenom !== '') {\n            writer.uint32(10).string(message.evmDenom);\n        }\n        if (message.enableCreate === true) {\n            writer.uint32(16).bool(message.enableCreate);\n        }\n        if (message.enableCall === true) {\n            writer.uint32(24).bool(message.enableCall);\n        }\n        writer.uint32(34).fork();\n        for (const v of message.extraEips) {\n            writer.int64(v);\n        }\n        writer.ldelim();\n        if (message.chainConfig !== undefined) {\n            ChainConfig.encode(message.chainConfig, writer.uint32(42).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.extraEips = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.evmDenom = reader.string();\n                    break;\n                case 2:\n                    message.enableCreate = reader.bool();\n                    break;\n                case 3:\n                    message.enableCall = reader.bool();\n                    break;\n                case 4:\n                    if ((tag & 7) === 2) {\n                        const end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2) {\n                            message.extraEips.push(longToNumber(reader.int64()));\n                        }\n                    }\n                    else {\n                        message.extraEips.push(longToNumber(reader.int64()));\n                    }\n                    break;\n                case 5:\n                    message.chainConfig = ChainConfig.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.extraEips = [];\n        if (object.evmDenom !== undefined && object.evmDenom !== null) {\n            message.evmDenom = String(object.evmDenom);\n        }\n        else {\n            message.evmDenom = '';\n        }\n        if (object.enableCreate !== undefined && object.enableCreate !== null) {\n            message.enableCreate = Boolean(object.enableCreate);\n        }\n        else {\n            message.enableCreate = false;\n        }\n        if (object.enableCall !== undefined && object.enableCall !== null) {\n            message.enableCall = Boolean(object.enableCall);\n        }\n        else {\n            message.enableCall = false;\n        }\n        if (object.extraEips !== undefined && object.extraEips !== null) {\n            for (const e of object.extraEips) {\n                message.extraEips.push(Number(e));\n            }\n        }\n        if (object.chainConfig !== undefined && object.chainConfig !== null) {\n            message.chainConfig = ChainConfig.fromJSON(object.chainConfig);\n        }\n        else {\n            message.chainConfig = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.evmDenom !== undefined && (obj.evmDenom = message.evmDenom);\n        message.enableCreate !== undefined && (obj.enableCreate = message.enableCreate);\n        message.enableCall !== undefined && (obj.enableCall = message.enableCall);\n        if (message.extraEips) {\n            obj.extraEips = message.extraEips.map((e) => e);\n        }\n        else {\n            obj.extraEips = [];\n        }\n        message.chainConfig !== undefined && (obj.chainConfig = message.chainConfig ? ChainConfig.toJSON(message.chainConfig) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.extraEips = [];\n        if (object.evmDenom !== undefined && object.evmDenom !== null) {\n            message.evmDenom = object.evmDenom;\n        }\n        else {\n            message.evmDenom = '';\n        }\n        if (object.enableCreate !== undefined && object.enableCreate !== null) {\n            message.enableCreate = object.enableCreate;\n        }\n        else {\n            message.enableCreate = false;\n        }\n        if (object.enableCall !== undefined && object.enableCall !== null) {\n            message.enableCall = object.enableCall;\n        }\n        else {\n            message.enableCall = false;\n        }\n        if (object.extraEips !== undefined && object.extraEips !== null) {\n            for (const e of object.extraEips) {\n                message.extraEips.push(e);\n            }\n        }\n        if (object.chainConfig !== undefined && object.chainConfig !== null) {\n            message.chainConfig = ChainConfig.fromPartial(object.chainConfig);\n        }\n        else {\n            message.chainConfig = undefined;\n        }\n        return message;\n    }\n};\nconst baseChainConfig = {\n    homesteadBlock: '',\n    daoForkBlock: '',\n    daoForkSupport: false,\n    eip150Block: '',\n    eip150Hash: '',\n    eip155Block: '',\n    eip158Block: '',\n    byzantiumBlock: '',\n    constantinopleBlock: '',\n    petersburgBlock: '',\n    istanbulBlock: '',\n    muirGlacierBlock: '',\n    berlinBlock: '',\n    londonBlock: ''\n};\nexport const ChainConfig = {\n    encode(message, writer = Writer.create()) {\n        if (message.homesteadBlock !== '') {\n            writer.uint32(10).string(message.homesteadBlock);\n        }\n        if (message.daoForkBlock !== '') {\n            writer.uint32(18).string(message.daoForkBlock);\n        }\n        if (message.daoForkSupport === true) {\n            writer.uint32(24).bool(message.daoForkSupport);\n        }\n        if (message.eip150Block !== '') {\n            writer.uint32(34).string(message.eip150Block);\n        }\n        if (message.eip150Hash !== '') {\n            writer.uint32(42).string(message.eip150Hash);\n        }\n        if (message.eip155Block !== '') {\n            writer.uint32(50).string(message.eip155Block);\n        }\n        if (message.eip158Block !== '') {\n            writer.uint32(58).string(message.eip158Block);\n        }\n        if (message.byzantiumBlock !== '') {\n            writer.uint32(66).string(message.byzantiumBlock);\n        }\n        if (message.constantinopleBlock !== '') {\n            writer.uint32(74).string(message.constantinopleBlock);\n        }\n        if (message.petersburgBlock !== '') {\n            writer.uint32(82).string(message.petersburgBlock);\n        }\n        if (message.istanbulBlock !== '') {\n            writer.uint32(90).string(message.istanbulBlock);\n        }\n        if (message.muirGlacierBlock !== '') {\n            writer.uint32(98).string(message.muirGlacierBlock);\n        }\n        if (message.berlinBlock !== '') {\n            writer.uint32(106).string(message.berlinBlock);\n        }\n        if (message.londonBlock !== '') {\n            writer.uint32(138).string(message.londonBlock);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseChainConfig };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.homesteadBlock = reader.string();\n                    break;\n                case 2:\n                    message.daoForkBlock = reader.string();\n                    break;\n                case 3:\n                    message.daoForkSupport = reader.bool();\n                    break;\n                case 4:\n                    message.eip150Block = reader.string();\n                    break;\n                case 5:\n                    message.eip150Hash = reader.string();\n                    break;\n                case 6:\n                    message.eip155Block = reader.string();\n                    break;\n                case 7:\n                    message.eip158Block = reader.string();\n                    break;\n                case 8:\n                    message.byzantiumBlock = reader.string();\n                    break;\n                case 9:\n                    message.constantinopleBlock = reader.string();\n                    break;\n                case 10:\n                    message.petersburgBlock = reader.string();\n                    break;\n                case 11:\n                    message.istanbulBlock = reader.string();\n                    break;\n                case 12:\n                    message.muirGlacierBlock = reader.string();\n                    break;\n                case 13:\n                    message.berlinBlock = reader.string();\n                    break;\n                case 17:\n                    message.londonBlock = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseChainConfig };\n        if (object.homesteadBlock !== undefined && object.homesteadBlock !== null) {\n            message.homesteadBlock = String(object.homesteadBlock);\n        }\n        else {\n            message.homesteadBlock = '';\n        }\n        if (object.daoForkBlock !== undefined && object.daoForkBlock !== null) {\n            message.daoForkBlock = String(object.daoForkBlock);\n        }\n        else {\n            message.daoForkBlock = '';\n        }\n        if (object.daoForkSupport !== undefined && object.daoForkSupport !== null) {\n            message.daoForkSupport = Boolean(object.daoForkSupport);\n        }\n        else {\n            message.daoForkSupport = false;\n        }\n        if (object.eip150Block !== undefined && object.eip150Block !== null) {\n            message.eip150Block = String(object.eip150Block);\n        }\n        else {\n            message.eip150Block = '';\n        }\n        if (object.eip150Hash !== undefined && object.eip150Hash !== null) {\n            message.eip150Hash = String(object.eip150Hash);\n        }\n        else {\n            message.eip150Hash = '';\n        }\n        if (object.eip155Block !== undefined && object.eip155Block !== null) {\n            message.eip155Block = String(object.eip155Block);\n        }\n        else {\n            message.eip155Block = '';\n        }\n        if (object.eip158Block !== undefined && object.eip158Block !== null) {\n            message.eip158Block = String(object.eip158Block);\n        }\n        else {\n            message.eip158Block = '';\n        }\n        if (object.byzantiumBlock !== undefined && object.byzantiumBlock !== null) {\n            message.byzantiumBlock = String(object.byzantiumBlock);\n        }\n        else {\n            message.byzantiumBlock = '';\n        }\n        if (object.constantinopleBlock !== undefined && object.constantinopleBlock !== null) {\n            message.constantinopleBlock = String(object.constantinopleBlock);\n        }\n        else {\n            message.constantinopleBlock = '';\n        }\n        if (object.petersburgBlock !== undefined && object.petersburgBlock !== null) {\n            message.petersburgBlock = String(object.petersburgBlock);\n        }\n        else {\n            message.petersburgBlock = '';\n        }\n        if (object.istanbulBlock !== undefined && object.istanbulBlock !== null) {\n            message.istanbulBlock = String(object.istanbulBlock);\n        }\n        else {\n            message.istanbulBlock = '';\n        }\n        if (object.muirGlacierBlock !== undefined && object.muirGlacierBlock !== null) {\n            message.muirGlacierBlock = String(object.muirGlacierBlock);\n        }\n        else {\n            message.muirGlacierBlock = '';\n        }\n        if (object.berlinBlock !== undefined && object.berlinBlock !== null) {\n            message.berlinBlock = String(object.berlinBlock);\n        }\n        else {\n            message.berlinBlock = '';\n        }\n        if (object.londonBlock !== undefined && object.londonBlock !== null) {\n            message.londonBlock = String(object.londonBlock);\n        }\n        else {\n            message.londonBlock = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.homesteadBlock !== undefined && (obj.homesteadBlock = message.homesteadBlock);\n        message.daoForkBlock !== undefined && (obj.daoForkBlock = message.daoForkBlock);\n        message.daoForkSupport !== undefined && (obj.daoForkSupport = message.daoForkSupport);\n        message.eip150Block !== undefined && (obj.eip150Block = message.eip150Block);\n        message.eip150Hash !== undefined && (obj.eip150Hash = message.eip150Hash);\n        message.eip155Block !== undefined && (obj.eip155Block = message.eip155Block);\n        message.eip158Block !== undefined && (obj.eip158Block = message.eip158Block);\n        message.byzantiumBlock !== undefined && (obj.byzantiumBlock = message.byzantiumBlock);\n        message.constantinopleBlock !== undefined && (obj.constantinopleBlock = message.constantinopleBlock);\n        message.petersburgBlock !== undefined && (obj.petersburgBlock = message.petersburgBlock);\n        message.istanbulBlock !== undefined && (obj.istanbulBlock = message.istanbulBlock);\n        message.muirGlacierBlock !== undefined && (obj.muirGlacierBlock = message.muirGlacierBlock);\n        message.berlinBlock !== undefined && (obj.berlinBlock = message.berlinBlock);\n        message.londonBlock !== undefined && (obj.londonBlock = message.londonBlock);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseChainConfig };\n        if (object.homesteadBlock !== undefined && object.homesteadBlock !== null) {\n            message.homesteadBlock = object.homesteadBlock;\n        }\n        else {\n            message.homesteadBlock = '';\n        }\n        if (object.daoForkBlock !== undefined && object.daoForkBlock !== null) {\n            message.daoForkBlock = object.daoForkBlock;\n        }\n        else {\n            message.daoForkBlock = '';\n        }\n        if (object.daoForkSupport !== undefined && object.daoForkSupport !== null) {\n            message.daoForkSupport = object.daoForkSupport;\n        }\n        else {\n            message.daoForkSupport = false;\n        }\n        if (object.eip150Block !== undefined && object.eip150Block !== null) {\n            message.eip150Block = object.eip150Block;\n        }\n        else {\n            message.eip150Block = '';\n        }\n        if (object.eip150Hash !== undefined && object.eip150Hash !== null) {\n            message.eip150Hash = object.eip150Hash;\n        }\n        else {\n            message.eip150Hash = '';\n        }\n        if (object.eip155Block !== undefined && object.eip155Block !== null) {\n            message.eip155Block = object.eip155Block;\n        }\n        else {\n            message.eip155Block = '';\n        }\n        if (object.eip158Block !== undefined && object.eip158Block !== null) {\n            message.eip158Block = object.eip158Block;\n        }\n        else {\n            message.eip158Block = '';\n        }\n        if (object.byzantiumBlock !== undefined && object.byzantiumBlock !== null) {\n            message.byzantiumBlock = object.byzantiumBlock;\n        }\n        else {\n            message.byzantiumBlock = '';\n        }\n        if (object.constantinopleBlock !== undefined && object.constantinopleBlock !== null) {\n            message.constantinopleBlock = object.constantinopleBlock;\n        }\n        else {\n            message.constantinopleBlock = '';\n        }\n        if (object.petersburgBlock !== undefined && object.petersburgBlock !== null) {\n            message.petersburgBlock = object.petersburgBlock;\n        }\n        else {\n            message.petersburgBlock = '';\n        }\n        if (object.istanbulBlock !== undefined && object.istanbulBlock !== null) {\n            message.istanbulBlock = object.istanbulBlock;\n        }\n        else {\n            message.istanbulBlock = '';\n        }\n        if (object.muirGlacierBlock !== undefined && object.muirGlacierBlock !== null) {\n            message.muirGlacierBlock = object.muirGlacierBlock;\n        }\n        else {\n            message.muirGlacierBlock = '';\n        }\n        if (object.berlinBlock !== undefined && object.berlinBlock !== null) {\n            message.berlinBlock = object.berlinBlock;\n        }\n        else {\n            message.berlinBlock = '';\n        }\n        if (object.londonBlock !== undefined && object.londonBlock !== null) {\n            message.londonBlock = object.londonBlock;\n        }\n        else {\n            message.londonBlock = '';\n        }\n        return message;\n    }\n};\nconst baseState = { key: '', value: '' };\nexport const State = {\n    encode(message, writer = Writer.create()) {\n        if (message.key !== '') {\n            writer.uint32(10).string(message.key);\n        }\n        if (message.value !== '') {\n            writer.uint32(18).string(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseState };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseState };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = String(object.key);\n        }\n        else {\n            message.key = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = String(object.value);\n        }\n        else {\n            message.value = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = message.key);\n        message.value !== undefined && (obj.value = message.value);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseState };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = '';\n        }\n        return message;\n    }\n};\nconst baseTransactionLogs = { hash: '' };\nexport const TransactionLogs = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash !== '') {\n            writer.uint32(10).string(message.hash);\n        }\n        for (const v of message.logs) {\n            Log.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTransactionLogs };\n        message.logs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.string();\n                    break;\n                case 2:\n                    message.logs.push(Log.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTransactionLogs };\n        message.logs = [];\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = String(object.hash);\n        }\n        else {\n            message.hash = '';\n        }\n        if (object.logs !== undefined && object.logs !== null) {\n            for (const e of object.logs) {\n                message.logs.push(Log.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = message.hash);\n        if (message.logs) {\n            obj.logs = message.logs.map((e) => (e ? Log.toJSON(e) : undefined));\n        }\n        else {\n            obj.logs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTransactionLogs };\n        message.logs = [];\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = '';\n        }\n        if (object.logs !== undefined && object.logs !== null) {\n            for (const e of object.logs) {\n                message.logs.push(Log.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseLog = { address: '', topics: '', blockNumber: 0, txHash: '', txIndex: 0, blockHash: '', index: 0, removed: false };\nexport const Log = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.topics) {\n            writer.uint32(18).string(v);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(26).bytes(message.data);\n        }\n        if (message.blockNumber !== 0) {\n            writer.uint32(32).uint64(message.blockNumber);\n        }\n        if (message.txHash !== '') {\n            writer.uint32(42).string(message.txHash);\n        }\n        if (message.txIndex !== 0) {\n            writer.uint32(48).uint64(message.txIndex);\n        }\n        if (message.blockHash !== '') {\n            writer.uint32(58).string(message.blockHash);\n        }\n        if (message.index !== 0) {\n            writer.uint32(64).uint64(message.index);\n        }\n        if (message.removed === true) {\n            writer.uint32(72).bool(message.removed);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseLog };\n        message.topics = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.topics.push(reader.string());\n                    break;\n                case 3:\n                    message.data = reader.bytes();\n                    break;\n                case 4:\n                    message.blockNumber = longToNumber(reader.uint64());\n                    break;\n                case 5:\n                    message.txHash = reader.string();\n                    break;\n                case 6:\n                    message.txIndex = longToNumber(reader.uint64());\n                    break;\n                case 7:\n                    message.blockHash = reader.string();\n                    break;\n                case 8:\n                    message.index = longToNumber(reader.uint64());\n                    break;\n                case 9:\n                    message.removed = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseLog };\n        message.topics = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.topics !== undefined && object.topics !== null) {\n            for (const e of object.topics) {\n                message.topics.push(String(e));\n            }\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.blockNumber !== undefined && object.blockNumber !== null) {\n            message.blockNumber = Number(object.blockNumber);\n        }\n        else {\n            message.blockNumber = 0;\n        }\n        if (object.txHash !== undefined && object.txHash !== null) {\n            message.txHash = String(object.txHash);\n        }\n        else {\n            message.txHash = '';\n        }\n        if (object.txIndex !== undefined && object.txIndex !== null) {\n            message.txIndex = Number(object.txIndex);\n        }\n        else {\n            message.txIndex = 0;\n        }\n        if (object.blockHash !== undefined && object.blockHash !== null) {\n            message.blockHash = String(object.blockHash);\n        }\n        else {\n            message.blockHash = '';\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.removed !== undefined && object.removed !== null) {\n            message.removed = Boolean(object.removed);\n        }\n        else {\n            message.removed = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.topics) {\n            obj.topics = message.topics.map((e) => e);\n        }\n        else {\n            obj.topics = [];\n        }\n        message.data !== undefined && (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.blockNumber !== undefined && (obj.blockNumber = message.blockNumber);\n        message.txHash !== undefined && (obj.txHash = message.txHash);\n        message.txIndex !== undefined && (obj.txIndex = message.txIndex);\n        message.blockHash !== undefined && (obj.blockHash = message.blockHash);\n        message.index !== undefined && (obj.index = message.index);\n        message.removed !== undefined && (obj.removed = message.removed);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseLog };\n        message.topics = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.topics !== undefined && object.topics !== null) {\n            for (const e of object.topics) {\n                message.topics.push(e);\n            }\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.blockNumber !== undefined && object.blockNumber !== null) {\n            message.blockNumber = object.blockNumber;\n        }\n        else {\n            message.blockNumber = 0;\n        }\n        if (object.txHash !== undefined && object.txHash !== null) {\n            message.txHash = object.txHash;\n        }\n        else {\n            message.txHash = '';\n        }\n        if (object.txIndex !== undefined && object.txIndex !== null) {\n            message.txIndex = object.txIndex;\n        }\n        else {\n            message.txIndex = 0;\n        }\n        if (object.blockHash !== undefined && object.blockHash !== null) {\n            message.blockHash = object.blockHash;\n        }\n        else {\n            message.blockHash = '';\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.removed !== undefined && object.removed !== null) {\n            message.removed = object.removed;\n        }\n        else {\n            message.removed = false;\n        }\n        return message;\n    }\n};\nconst baseTxResult = { contractAddress: '', reverted: false, gasUsed: 0 };\nexport const TxResult = {\n    encode(message, writer = Writer.create()) {\n        if (message.contractAddress !== '') {\n            writer.uint32(10).string(message.contractAddress);\n        }\n        if (message.bloom.length !== 0) {\n            writer.uint32(18).bytes(message.bloom);\n        }\n        if (message.txLogs !== undefined) {\n            TransactionLogs.encode(message.txLogs, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.ret.length !== 0) {\n            writer.uint32(34).bytes(message.ret);\n        }\n        if (message.reverted === true) {\n            writer.uint32(40).bool(message.reverted);\n        }\n        if (message.gasUsed !== 0) {\n            writer.uint32(48).uint64(message.gasUsed);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTxResult };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.contractAddress = reader.string();\n                    break;\n                case 2:\n                    message.bloom = reader.bytes();\n                    break;\n                case 3:\n                    message.txLogs = TransactionLogs.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.ret = reader.bytes();\n                    break;\n                case 5:\n                    message.reverted = reader.bool();\n                    break;\n                case 6:\n                    message.gasUsed = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTxResult };\n        if (object.contractAddress !== undefined && object.contractAddress !== null) {\n            message.contractAddress = String(object.contractAddress);\n        }\n        else {\n            message.contractAddress = '';\n        }\n        if (object.bloom !== undefined && object.bloom !== null) {\n            message.bloom = bytesFromBase64(object.bloom);\n        }\n        if (object.txLogs !== undefined && object.txLogs !== null) {\n            message.txLogs = TransactionLogs.fromJSON(object.txLogs);\n        }\n        else {\n            message.txLogs = undefined;\n        }\n        if (object.ret !== undefined && object.ret !== null) {\n            message.ret = bytesFromBase64(object.ret);\n        }\n        if (object.reverted !== undefined && object.reverted !== null) {\n            message.reverted = Boolean(object.reverted);\n        }\n        else {\n            message.reverted = false;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = Number(object.gasUsed);\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.contractAddress !== undefined && (obj.contractAddress = message.contractAddress);\n        message.bloom !== undefined && (obj.bloom = base64FromBytes(message.bloom !== undefined ? message.bloom : new Uint8Array()));\n        message.txLogs !== undefined && (obj.txLogs = message.txLogs ? TransactionLogs.toJSON(message.txLogs) : undefined);\n        message.ret !== undefined && (obj.ret = base64FromBytes(message.ret !== undefined ? message.ret : new Uint8Array()));\n        message.reverted !== undefined && (obj.reverted = message.reverted);\n        message.gasUsed !== undefined && (obj.gasUsed = message.gasUsed);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTxResult };\n        if (object.contractAddress !== undefined && object.contractAddress !== null) {\n            message.contractAddress = object.contractAddress;\n        }\n        else {\n            message.contractAddress = '';\n        }\n        if (object.bloom !== undefined && object.bloom !== null) {\n            message.bloom = object.bloom;\n        }\n        else {\n            message.bloom = new Uint8Array();\n        }\n        if (object.txLogs !== undefined && object.txLogs !== null) {\n            message.txLogs = TransactionLogs.fromPartial(object.txLogs);\n        }\n        else {\n            message.txLogs = undefined;\n        }\n        if (object.ret !== undefined && object.ret !== null) {\n            message.ret = object.ret;\n        }\n        else {\n            message.ret = new Uint8Array();\n        }\n        if (object.reverted !== undefined && object.reverted !== null) {\n            message.reverted = object.reverted;\n        }\n        else {\n            message.reverted = false;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = object.gasUsed;\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        return message;\n    }\n};\nconst baseAccessTuple = { address: '', storageKeys: '' };\nexport const AccessTuple = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.storageKeys) {\n            writer.uint32(18).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAccessTuple };\n        message.storageKeys = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.storageKeys.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAccessTuple };\n        message.storageKeys = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.storageKeys !== undefined && object.storageKeys !== null) {\n            for (const e of object.storageKeys) {\n                message.storageKeys.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.storageKeys) {\n            obj.storageKeys = message.storageKeys.map((e) => e);\n        }\n        else {\n            obj.storageKeys = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAccessTuple };\n        message.storageKeys = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.storageKeys !== undefined && object.storageKeys !== null) {\n            for (const e of object.storageKeys) {\n                message.storageKeys.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseTraceConfig = {\n    tracer: '',\n    timeout: '',\n    reexec: 0,\n    disableStack: false,\n    disableStorage: false,\n    debug: false,\n    limit: 0,\n    enableMemory: false,\n    enableReturnData: false\n};\nexport const TraceConfig = {\n    encode(message, writer = Writer.create()) {\n        if (message.tracer !== '') {\n            writer.uint32(10).string(message.tracer);\n        }\n        if (message.timeout !== '') {\n            writer.uint32(18).string(message.timeout);\n        }\n        if (message.reexec !== 0) {\n            writer.uint32(24).uint64(message.reexec);\n        }\n        if (message.disableStack === true) {\n            writer.uint32(40).bool(message.disableStack);\n        }\n        if (message.disableStorage === true) {\n            writer.uint32(48).bool(message.disableStorage);\n        }\n        if (message.debug === true) {\n            writer.uint32(64).bool(message.debug);\n        }\n        if (message.limit !== 0) {\n            writer.uint32(72).int32(message.limit);\n        }\n        if (message.overrides !== undefined) {\n            ChainConfig.encode(message.overrides, writer.uint32(82).fork()).ldelim();\n        }\n        if (message.enableMemory === true) {\n            writer.uint32(88).bool(message.enableMemory);\n        }\n        if (message.enableReturnData === true) {\n            writer.uint32(96).bool(message.enableReturnData);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTraceConfig };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.tracer = reader.string();\n                    break;\n                case 2:\n                    message.timeout = reader.string();\n                    break;\n                case 3:\n                    message.reexec = longToNumber(reader.uint64());\n                    break;\n                case 5:\n                    message.disableStack = reader.bool();\n                    break;\n                case 6:\n                    message.disableStorage = reader.bool();\n                    break;\n                case 8:\n                    message.debug = reader.bool();\n                    break;\n                case 9:\n                    message.limit = reader.int32();\n                    break;\n                case 10:\n                    message.overrides = ChainConfig.decode(reader, reader.uint32());\n                    break;\n                case 11:\n                    message.enableMemory = reader.bool();\n                    break;\n                case 12:\n                    message.enableReturnData = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTraceConfig };\n        if (object.tracer !== undefined && object.tracer !== null) {\n            message.tracer = String(object.tracer);\n        }\n        else {\n            message.tracer = '';\n        }\n        if (object.timeout !== undefined && object.timeout !== null) {\n            message.timeout = String(object.timeout);\n        }\n        else {\n            message.timeout = '';\n        }\n        if (object.reexec !== undefined && object.reexec !== null) {\n            message.reexec = Number(object.reexec);\n        }\n        else {\n            message.reexec = 0;\n        }\n        if (object.disableStack !== undefined && object.disableStack !== null) {\n            message.disableStack = Boolean(object.disableStack);\n        }\n        else {\n            message.disableStack = false;\n        }\n        if (object.disableStorage !== undefined && object.disableStorage !== null) {\n            message.disableStorage = Boolean(object.disableStorage);\n        }\n        else {\n            message.disableStorage = false;\n        }\n        if (object.debug !== undefined && object.debug !== null) {\n            message.debug = Boolean(object.debug);\n        }\n        else {\n            message.debug = false;\n        }\n        if (object.limit !== undefined && object.limit !== null) {\n            message.limit = Number(object.limit);\n        }\n        else {\n            message.limit = 0;\n        }\n        if (object.overrides !== undefined && object.overrides !== null) {\n            message.overrides = ChainConfig.fromJSON(object.overrides);\n        }\n        else {\n            message.overrides = undefined;\n        }\n        if (object.enableMemory !== undefined && object.enableMemory !== null) {\n            message.enableMemory = Boolean(object.enableMemory);\n        }\n        else {\n            message.enableMemory = false;\n        }\n        if (object.enableReturnData !== undefined && object.enableReturnData !== null) {\n            message.enableReturnData = Boolean(object.enableReturnData);\n        }\n        else {\n            message.enableReturnData = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.tracer !== undefined && (obj.tracer = message.tracer);\n        message.timeout !== undefined && (obj.timeout = message.timeout);\n        message.reexec !== undefined && (obj.reexec = message.reexec);\n        message.disableStack !== undefined && (obj.disableStack = message.disableStack);\n        message.disableStorage !== undefined && (obj.disableStorage = message.disableStorage);\n        message.debug !== undefined && (obj.debug = message.debug);\n        message.limit !== undefined && (obj.limit = message.limit);\n        message.overrides !== undefined && (obj.overrides = message.overrides ? ChainConfig.toJSON(message.overrides) : undefined);\n        message.enableMemory !== undefined && (obj.enableMemory = message.enableMemory);\n        message.enableReturnData !== undefined && (obj.enableReturnData = message.enableReturnData);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTraceConfig };\n        if (object.tracer !== undefined && object.tracer !== null) {\n            message.tracer = object.tracer;\n        }\n        else {\n            message.tracer = '';\n        }\n        if (object.timeout !== undefined && object.timeout !== null) {\n            message.timeout = object.timeout;\n        }\n        else {\n            message.timeout = '';\n        }\n        if (object.reexec !== undefined && object.reexec !== null) {\n            message.reexec = object.reexec;\n        }\n        else {\n            message.reexec = 0;\n        }\n        if (object.disableStack !== undefined && object.disableStack !== null) {\n            message.disableStack = object.disableStack;\n        }\n        else {\n            message.disableStack = false;\n        }\n        if (object.disableStorage !== undefined && object.disableStorage !== null) {\n            message.disableStorage = object.disableStorage;\n        }\n        else {\n            message.disableStorage = false;\n        }\n        if (object.debug !== undefined && object.debug !== null) {\n            message.debug = object.debug;\n        }\n        else {\n            message.debug = false;\n        }\n        if (object.limit !== undefined && object.limit !== null) {\n            message.limit = object.limit;\n        }\n        else {\n            message.limit = 0;\n        }\n        if (object.overrides !== undefined && object.overrides !== null) {\n            message.overrides = ChainConfig.fromPartial(object.overrides);\n        }\n        else {\n            message.overrides = undefined;\n        }\n        if (object.enableMemory !== undefined && object.enableMemory !== null) {\n            message.enableMemory = object.enableMemory;\n        }\n        else {\n            message.enableMemory = false;\n        }\n        if (object.enableReturnData !== undefined && object.enableReturnData !== null) {\n            message.enableReturnData = object.enableReturnData;\n        }\n        else {\n            message.enableReturnData = false;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined && (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Any } from '../../../../google/protobuf/any';\nimport { Plan } from '../../../../cosmos/upgrade/v1beta1/upgrade';\nexport const protobufPackage = 'ibc.core.client.v1';\nconst baseIdentifiedClientState = { clientId: '' };\nexport const IdentifiedClientState = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedClientState };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.clientState !== undefined && (obj.clientState = message.clientState ? Any.toJSON(message.clientState) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    }\n};\nconst baseConsensusStateWithHeight = {};\nexport const ConsensusStateWithHeight = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== undefined) {\n            Height.encode(message.height, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConsensusStateWithHeight };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = Height.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConsensusStateWithHeight };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromJSON(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height ? Height.toJSON(message.height) : undefined);\n        message.consensusState !== undefined && (obj.consensusState = message.consensusState ? Any.toJSON(message.consensusState) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConsensusStateWithHeight };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromPartial(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    }\n};\nconst baseClientConsensusStates = { clientId: '' };\nexport const ClientConsensusStates = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== '') {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.consensusStates) {\n            ConsensusStateWithHeight.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.consensusStates.push(ConsensusStateWithHeight.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.consensusStates !== undefined && object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.consensusStates) {\n            obj.consensusStates = message.consensusStates.map((e) => (e ? ConsensusStateWithHeight.toJSON(e) : undefined));\n        }\n        else {\n            obj.consensusStates = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = '';\n        }\n        if (object.consensusStates !== undefined && object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseClientUpdateProposal = { title: '', description: '', subjectClientId: '', substituteClientId: '' };\nexport const ClientUpdateProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== '') {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== '') {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.subjectClientId !== '') {\n            writer.uint32(26).string(message.subjectClientId);\n        }\n        if (message.substituteClientId !== '') {\n            writer.uint32(34).string(message.substituteClientId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientUpdateProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.subjectClientId = reader.string();\n                    break;\n                case 4:\n                    message.substituteClientId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.subjectClientId !== undefined && object.subjectClientId !== null) {\n            message.subjectClientId = String(object.subjectClientId);\n        }\n        else {\n            message.subjectClientId = '';\n        }\n        if (object.substituteClientId !== undefined && object.substituteClientId !== null) {\n            message.substituteClientId = String(object.substituteClientId);\n        }\n        else {\n            message.substituteClientId = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined && (obj.description = message.description);\n        message.subjectClientId !== undefined && (obj.subjectClientId = message.subjectClientId);\n        message.substituteClientId !== undefined && (obj.substituteClientId = message.substituteClientId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.subjectClientId !== undefined && object.subjectClientId !== null) {\n            message.subjectClientId = object.subjectClientId;\n        }\n        else {\n            message.subjectClientId = '';\n        }\n        if (object.substituteClientId !== undefined && object.substituteClientId !== null) {\n            message.substituteClientId = object.substituteClientId;\n        }\n        else {\n            message.substituteClientId = '';\n        }\n        return message;\n    }\n};\nconst baseUpgradeProposal = { title: '', description: '' };\nexport const UpgradeProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== '') {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== '') {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.plan !== undefined) {\n            Plan.encode(message.plan, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.upgradedClientState !== undefined) {\n            Any.encode(message.upgradedClientState, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseUpgradeProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.plan = Plan.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.upgradedClientState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseUpgradeProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.plan !== undefined && object.plan !== null) {\n            message.plan = Plan.fromJSON(object.plan);\n        }\n        else {\n            message.plan = undefined;\n        }\n        if (object.upgradedClientState !== undefined && object.upgradedClientState !== null) {\n            message.upgradedClientState = Any.fromJSON(object.upgradedClientState);\n        }\n        else {\n            message.upgradedClientState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined && (obj.description = message.description);\n        message.plan !== undefined && (obj.plan = message.plan ? Plan.toJSON(message.plan) : undefined);\n        message.upgradedClientState !== undefined && (obj.upgradedClientState = message.upgradedClientState ? Any.toJSON(message.upgradedClientState) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseUpgradeProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.plan !== undefined && object.plan !== null) {\n            message.plan = Plan.fromPartial(object.plan);\n        }\n        else {\n            message.plan = undefined;\n        }\n        if (object.upgradedClientState !== undefined && object.upgradedClientState !== null) {\n            message.upgradedClientState = Any.fromPartial(object.upgradedClientState);\n        }\n        else {\n            message.upgradedClientState = undefined;\n        }\n        return message;\n    }\n};\nconst baseHeight = { revisionNumber: 0, revisionHeight: 0 };\nexport const Height = {\n    encode(message, writer = Writer.create()) {\n        if (message.revisionNumber !== 0) {\n            writer.uint32(8).uint64(message.revisionNumber);\n        }\n        if (message.revisionHeight !== 0) {\n            writer.uint32(16).uint64(message.revisionHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeight };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.revisionNumber = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.revisionHeight = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = Number(object.revisionNumber);\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = Number(object.revisionHeight);\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.revisionNumber !== undefined && (obj.revisionNumber = message.revisionNumber);\n        message.revisionHeight !== undefined && (obj.revisionHeight = message.revisionHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = object.revisionNumber;\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = object.revisionHeight;\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    }\n};\nconst baseParams = { allowedClients: '' };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.allowedClients) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.allowedClients.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.allowedClients) {\n            obj.allowedClients = message.allowedClients.map((e) => e);\n        }\n        else {\n            obj.allowedClients = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(e);\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Timestamp } from '../../../google/protobuf/timestamp';\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Header } from '../../../tendermint/types/types';\nimport { Any } from '../../../google/protobuf/any';\nimport { Duration } from '../../../google/protobuf/duration';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nexport const protobufPackage = 'cosmos.staking.v1beta1';\n/** BondStatus is the status of a validator. */\nexport var BondStatus;\n(function (BondStatus) {\n    /** BOND_STATUS_UNSPECIFIED - UNSPECIFIED defines an invalid validator status. */\n    BondStatus[BondStatus[\"BOND_STATUS_UNSPECIFIED\"] = 0] = \"BOND_STATUS_UNSPECIFIED\";\n    /** BOND_STATUS_UNBONDED - UNBONDED defines a validator that is not bonded. */\n    BondStatus[BondStatus[\"BOND_STATUS_UNBONDED\"] = 1] = \"BOND_STATUS_UNBONDED\";\n    /** BOND_STATUS_UNBONDING - UNBONDING defines a validator that is unbonding. */\n    BondStatus[BondStatus[\"BOND_STATUS_UNBONDING\"] = 2] = \"BOND_STATUS_UNBONDING\";\n    /** BOND_STATUS_BONDED - BONDED defines a validator that is bonded. */\n    BondStatus[BondStatus[\"BOND_STATUS_BONDED\"] = 3] = \"BOND_STATUS_BONDED\";\n    BondStatus[BondStatus[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(BondStatus || (BondStatus = {}));\nexport function bondStatusFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'BOND_STATUS_UNSPECIFIED':\n            return BondStatus.BOND_STATUS_UNSPECIFIED;\n        case 1:\n        case 'BOND_STATUS_UNBONDED':\n            return BondStatus.BOND_STATUS_UNBONDED;\n        case 2:\n        case 'BOND_STATUS_UNBONDING':\n            return BondStatus.BOND_STATUS_UNBONDING;\n        case 3:\n        case 'BOND_STATUS_BONDED':\n            return BondStatus.BOND_STATUS_BONDED;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return BondStatus.UNRECOGNIZED;\n    }\n}\nexport function bondStatusToJSON(object) {\n    switch (object) {\n        case BondStatus.BOND_STATUS_UNSPECIFIED:\n            return 'BOND_STATUS_UNSPECIFIED';\n        case BondStatus.BOND_STATUS_UNBONDED:\n            return 'BOND_STATUS_UNBONDED';\n        case BondStatus.BOND_STATUS_UNBONDING:\n            return 'BOND_STATUS_UNBONDING';\n        case BondStatus.BOND_STATUS_BONDED:\n            return 'BOND_STATUS_BONDED';\n        default:\n            return 'UNKNOWN';\n    }\n}\nconst baseHistoricalInfo = {};\nexport const HistoricalInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.valset) {\n            Validator.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHistoricalInfo };\n        message.valset = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.valset.push(Validator.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHistoricalInfo };\n        message.valset = [];\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.valset !== undefined && object.valset !== null) {\n            for (const e of object.valset) {\n                message.valset.push(Validator.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.header !== undefined && (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        if (message.valset) {\n            obj.valset = message.valset.map((e) => (e ? Validator.toJSON(e) : undefined));\n        }\n        else {\n            obj.valset = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHistoricalInfo };\n        message.valset = [];\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.valset !== undefined && object.valset !== null) {\n            for (const e of object.valset) {\n                message.valset.push(Validator.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseCommissionRates = { rate: '', maxRate: '', maxChangeRate: '' };\nexport const CommissionRates = {\n    encode(message, writer = Writer.create()) {\n        if (message.rate !== '') {\n            writer.uint32(10).string(message.rate);\n        }\n        if (message.maxRate !== '') {\n            writer.uint32(18).string(message.maxRate);\n        }\n        if (message.maxChangeRate !== '') {\n            writer.uint32(26).string(message.maxChangeRate);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommissionRates };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rate = reader.string();\n                    break;\n                case 2:\n                    message.maxRate = reader.string();\n                    break;\n                case 3:\n                    message.maxChangeRate = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommissionRates };\n        if (object.rate !== undefined && object.rate !== null) {\n            message.rate = String(object.rate);\n        }\n        else {\n            message.rate = '';\n        }\n        if (object.maxRate !== undefined && object.maxRate !== null) {\n            message.maxRate = String(object.maxRate);\n        }\n        else {\n            message.maxRate = '';\n        }\n        if (object.maxChangeRate !== undefined && object.maxChangeRate !== null) {\n            message.maxChangeRate = String(object.maxChangeRate);\n        }\n        else {\n            message.maxChangeRate = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.rate !== undefined && (obj.rate = message.rate);\n        message.maxRate !== undefined && (obj.maxRate = message.maxRate);\n        message.maxChangeRate !== undefined && (obj.maxChangeRate = message.maxChangeRate);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommissionRates };\n        if (object.rate !== undefined && object.rate !== null) {\n            message.rate = object.rate;\n        }\n        else {\n            message.rate = '';\n        }\n        if (object.maxRate !== undefined && object.maxRate !== null) {\n            message.maxRate = object.maxRate;\n        }\n        else {\n            message.maxRate = '';\n        }\n        if (object.maxChangeRate !== undefined && object.maxChangeRate !== null) {\n            message.maxChangeRate = object.maxChangeRate;\n        }\n        else {\n            message.maxChangeRate = '';\n        }\n        return message;\n    }\n};\nconst baseCommission = {};\nexport const Commission = {\n    encode(message, writer = Writer.create()) {\n        if (message.commissionRates !== undefined) {\n            CommissionRates.encode(message.commissionRates, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.updateTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.updateTime), writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommission };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.commissionRates = CommissionRates.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.updateTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommission };\n        if (object.commissionRates !== undefined && object.commissionRates !== null) {\n            message.commissionRates = CommissionRates.fromJSON(object.commissionRates);\n        }\n        else {\n            message.commissionRates = undefined;\n        }\n        if (object.updateTime !== undefined && object.updateTime !== null) {\n            message.updateTime = fromJsonTimestamp(object.updateTime);\n        }\n        else {\n            message.updateTime = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.commissionRates !== undefined && (obj.commissionRates = message.commissionRates ? CommissionRates.toJSON(message.commissionRates) : undefined);\n        message.updateTime !== undefined && (obj.updateTime = message.updateTime !== undefined ? message.updateTime.toISOString() : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommission };\n        if (object.commissionRates !== undefined && object.commissionRates !== null) {\n            message.commissionRates = CommissionRates.fromPartial(object.commissionRates);\n        }\n        else {\n            message.commissionRates = undefined;\n        }\n        if (object.updateTime !== undefined && object.updateTime !== null) {\n            message.updateTime = object.updateTime;\n        }\n        else {\n            message.updateTime = undefined;\n        }\n        return message;\n    }\n};\nconst baseDescription = { moniker: '', identity: '', website: '', securityContact: '', details: '' };\nexport const Description = {\n    encode(message, writer = Writer.create()) {\n        if (message.moniker !== '') {\n            writer.uint32(10).string(message.moniker);\n        }\n        if (message.identity !== '') {\n            writer.uint32(18).string(message.identity);\n        }\n        if (message.website !== '') {\n            writer.uint32(26).string(message.website);\n        }\n        if (message.securityContact !== '') {\n            writer.uint32(34).string(message.securityContact);\n        }\n        if (message.details !== '') {\n            writer.uint32(42).string(message.details);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDescription };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.moniker = reader.string();\n                    break;\n                case 2:\n                    message.identity = reader.string();\n                    break;\n                case 3:\n                    message.website = reader.string();\n                    break;\n                case 4:\n                    message.securityContact = reader.string();\n                    break;\n                case 5:\n                    message.details = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDescription };\n        if (object.moniker !== undefined && object.moniker !== null) {\n            message.moniker = String(object.moniker);\n        }\n        else {\n            message.moniker = '';\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.website !== undefined && object.website !== null) {\n            message.website = String(object.website);\n        }\n        else {\n            message.website = '';\n        }\n        if (object.securityContact !== undefined && object.securityContact !== null) {\n            message.securityContact = String(object.securityContact);\n        }\n        else {\n            message.securityContact = '';\n        }\n        if (object.details !== undefined && object.details !== null) {\n            message.details = String(object.details);\n        }\n        else {\n            message.details = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.moniker !== undefined && (obj.moniker = message.moniker);\n        message.identity !== undefined && (obj.identity = message.identity);\n        message.website !== undefined && (obj.website = message.website);\n        message.securityContact !== undefined && (obj.securityContact = message.securityContact);\n        message.details !== undefined && (obj.details = message.details);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDescription };\n        if (object.moniker !== undefined && object.moniker !== null) {\n            message.moniker = object.moniker;\n        }\n        else {\n            message.moniker = '';\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.website !== undefined && object.website !== null) {\n            message.website = object.website;\n        }\n        else {\n            message.website = '';\n        }\n        if (object.securityContact !== undefined && object.securityContact !== null) {\n            message.securityContact = object.securityContact;\n        }\n        else {\n            message.securityContact = '';\n        }\n        if (object.details !== undefined && object.details !== null) {\n            message.details = object.details;\n        }\n        else {\n            message.details = '';\n        }\n        return message;\n    }\n};\nconst baseValidator = { operatorAddress: '', jailed: false, status: 0, tokens: '', delegatorShares: '', unbondingHeight: 0, minSelfDelegation: '' };\nexport const Validator = {\n    encode(message, writer = Writer.create()) {\n        if (message.operatorAddress !== '') {\n            writer.uint32(10).string(message.operatorAddress);\n        }\n        if (message.consensusPubkey !== undefined) {\n            Any.encode(message.consensusPubkey, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.jailed === true) {\n            writer.uint32(24).bool(message.jailed);\n        }\n        if (message.status !== 0) {\n            writer.uint32(32).int32(message.status);\n        }\n        if (message.tokens !== '') {\n            writer.uint32(42).string(message.tokens);\n        }\n        if (message.delegatorShares !== '') {\n            writer.uint32(50).string(message.delegatorShares);\n        }\n        if (message.description !== undefined) {\n            Description.encode(message.description, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.unbondingHeight !== 0) {\n            writer.uint32(64).int64(message.unbondingHeight);\n        }\n        if (message.unbondingTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.unbondingTime), writer.uint32(74).fork()).ldelim();\n        }\n        if (message.commission !== undefined) {\n            Commission.encode(message.commission, writer.uint32(82).fork()).ldelim();\n        }\n        if (message.minSelfDelegation !== '') {\n            writer.uint32(90).string(message.minSelfDelegation);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.operatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.consensusPubkey = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.jailed = reader.bool();\n                    break;\n                case 4:\n                    message.status = reader.int32();\n                    break;\n                case 5:\n                    message.tokens = reader.string();\n                    break;\n                case 6:\n                    message.delegatorShares = reader.string();\n                    break;\n                case 7:\n                    message.description = Description.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.unbondingHeight = longToNumber(reader.int64());\n                    break;\n                case 9:\n                    message.unbondingTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 10:\n                    message.commission = Commission.decode(reader, reader.uint32());\n                    break;\n                case 11:\n                    message.minSelfDelegation = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidator };\n        if (object.operatorAddress !== undefined && object.operatorAddress !== null) {\n            message.operatorAddress = String(object.operatorAddress);\n        }\n        else {\n            message.operatorAddress = '';\n        }\n        if (object.consensusPubkey !== undefined && object.consensusPubkey !== null) {\n            message.consensusPubkey = Any.fromJSON(object.consensusPubkey);\n        }\n        else {\n            message.consensusPubkey = undefined;\n        }\n        if (object.jailed !== undefined && object.jailed !== null) {\n            message.jailed = Boolean(object.jailed);\n        }\n        else {\n            message.jailed = false;\n        }\n        if (object.status !== undefined && object.status !== null) {\n            message.status = bondStatusFromJSON(object.status);\n        }\n        else {\n            message.status = 0;\n        }\n        if (object.tokens !== undefined && object.tokens !== null) {\n            message.tokens = String(object.tokens);\n        }\n        else {\n            message.tokens = '';\n        }\n        if (object.delegatorShares !== undefined && object.delegatorShares !== null) {\n            message.delegatorShares = String(object.delegatorShares);\n        }\n        else {\n            message.delegatorShares = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromJSON(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.unbondingHeight !== undefined && object.unbondingHeight !== null) {\n            message.unbondingHeight = Number(object.unbondingHeight);\n        }\n        else {\n            message.unbondingHeight = 0;\n        }\n        if (object.unbondingTime !== undefined && object.unbondingTime !== null) {\n            message.unbondingTime = fromJsonTimestamp(object.unbondingTime);\n        }\n        else {\n            message.unbondingTime = undefined;\n        }\n        if (object.commission !== undefined && object.commission !== null) {\n            message.commission = Commission.fromJSON(object.commission);\n        }\n        else {\n            message.commission = undefined;\n        }\n        if (object.minSelfDelegation !== undefined && object.minSelfDelegation !== null) {\n            message.minSelfDelegation = String(object.minSelfDelegation);\n        }\n        else {\n            message.minSelfDelegation = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.operatorAddress !== undefined && (obj.operatorAddress = message.operatorAddress);\n        message.consensusPubkey !== undefined && (obj.consensusPubkey = message.consensusPubkey ? Any.toJSON(message.consensusPubkey) : undefined);\n        message.jailed !== undefined && (obj.jailed = message.jailed);\n        message.status !== undefined && (obj.status = bondStatusToJSON(message.status));\n        message.tokens !== undefined && (obj.tokens = message.tokens);\n        message.delegatorShares !== undefined && (obj.delegatorShares = message.delegatorShares);\n        message.description !== undefined && (obj.description = message.description ? Description.toJSON(message.description) : undefined);\n        message.unbondingHeight !== undefined && (obj.unbondingHeight = message.unbondingHeight);\n        message.unbondingTime !== undefined && (obj.unbondingTime = message.unbondingTime !== undefined ? message.unbondingTime.toISOString() : null);\n        message.commission !== undefined && (obj.commission = message.commission ? Commission.toJSON(message.commission) : undefined);\n        message.minSelfDelegation !== undefined && (obj.minSelfDelegation = message.minSelfDelegation);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidator };\n        if (object.operatorAddress !== undefined && object.operatorAddress !== null) {\n            message.operatorAddress = object.operatorAddress;\n        }\n        else {\n            message.operatorAddress = '';\n        }\n        if (object.consensusPubkey !== undefined && object.consensusPubkey !== null) {\n            message.consensusPubkey = Any.fromPartial(object.consensusPubkey);\n        }\n        else {\n            message.consensusPubkey = undefined;\n        }\n        if (object.jailed !== undefined && object.jailed !== null) {\n            message.jailed = object.jailed;\n        }\n        else {\n            message.jailed = false;\n        }\n        if (object.status !== undefined && object.status !== null) {\n            message.status = object.status;\n        }\n        else {\n            message.status = 0;\n        }\n        if (object.tokens !== undefined && object.tokens !== null) {\n            message.tokens = object.tokens;\n        }\n        else {\n            message.tokens = '';\n        }\n        if (object.delegatorShares !== undefined && object.delegatorShares !== null) {\n            message.delegatorShares = object.delegatorShares;\n        }\n        else {\n            message.delegatorShares = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromPartial(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.unbondingHeight !== undefined && object.unbondingHeight !== null) {\n            message.unbondingHeight = object.unbondingHeight;\n        }\n        else {\n            message.unbondingHeight = 0;\n        }\n        if (object.unbondingTime !== undefined && object.unbondingTime !== null) {\n            message.unbondingTime = object.unbondingTime;\n        }\n        else {\n            message.unbondingTime = undefined;\n        }\n        if (object.commission !== undefined && object.commission !== null) {\n            message.commission = Commission.fromPartial(object.commission);\n        }\n        else {\n            message.commission = undefined;\n        }\n        if (object.minSelfDelegation !== undefined && object.minSelfDelegation !== null) {\n            message.minSelfDelegation = object.minSelfDelegation;\n        }\n        else {\n            message.minSelfDelegation = '';\n        }\n        return message;\n    }\n};\nconst baseValAddresses = { addresses: '' };\nexport const ValAddresses = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.addresses) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValAddresses };\n        message.addresses = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.addresses.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValAddresses };\n        message.addresses = [];\n        if (object.addresses !== undefined && object.addresses !== null) {\n            for (const e of object.addresses) {\n                message.addresses.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.addresses) {\n            obj.addresses = message.addresses.map((e) => e);\n        }\n        else {\n            obj.addresses = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValAddresses };\n        message.addresses = [];\n        if (object.addresses !== undefined && object.addresses !== null) {\n            for (const e of object.addresses) {\n                message.addresses.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseDVPair = { delegatorAddress: '', validatorAddress: '' };\nexport const DVPair = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDVPair };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDVPair };\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined && (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDVPair };\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        return message;\n    }\n};\nconst baseDVPairs = {};\nexport const DVPairs = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.pairs) {\n            DVPair.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDVPairs };\n        message.pairs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pairs.push(DVPair.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDVPairs };\n        message.pairs = [];\n        if (object.pairs !== undefined && object.pairs !== null) {\n            for (const e of object.pairs) {\n                message.pairs.push(DVPair.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.pairs) {\n            obj.pairs = message.pairs.map((e) => (e ? DVPair.toJSON(e) : undefined));\n        }\n        else {\n            obj.pairs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDVPairs };\n        message.pairs = [];\n        if (object.pairs !== undefined && object.pairs !== null) {\n            for (const e of object.pairs) {\n                message.pairs.push(DVPair.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseDVVTriplet = { delegatorAddress: '', validatorSrcAddress: '', validatorDstAddress: '' };\nexport const DVVTriplet = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorSrcAddress !== '') {\n            writer.uint32(18).string(message.validatorSrcAddress);\n        }\n        if (message.validatorDstAddress !== '') {\n            writer.uint32(26).string(message.validatorDstAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDVVTriplet };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorSrcAddress = reader.string();\n                    break;\n                case 3:\n                    message.validatorDstAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDVVTriplet };\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorSrcAddress !== undefined && object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = String(object.validatorSrcAddress);\n        }\n        else {\n            message.validatorSrcAddress = '';\n        }\n        if (object.validatorDstAddress !== undefined && object.validatorDstAddress !== null) {\n            message.validatorDstAddress = String(object.validatorDstAddress);\n        }\n        else {\n            message.validatorDstAddress = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined && (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorSrcAddress !== undefined && (obj.validatorSrcAddress = message.validatorSrcAddress);\n        message.validatorDstAddress !== undefined && (obj.validatorDstAddress = message.validatorDstAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDVVTriplet };\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorSrcAddress !== undefined && object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = object.validatorSrcAddress;\n        }\n        else {\n            message.validatorSrcAddress = '';\n        }\n        if (object.validatorDstAddress !== undefined && object.validatorDstAddress !== null) {\n            message.validatorDstAddress = object.validatorDstAddress;\n        }\n        else {\n            message.validatorDstAddress = '';\n        }\n        return message;\n    }\n};\nconst baseDVVTriplets = {};\nexport const DVVTriplets = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.triplets) {\n            DVVTriplet.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDVVTriplets };\n        message.triplets = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.triplets.push(DVVTriplet.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDVVTriplets };\n        message.triplets = [];\n        if (object.triplets !== undefined && object.triplets !== null) {\n            for (const e of object.triplets) {\n                message.triplets.push(DVVTriplet.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.triplets) {\n            obj.triplets = message.triplets.map((e) => (e ? DVVTriplet.toJSON(e) : undefined));\n        }\n        else {\n            obj.triplets = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDVVTriplets };\n        message.triplets = [];\n        if (object.triplets !== undefined && object.triplets !== null) {\n            for (const e of object.triplets) {\n                message.triplets.push(DVVTriplet.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseDelegation = { delegatorAddress: '', validatorAddress: '', shares: '' };\nexport const Delegation = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.shares !== '') {\n            writer.uint32(26).string(message.shares);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegation };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.shares = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegation };\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.shares !== undefined && object.shares !== null) {\n            message.shares = String(object.shares);\n        }\n        else {\n            message.shares = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined && (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);\n        message.shares !== undefined && (obj.shares = message.shares);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegation };\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.shares !== undefined && object.shares !== null) {\n            message.shares = object.shares;\n        }\n        else {\n            message.shares = '';\n        }\n        return message;\n    }\n};\nconst baseUnbondingDelegation = { delegatorAddress: '', validatorAddress: '' };\nexport const UnbondingDelegation = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        for (const v of message.entries) {\n            UnbondingDelegationEntry.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseUnbondingDelegation };\n        message.entries = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.entries.push(UnbondingDelegationEntry.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseUnbondingDelegation };\n        message.entries = [];\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(UnbondingDelegationEntry.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined && (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => (e ? UnbondingDelegationEntry.toJSON(e) : undefined));\n        }\n        else {\n            obj.entries = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseUnbondingDelegation };\n        message.entries = [];\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(UnbondingDelegationEntry.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseUnbondingDelegationEntry = { creationHeight: 0, initialBalance: '', balance: '' };\nexport const UnbondingDelegationEntry = {\n    encode(message, writer = Writer.create()) {\n        if (message.creationHeight !== 0) {\n            writer.uint32(8).int64(message.creationHeight);\n        }\n        if (message.completionTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.completionTime), writer.uint32(18).fork()).ldelim();\n        }\n        if (message.initialBalance !== '') {\n            writer.uint32(26).string(message.initialBalance);\n        }\n        if (message.balance !== '') {\n            writer.uint32(34).string(message.balance);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseUnbondingDelegationEntry };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creationHeight = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.completionTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.initialBalance = reader.string();\n                    break;\n                case 4:\n                    message.balance = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseUnbondingDelegationEntry };\n        if (object.creationHeight !== undefined && object.creationHeight !== null) {\n            message.creationHeight = Number(object.creationHeight);\n        }\n        else {\n            message.creationHeight = 0;\n        }\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = fromJsonTimestamp(object.completionTime);\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        if (object.initialBalance !== undefined && object.initialBalance !== null) {\n            message.initialBalance = String(object.initialBalance);\n        }\n        else {\n            message.initialBalance = '';\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = String(object.balance);\n        }\n        else {\n            message.balance = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creationHeight !== undefined && (obj.creationHeight = message.creationHeight);\n        message.completionTime !== undefined && (obj.completionTime = message.completionTime !== undefined ? message.completionTime.toISOString() : null);\n        message.initialBalance !== undefined && (obj.initialBalance = message.initialBalance);\n        message.balance !== undefined && (obj.balance = message.balance);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseUnbondingDelegationEntry };\n        if (object.creationHeight !== undefined && object.creationHeight !== null) {\n            message.creationHeight = object.creationHeight;\n        }\n        else {\n            message.creationHeight = 0;\n        }\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = object.completionTime;\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        if (object.initialBalance !== undefined && object.initialBalance !== null) {\n            message.initialBalance = object.initialBalance;\n        }\n        else {\n            message.initialBalance = '';\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = object.balance;\n        }\n        else {\n            message.balance = '';\n        }\n        return message;\n    }\n};\nconst baseRedelegationEntry = { creationHeight: 0, initialBalance: '', sharesDst: '' };\nexport const RedelegationEntry = {\n    encode(message, writer = Writer.create()) {\n        if (message.creationHeight !== 0) {\n            writer.uint32(8).int64(message.creationHeight);\n        }\n        if (message.completionTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.completionTime), writer.uint32(18).fork()).ldelim();\n        }\n        if (message.initialBalance !== '') {\n            writer.uint32(26).string(message.initialBalance);\n        }\n        if (message.sharesDst !== '') {\n            writer.uint32(34).string(message.sharesDst);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRedelegationEntry };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creationHeight = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.completionTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.initialBalance = reader.string();\n                    break;\n                case 4:\n                    message.sharesDst = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRedelegationEntry };\n        if (object.creationHeight !== undefined && object.creationHeight !== null) {\n            message.creationHeight = Number(object.creationHeight);\n        }\n        else {\n            message.creationHeight = 0;\n        }\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = fromJsonTimestamp(object.completionTime);\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        if (object.initialBalance !== undefined && object.initialBalance !== null) {\n            message.initialBalance = String(object.initialBalance);\n        }\n        else {\n            message.initialBalance = '';\n        }\n        if (object.sharesDst !== undefined && object.sharesDst !== null) {\n            message.sharesDst = String(object.sharesDst);\n        }\n        else {\n            message.sharesDst = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creationHeight !== undefined && (obj.creationHeight = message.creationHeight);\n        message.completionTime !== undefined && (obj.completionTime = message.completionTime !== undefined ? message.completionTime.toISOString() : null);\n        message.initialBalance !== undefined && (obj.initialBalance = message.initialBalance);\n        message.sharesDst !== undefined && (obj.sharesDst = message.sharesDst);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRedelegationEntry };\n        if (object.creationHeight !== undefined && object.creationHeight !== null) {\n            message.creationHeight = object.creationHeight;\n        }\n        else {\n            message.creationHeight = 0;\n        }\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = object.completionTime;\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        if (object.initialBalance !== undefined && object.initialBalance !== null) {\n            message.initialBalance = object.initialBalance;\n        }\n        else {\n            message.initialBalance = '';\n        }\n        if (object.sharesDst !== undefined && object.sharesDst !== null) {\n            message.sharesDst = object.sharesDst;\n        }\n        else {\n            message.sharesDst = '';\n        }\n        return message;\n    }\n};\nconst baseRedelegation = { delegatorAddress: '', validatorSrcAddress: '', validatorDstAddress: '' };\nexport const Redelegation = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorSrcAddress !== '') {\n            writer.uint32(18).string(message.validatorSrcAddress);\n        }\n        if (message.validatorDstAddress !== '') {\n            writer.uint32(26).string(message.validatorDstAddress);\n        }\n        for (const v of message.entries) {\n            RedelegationEntry.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRedelegation };\n        message.entries = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorSrcAddress = reader.string();\n                    break;\n                case 3:\n                    message.validatorDstAddress = reader.string();\n                    break;\n                case 4:\n                    message.entries.push(RedelegationEntry.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRedelegation };\n        message.entries = [];\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorSrcAddress !== undefined && object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = String(object.validatorSrcAddress);\n        }\n        else {\n            message.validatorSrcAddress = '';\n        }\n        if (object.validatorDstAddress !== undefined && object.validatorDstAddress !== null) {\n            message.validatorDstAddress = String(object.validatorDstAddress);\n        }\n        else {\n            message.validatorDstAddress = '';\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(RedelegationEntry.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined && (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorSrcAddress !== undefined && (obj.validatorSrcAddress = message.validatorSrcAddress);\n        message.validatorDstAddress !== undefined && (obj.validatorDstAddress = message.validatorDstAddress);\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => (e ? RedelegationEntry.toJSON(e) : undefined));\n        }\n        else {\n            obj.entries = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRedelegation };\n        message.entries = [];\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorSrcAddress !== undefined && object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = object.validatorSrcAddress;\n        }\n        else {\n            message.validatorSrcAddress = '';\n        }\n        if (object.validatorDstAddress !== undefined && object.validatorDstAddress !== null) {\n            message.validatorDstAddress = object.validatorDstAddress;\n        }\n        else {\n            message.validatorDstAddress = '';\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(RedelegationEntry.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseParams = { maxValidators: 0, maxEntries: 0, historicalEntries: 0, bondDenom: '' };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.unbondingTime !== undefined) {\n            Duration.encode(message.unbondingTime, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.maxValidators !== 0) {\n            writer.uint32(16).uint32(message.maxValidators);\n        }\n        if (message.maxEntries !== 0) {\n            writer.uint32(24).uint32(message.maxEntries);\n        }\n        if (message.historicalEntries !== 0) {\n            writer.uint32(32).uint32(message.historicalEntries);\n        }\n        if (message.bondDenom !== '') {\n            writer.uint32(42).string(message.bondDenom);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.unbondingTime = Duration.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.maxValidators = reader.uint32();\n                    break;\n                case 3:\n                    message.maxEntries = reader.uint32();\n                    break;\n                case 4:\n                    message.historicalEntries = reader.uint32();\n                    break;\n                case 5:\n                    message.bondDenom = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.unbondingTime !== undefined && object.unbondingTime !== null) {\n            message.unbondingTime = Duration.fromJSON(object.unbondingTime);\n        }\n        else {\n            message.unbondingTime = undefined;\n        }\n        if (object.maxValidators !== undefined && object.maxValidators !== null) {\n            message.maxValidators = Number(object.maxValidators);\n        }\n        else {\n            message.maxValidators = 0;\n        }\n        if (object.maxEntries !== undefined && object.maxEntries !== null) {\n            message.maxEntries = Number(object.maxEntries);\n        }\n        else {\n            message.maxEntries = 0;\n        }\n        if (object.historicalEntries !== undefined && object.historicalEntries !== null) {\n            message.historicalEntries = Number(object.historicalEntries);\n        }\n        else {\n            message.historicalEntries = 0;\n        }\n        if (object.bondDenom !== undefined && object.bondDenom !== null) {\n            message.bondDenom = String(object.bondDenom);\n        }\n        else {\n            message.bondDenom = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.unbondingTime !== undefined && (obj.unbondingTime = message.unbondingTime ? Duration.toJSON(message.unbondingTime) : undefined);\n        message.maxValidators !== undefined && (obj.maxValidators = message.maxValidators);\n        message.maxEntries !== undefined && (obj.maxEntries = message.maxEntries);\n        message.historicalEntries !== undefined && (obj.historicalEntries = message.historicalEntries);\n        message.bondDenom !== undefined && (obj.bondDenom = message.bondDenom);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.unbondingTime !== undefined && object.unbondingTime !== null) {\n            message.unbondingTime = Duration.fromPartial(object.unbondingTime);\n        }\n        else {\n            message.unbondingTime = undefined;\n        }\n        if (object.maxValidators !== undefined && object.maxValidators !== null) {\n            message.maxValidators = object.maxValidators;\n        }\n        else {\n            message.maxValidators = 0;\n        }\n        if (object.maxEntries !== undefined && object.maxEntries !== null) {\n            message.maxEntries = object.maxEntries;\n        }\n        else {\n            message.maxEntries = 0;\n        }\n        if (object.historicalEntries !== undefined && object.historicalEntries !== null) {\n            message.historicalEntries = object.historicalEntries;\n        }\n        else {\n            message.historicalEntries = 0;\n        }\n        if (object.bondDenom !== undefined && object.bondDenom !== null) {\n            message.bondDenom = object.bondDenom;\n        }\n        else {\n            message.bondDenom = '';\n        }\n        return message;\n    }\n};\nconst baseDelegationResponse = {};\nexport const DelegationResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegation !== undefined) {\n            Delegation.encode(message.delegation, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.balance !== undefined) {\n            Coin.encode(message.balance, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegationResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegation = Delegation.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.balance = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegationResponse };\n        if (object.delegation !== undefined && object.delegation !== null) {\n            message.delegation = Delegation.fromJSON(object.delegation);\n        }\n        else {\n            message.delegation = undefined;\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = Coin.fromJSON(object.balance);\n        }\n        else {\n            message.balance = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegation !== undefined && (obj.delegation = message.delegation ? Delegation.toJSON(message.delegation) : undefined);\n        message.balance !== undefined && (obj.balance = message.balance ? Coin.toJSON(message.balance) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegationResponse };\n        if (object.delegation !== undefined && object.delegation !== null) {\n            message.delegation = Delegation.fromPartial(object.delegation);\n        }\n        else {\n            message.delegation = undefined;\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = Coin.fromPartial(object.balance);\n        }\n        else {\n            message.balance = undefined;\n        }\n        return message;\n    }\n};\nconst baseRedelegationEntryResponse = { balance: '' };\nexport const RedelegationEntryResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.redelegationEntry !== undefined) {\n            RedelegationEntry.encode(message.redelegationEntry, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.balance !== '') {\n            writer.uint32(34).string(message.balance);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRedelegationEntryResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.redelegationEntry = RedelegationEntry.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.balance = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRedelegationEntryResponse };\n        if (object.redelegationEntry !== undefined && object.redelegationEntry !== null) {\n            message.redelegationEntry = RedelegationEntry.fromJSON(object.redelegationEntry);\n        }\n        else {\n            message.redelegationEntry = undefined;\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = String(object.balance);\n        }\n        else {\n            message.balance = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.redelegationEntry !== undefined &&\n            (obj.redelegationEntry = message.redelegationEntry ? RedelegationEntry.toJSON(message.redelegationEntry) : undefined);\n        message.balance !== undefined && (obj.balance = message.balance);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRedelegationEntryResponse };\n        if (object.redelegationEntry !== undefined && object.redelegationEntry !== null) {\n            message.redelegationEntry = RedelegationEntry.fromPartial(object.redelegationEntry);\n        }\n        else {\n            message.redelegationEntry = undefined;\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = object.balance;\n        }\n        else {\n            message.balance = '';\n        }\n        return message;\n    }\n};\nconst baseRedelegationResponse = {};\nexport const RedelegationResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.redelegation !== undefined) {\n            Redelegation.encode(message.redelegation, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.entries) {\n            RedelegationEntryResponse.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRedelegationResponse };\n        message.entries = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.redelegation = Redelegation.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.entries.push(RedelegationEntryResponse.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRedelegationResponse };\n        message.entries = [];\n        if (object.redelegation !== undefined && object.redelegation !== null) {\n            message.redelegation = Redelegation.fromJSON(object.redelegation);\n        }\n        else {\n            message.redelegation = undefined;\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(RedelegationEntryResponse.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.redelegation !== undefined && (obj.redelegation = message.redelegation ? Redelegation.toJSON(message.redelegation) : undefined);\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => (e ? RedelegationEntryResponse.toJSON(e) : undefined));\n        }\n        else {\n            obj.entries = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRedelegationResponse };\n        message.entries = [];\n        if (object.redelegation !== undefined && object.redelegation !== null) {\n            message.redelegation = Redelegation.fromPartial(object.redelegation);\n        }\n        else {\n            message.redelegation = undefined;\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(RedelegationEntryResponse.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst basePool = { notBondedTokens: '', bondedTokens: '' };\nexport const Pool = {\n    encode(message, writer = Writer.create()) {\n        if (message.notBondedTokens !== '') {\n            writer.uint32(10).string(message.notBondedTokens);\n        }\n        if (message.bondedTokens !== '') {\n            writer.uint32(18).string(message.bondedTokens);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePool };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.notBondedTokens = reader.string();\n                    break;\n                case 2:\n                    message.bondedTokens = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePool };\n        if (object.notBondedTokens !== undefined && object.notBondedTokens !== null) {\n            message.notBondedTokens = String(object.notBondedTokens);\n        }\n        else {\n            message.notBondedTokens = '';\n        }\n        if (object.bondedTokens !== undefined && object.bondedTokens !== null) {\n            message.bondedTokens = String(object.bondedTokens);\n        }\n        else {\n            message.bondedTokens = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.notBondedTokens !== undefined && (obj.notBondedTokens = message.notBondedTokens);\n        message.bondedTokens !== undefined && (obj.bondedTokens = message.bondedTokens);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePool };\n        if (object.notBondedTokens !== undefined && object.notBondedTokens !== null) {\n            message.notBondedTokens = object.notBondedTokens;\n        }\n        else {\n            message.notBondedTokens = '';\n        }\n        if (object.bondedTokens !== undefined && object.bondedTokens !== null) {\n            message.bondedTokens = object.bondedTokens;\n        }\n        else {\n            message.bondedTokens = '';\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","<template>\n\t<div v-if=\"initialized\">\n\t\t<SpWallet ref=\"wallet\" v-on:dropdown-opened=\"$refs.menu.closeDropdown()\" />\n\t\t<SpLayout>\n\t\t\t<template v-slot:sidebar>\n\t\t\t\t<Sidebar />\n\t\t\t</template>\n\t\t\t<template v-slot:content>\n\t\t\t\t<router-view />\n\t\t\t</template>\n\t\t</SpLayout>\n\t</div>\n</template>\n\n<style>\nbody {\n\tmargin: 0;\n}\n</style>\n\n<script>\nimport './scss/app.scss'\nimport '@starport/vue/lib/starport-vue.css'\nimport Sidebar from './components/Sidebar'\n\nexport default {\n\tcomponents: {\n\t\tSidebar\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tinitialized: false\n\t\t}\n\t},\n\tcomputed: {\n\t\thasWallet() {\n\t\t\treturn this.$store.hasModule(['common', 'wallet'])\n\t\t}\n\t},\n\tasync created() {\n\t\tawait this.$store.dispatch('common/env/init')\n\t\tthis.initialized = true\n\t},\n\terrorCaptured(err) {\n\t\tconsole.log(err)\n\t\treturn false\n\t}\n}\n</script>\n","<template>\n\t<SpSidebar\n\t\tv-on:sidebar-open=\"sidebarOpen = true\"\n\t\tv-on:sidebar-close=\"sidebarOpen = false\"\n\t>\n\t\t<template v-slot:default>\n\t\t\t<SpLinkIcon link=\"/\" text=\"Dashboard\" icon=\"Dashboard\" />\n\t\t\t<SpLinkIcon link=\"/types\" text=\"Custom Type\" icon=\"Form\" />\n\t\t\t<SpLinkIcon link=\"/relayers\" text=\"Relayers\" icon=\"Transactions\" />\n\t\t\t<div class=\"sp-dash\"></div>\n\t\t\t<SpLinkIcon\n\t\t\t\thref=\"https://github.com/tendermint/starport\"\n\t\t\t\ttarget=\"_blank\"\n\t\t\t\ttext=\"Documentation\"\n\t\t\t\ticon=\"Docs\"\n\t\t\t/>\n\t\t</template>\n\t\t<template v-slot:footer>\n\t\t\t<SpStatusAPI :showText=\"sidebarOpen\" />\n\t\t\t<SpStatusRPC :showText=\"sidebarOpen\" />\n\t\t\t<SpStatusWS :showText=\"sidebarOpen\" />\n\t\t\t<div class=\"sp-text\">Build: v0.3.8</div>\n\t\t</template>\n\t</SpSidebar>\n</template>\n\n<script>\nexport default {\n\tname: 'Sidebar',\n\tdata() {\n\t\treturn {\n\t\t\tsidebarOpen: true\n\t\t}\n\t},\n\tcomputed: {\n\t\thasWallet() {\n\t\t\treturn this.$store.hasModule(['common', 'wallet'])\n\t\t}\n\t}\n}\n</script>\n","import { render } from \"./Sidebar.vue?vue&type=template&id=bf6241ea\"\nimport script from \"./Sidebar.vue?vue&type=script&lang=js\"\nexport * from \"./Sidebar.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/home/runner/work/ancon-protocol/ancon-protocol/vue/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./App.vue?vue&type=template&id=a451c746\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=a451c746&lang=css\"\n\nimport exportComponent from \"/home/runner/work/ancon-protocol/ancon-protocol/vue/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title aguaclara/genesis.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'ElectronicSignaturesIndustries.anconprotocol.aguaclara';\nconst baseAguaclaraPacketData = {\n    creator: '',\n    tokenAddress: '',\n    tokenId: '',\n    didRecipient: '',\n    toMetadata: '',\n    hash: '',\n    currentChainId: '',\n    recipientChainId: ''\n};\nexport const AguaclaraPacketData = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.tokenAddress !== '') {\n            writer.uint32(18).string(message.tokenAddress);\n        }\n        if (message.tokenId !== '') {\n            writer.uint32(26).string(message.tokenId);\n        }\n        if (message.didRecipient !== '') {\n            writer.uint32(34).string(message.didRecipient);\n        }\n        if (message.toMetadata !== '') {\n            writer.uint32(42).string(message.toMetadata);\n        }\n        if (message.hash !== '') {\n            writer.uint32(50).string(message.hash);\n        }\n        if (message.currentChainId !== '') {\n            writer.uint32(58).string(message.currentChainId);\n        }\n        if (message.recipientChainId !== '') {\n            writer.uint32(66).string(message.recipientChainId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAguaclaraPacketData };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.tokenAddress = reader.string();\n                    break;\n                case 3:\n                    message.tokenId = reader.string();\n                    break;\n                case 4:\n                    message.didRecipient = reader.string();\n                    break;\n                case 5:\n                    message.toMetadata = reader.string();\n                    break;\n                case 6:\n                    message.hash = reader.string();\n                    break;\n                case 7:\n                    message.currentChainId = reader.string();\n                    break;\n                case 8:\n                    message.recipientChainId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAguaclaraPacketData };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.tokenAddress !== undefined && object.tokenAddress !== null) {\n            message.tokenAddress = String(object.tokenAddress);\n        }\n        else {\n            message.tokenAddress = '';\n        }\n        if (object.tokenId !== undefined && object.tokenId !== null) {\n            message.tokenId = String(object.tokenId);\n        }\n        else {\n            message.tokenId = '';\n        }\n        if (object.didRecipient !== undefined && object.didRecipient !== null) {\n            message.didRecipient = String(object.didRecipient);\n        }\n        else {\n            message.didRecipient = '';\n        }\n        if (object.toMetadata !== undefined && object.toMetadata !== null) {\n            message.toMetadata = String(object.toMetadata);\n        }\n        else {\n            message.toMetadata = '';\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = String(object.hash);\n        }\n        else {\n            message.hash = '';\n        }\n        if (object.currentChainId !== undefined && object.currentChainId !== null) {\n            message.currentChainId = String(object.currentChainId);\n        }\n        else {\n            message.currentChainId = '';\n        }\n        if (object.recipientChainId !== undefined && object.recipientChainId !== null) {\n            message.recipientChainId = String(object.recipientChainId);\n        }\n        else {\n            message.recipientChainId = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.tokenAddress !== undefined && (obj.tokenAddress = message.tokenAddress);\n        message.tokenId !== undefined && (obj.tokenId = message.tokenId);\n        message.didRecipient !== undefined && (obj.didRecipient = message.didRecipient);\n        message.toMetadata !== undefined && (obj.toMetadata = message.toMetadata);\n        message.hash !== undefined && (obj.hash = message.hash);\n        message.currentChainId !== undefined && (obj.currentChainId = message.currentChainId);\n        message.recipientChainId !== undefined && (obj.recipientChainId = message.recipientChainId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAguaclaraPacketData };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.tokenAddress !== undefined && object.tokenAddress !== null) {\n            message.tokenAddress = object.tokenAddress;\n        }\n        else {\n            message.tokenAddress = '';\n        }\n        if (object.tokenId !== undefined && object.tokenId !== null) {\n            message.tokenId = object.tokenId;\n        }\n        else {\n            message.tokenId = '';\n        }\n        if (object.didRecipient !== undefined && object.didRecipient !== null) {\n            message.didRecipient = object.didRecipient;\n        }\n        else {\n            message.didRecipient = '';\n        }\n        if (object.toMetadata !== undefined && object.toMetadata !== null) {\n            message.toMetadata = object.toMetadata;\n        }\n        else {\n            message.toMetadata = '';\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = '';\n        }\n        if (object.currentChainId !== undefined && object.currentChainId !== null) {\n            message.currentChainId = object.currentChainId;\n        }\n        else {\n            message.currentChainId = '';\n        }\n        if (object.recipientChainId !== undefined && object.recipientChainId !== null) {\n            message.recipientChainId = object.recipientChainId;\n        }\n        else {\n            message.recipientChainId = '';\n        }\n        return message;\n    }\n};\nconst baseNoData = {};\nexport const NoData = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseNoData };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseNoData };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseNoData };\n        return message;\n    }\n};\n","/* eslint-disable */\nimport { Reader, Writer } from 'protobufjs/minimal';\nimport { AguaclaraPacketData } from '../aguaclara/packet';\nexport const protobufPackage = 'ElectronicSignaturesIndustries.anconprotocol.aguaclara';\nconst baseMsgSendMetadataOwnership = { creator: '', portId: '', channelId: '' };\nexport const MsgSendMetadataOwnership = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== '') {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.portId !== '') {\n            writer.uint32(18).string(message.portId);\n        }\n        if (message.channelId !== '') {\n            writer.uint32(26).string(message.channelId);\n        }\n        if (message.data !== undefined) {\n            AguaclaraPacketData.encode(message.data, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSendMetadataOwnership };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.portId = reader.string();\n                    break;\n                case 3:\n                    message.channelId = reader.string();\n                    break;\n                case 4:\n                    message.data = AguaclaraPacketData.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSendMetadataOwnership };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = AguaclaraPacketData.fromJSON(object.data);\n        }\n        else {\n            message.data = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.data !== undefined && (obj.data = message.data ? AguaclaraPacketData.toJSON(message.data) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSendMetadataOwnership };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = '';\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = AguaclaraPacketData.fromPartial(object.data);\n        }\n        else {\n            message.data = undefined;\n        }\n        return message;\n    }\n};\nconst baseMsgSendMetadataOwnershipResponse = { cid: '' };\nexport const MsgSendMetadataOwnershipResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.cid !== '') {\n            writer.uint32(10).string(message.cid);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSendMetadataOwnershipResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.cid = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSendMetadataOwnershipResponse };\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = String(object.cid);\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.cid !== undefined && (obj.cid = message.cid);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSendMetadataOwnershipResponse };\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = object.cid;\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    SendMetadataOwnership(request) {\n        const data = MsgSendMetadataOwnership.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.aguaclara.Msg', 'SendMetadataOwnership', data);\n        return promise.then((data) => MsgSendMetadataOwnershipResponse.decode(new Reader(data)));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgSendMetadataOwnership } from \"./types/aguaclara/tx\";\nconst types = [\n    [\"/ElectronicSignaturesIndustries.anconprotocol.aguaclara.MsgSendMetadataOwnership\", MsgSendMetadataOwnership],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgSendMetadataOwnership: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.aguaclara.MsgSendMetadataOwnership\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { AguaclaraPacketData } from \"./module/types/aguaclara/packet\";\nimport { NoData } from \"./module/types/aguaclara/packet\";\nexport { AguaclaraPacketData, NoData };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        _Structure: {\n            AguaclaraPacketData: getStructure(AguaclaraPacketData.fromPartial({})),\n            NoData: getStructure(NoData.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: ElectronicSignaturesIndustries.anconprotocol.aguaclara initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async sendMsgSendMetadataOwnership({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSendMetadataOwnership(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSendMetadataOwnership:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSendMetadataOwnership:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgSendMetadataOwnership({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSendMetadataOwnership(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSendMetadataOwnership:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSendMetadataOwnership:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title anconprotocol/did_registry.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryReadDelegate\n         * @summary Queries a list of delegates items.\n         * @request GET:/ancon/didregistry/delegates/{id}\n         */\n        this.queryReadDelegate = (id, params = {}) => this.request({\n            path: `/ancon/didregistry/delegates/${id}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryIdentifyOwner\n         * @summary Queries a list of owners items.\n         * @request GET:/ancon/didregistry/{address}\n         */\n        this.queryIdentifyOwner = (address, params = {}) => this.request({\n            path: `/ancon/didregistry/${address}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryGetAttributes\n         * @summary Queries a list of Attributes items.\n         * @request GET:/ancon/didregistry/{address}/attributes\n         */\n        this.queryGetAttributes = (address, params = {}) => this.request({\n            path: `/ancon/didregistry/${address}/attributes`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryGetDidKey\n         * @request GET:/ancon/didregistry/{name}\n         */\n        this.queryGetDidKey = (name, params = {}) => this.request({\n            path: `/ancon/didregistry/${name}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryCollection\n         * @summary Collection queries the NFTs of the specified denom\n         * @request GET:/ancon/nft/collections/{denomId}\n         */\n        this.queryCollection = (denomId, query, params = {}) => this.request({\n            path: `/ancon/nft/collections/${denomId}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenoms\n         * @summary Denoms queries all the denoms\n         * @request GET:/ancon/nft/denoms\n         */\n        this.queryDenoms = (query, params = {}) => this.request({\n            path: `/ancon/nft/denoms`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenom\n         * @summary Denom queries the definition of a given denom\n         * @request GET:/ancon/nft/denoms/{denomId}\n         */\n        this.queryDenom = (denomId, params = {}) => this.request({\n            path: `/ancon/nft/denoms/${denomId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryOwner\n         * @summary Owner queries the NFTs of the specified owner\n         * @request GET:/ancon/nft/nfts\n         */\n        this.queryOwner = (query, params = {}) => this.request({\n            path: `/ancon/nft/nfts`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryGetNft\n         * @summary NFT queries the NFT for the given denom and token ID\n         * @request GET:/ancon/nft/nfts/{denomId}/{tokenId}\n         */\n        this.queryGetNft = (denomId, tokenId, params = {}) => this.request({\n            path: `/ancon/nft/nfts/${denomId}/${tokenId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryReadMetadataProof\n         * @summary Reads metadata proofs\n         * @request GET:/ancon/proof/{cid}/{path}\n         */\n        this.queryReadMetadataProof = (cid, path, params = {}) => this.request({\n            path: `/ancon/proof/${cid}/${path}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryResource\n         * @summary Queries a list of resource items.\n         * @request GET:/ancon/resource/{cid}\n         */\n        this.queryResource = (cid, query, params = {}) => this.request({\n            path: `/ancon/resource/${cid}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryReadRoyaltyInfo\n         * @summary ReadRoyaltyInfo\n         * @request GET:/ancon/royalty/{cid}/{price}\n         */\n        this.queryReadRoyaltyInfo = (cid, price, params = {}) => this.request({\n            path: `/ancon/royalty/${cid}/${price}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryReadWithPath\n         * @summary Queries a list of resource items.\n         * @request GET:/ancon/{cid}/{path}\n         */\n        this.queryReadWithPath = (cid, path, params = {}) => this.request({\n            path: `/ancon/${cid}/${path}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryResolveDidWeb\n         * @request GET:/user/{name}/did.json\n         */\n        this.queryResolveDidWeb = (name, params = {}) => this.request({\n            path: `/user/${name}/did.json`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgMintTrustedContent } from \"./types/anconprotocol/tx\";\nimport { MsgMintTrustedResource } from \"./types/anconprotocol/tx\";\nimport { MsgIssueDenom } from \"./types/anconprotocol/tx\";\nimport { MsgRevokeDelegate } from \"./types/anconprotocol/tx\";\nimport { MsgGrantAttribute } from \"./types/anconprotocol/tx\";\nimport { MsgTransferNFT } from \"./types/anconprotocol/tx\";\nimport { MsgSendMetadataOwnership } from \"./types/anconprotocol/tx\";\nimport { MsgMetadata } from \"./types/anconprotocol/tx\";\nimport { MsgUpdateMetadataOwnership } from \"./types/anconprotocol/tx\";\nimport { MsgRevokeDid } from \"./types/anconprotocol/tx\";\nimport { MsgGrantDelegate } from \"./types/anconprotocol/tx\";\nimport { MsgRevokeAttribute } from \"./types/anconprotocol/tx\";\nimport { MsgUpdateDid } from \"./types/anconprotocol/tx\";\nimport { MsgMintNFT } from \"./types/anconprotocol/tx\";\nimport { MsgTransferDenom } from \"./types/anconprotocol/tx\";\nimport { MsgCreateDid } from \"./types/anconprotocol/tx\";\nimport { MsgRoyaltyInfo } from \"./types/anconprotocol/tx\";\nimport { MsgFile } from \"./types/anconprotocol/tx\";\nimport { MsgChangeOwner } from \"./types/anconprotocol/tx\";\nimport { MsgBurnNFT } from \"./types/anconprotocol/tx\";\nimport { MsgEditNFT } from \"./types/anconprotocol/tx\";\nconst types = [\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgMintTrustedContent\", MsgMintTrustedContent],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgMintTrustedResource\", MsgMintTrustedResource],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgIssueDenom\", MsgIssueDenom],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgRevokeDelegate\", MsgRevokeDelegate],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgGrantAttribute\", MsgGrantAttribute],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgTransferNFT\", MsgTransferNFT],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgSendMetadataOwnership\", MsgSendMetadataOwnership],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgMetadata\", MsgMetadata],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgUpdateMetadataOwnership\", MsgUpdateMetadataOwnership],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgRevokeDid\", MsgRevokeDid],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgGrantDelegate\", MsgGrantDelegate],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgRevokeAttribute\", MsgRevokeAttribute],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgUpdateDid\", MsgUpdateDid],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgMintNFT\", MsgMintNFT],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgTransferDenom\", MsgTransferDenom],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgCreateDid\", MsgCreateDid],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgRoyaltyInfo\", MsgRoyaltyInfo],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgFile\", MsgFile],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgChangeOwner\", MsgChangeOwner],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgBurnNFT\", MsgBurnNFT],\n    [\"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgEditNFT\", MsgEditNFT],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgMintTrustedContent: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgMintTrustedContent\", value: data }),\n        msgMintTrustedResource: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgMintTrustedResource\", value: data }),\n        msgIssueDenom: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgIssueDenom\", value: data }),\n        msgRevokeDelegate: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgRevokeDelegate\", value: data }),\n        msgGrantAttribute: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgGrantAttribute\", value: data }),\n        msgTransferNFT: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgTransferNFT\", value: data }),\n        msgSendMetadataOwnership: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgSendMetadataOwnership\", value: data }),\n        msgMetadata: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgMetadata\", value: data }),\n        msgUpdateMetadataOwnership: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgUpdateMetadataOwnership\", value: data }),\n        msgRevokeDid: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgRevokeDid\", value: data }),\n        msgGrantDelegate: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgGrantDelegate\", value: data }),\n        msgRevokeAttribute: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgRevokeAttribute\", value: data }),\n        msgUpdateDid: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgUpdateDid\", value: data }),\n        msgMintNFT: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgMintNFT\", value: data }),\n        msgTransferDenom: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgTransferDenom\", value: data }),\n        msgCreateDid: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgCreateDid\", value: data }),\n        msgRoyaltyInfo: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgRoyaltyInfo\", value: data }),\n        msgFile: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgFile\", value: data }),\n        msgChangeOwner: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgChangeOwner\", value: data }),\n        msgBurnNFT: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgBurnNFT\", value: data }),\n        msgEditNFT: (data) => ({ typeUrl: \"/ElectronicSignaturesIndustries.anconprotocol.anconprotocol.MsgEditNFT\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { DIDOwner } from \"./module/types/anconprotocol/did_registry\";\nimport { DIDWebRoute } from \"./module/types/anconprotocol/did_registry\";\nimport { Delegate } from \"./module/types/anconprotocol/did_registry\";\nimport { Change } from \"./module/types/anconprotocol/did_registry\";\nimport { Attribute } from \"./module/types/anconprotocol/did_registry\";\nimport { BaseNFT } from \"./module/types/anconprotocol/nft\";\nimport { Denom } from \"./module/types/anconprotocol/nft\";\nimport { IDCollection } from \"./module/types/anconprotocol/nft\";\nimport { Owner } from \"./module/types/anconprotocol/nft\";\nimport { Collection } from \"./module/types/anconprotocol/nft\";\nimport { QueryReadDidKeyRequest } from \"./module/types/anconprotocol/query\";\nimport { QueryReadDidKeyResponse } from \"./module/types/anconprotocol/query\";\nimport { QueryNonceRequest } from \"./module/types/anconprotocol/query\";\nimport { QueryNonceResponse } from \"./module/types/anconprotocol/query\";\nimport { QueryOwnersResponse } from \"./module/types/anconprotocol/query\";\nimport { MsgRegisterRelay } from \"./module/types/anconprotocol/tx\";\nimport { MsgRegisterRelayResponse } from \"./module/types/anconprotocol/tx\";\nimport { MsgSendCrossMintTrusted } from \"./module/types/anconprotocol/tx\";\nimport { MsgSendCrossMintTrustedResponse } from \"./module/types/anconprotocol/tx\";\nimport { MsgMintSwapResponse } from \"./module/types/anconprotocol/tx\";\nimport { MsgMintSwap } from \"./module/types/anconprotocol/tx\";\nimport { MsgInitiateSwap } from \"./module/types/anconprotocol/tx\";\nimport { MsgInitiateSwapResponse } from \"./module/types/anconprotocol/tx\";\nimport { MsgClaimSwap } from \"./module/types/anconprotocol/tx\";\nimport { MsgClaimSwapResponse } from \"./module/types/anconprotocol/tx\";\nimport { MsgCreateDIDOwner } from \"./module/types/anconprotocol/tx\";\nimport { MsgCreateDIDOwnerResponse } from \"./module/types/anconprotocol/tx\";\nimport { MsgSetAttribute } from \"./module/types/anconprotocol/tx\";\nimport { MsgSetAttributeResponse } from \"./module/types/anconprotocol/tx\";\nimport { MsgFileMetadataResponse } from \"./module/types/anconprotocol/tx\";\nimport { MsgFileResponse } from \"./module/types/anconprotocol/tx\";\nimport { AguaclaraPacketData } from \"./module/types/anconprotocol/tx\";\nexport { DIDOwner, DIDWebRoute, Delegate, Change, Attribute, BaseNFT, Denom, IDCollection, Owner, Collection, QueryReadDidKeyRequest, QueryReadDidKeyResponse, QueryNonceRequest, QueryNonceResponse, QueryOwnersResponse, MsgRegisterRelay, MsgRegisterRelayResponse, MsgSendCrossMintTrusted, MsgSendCrossMintTrustedResponse, MsgMintSwapResponse, MsgMintSwap, MsgInitiateSwap, MsgInitiateSwapResponse, MsgClaimSwap, MsgClaimSwapResponse, MsgCreateDIDOwner, MsgCreateDIDOwnerResponse, MsgSetAttribute, MsgSetAttributeResponse, MsgFileMetadataResponse, MsgFileResponse, AguaclaraPacketData };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        ReadRoyaltyInfo: {},\n        ReadWithPath: {},\n        ReadMetadataProof: {},\n        IdentifyOwner: {},\n        GetAttributes: {},\n        Resource: {},\n        ReadDelegate: {},\n        Owner: {},\n        Collection: {},\n        Denom: {},\n        Denoms: {},\n        GetNft: {},\n        ResolveDidWeb: {},\n        GetDidKey: {},\n        _Structure: {\n            DIDOwner: getStructure(DIDOwner.fromPartial({})),\n            DIDWebRoute: getStructure(DIDWebRoute.fromPartial({})),\n            Delegate: getStructure(Delegate.fromPartial({})),\n            Change: getStructure(Change.fromPartial({})),\n            Attribute: getStructure(Attribute.fromPartial({})),\n            BaseNFT: getStructure(BaseNFT.fromPartial({})),\n            Denom: getStructure(Denom.fromPartial({})),\n            IDCollection: getStructure(IDCollection.fromPartial({})),\n            Owner: getStructure(Owner.fromPartial({})),\n            Collection: getStructure(Collection.fromPartial({})),\n            QueryReadDidKeyRequest: getStructure(QueryReadDidKeyRequest.fromPartial({})),\n            QueryReadDidKeyResponse: getStructure(QueryReadDidKeyResponse.fromPartial({})),\n            QueryNonceRequest: getStructure(QueryNonceRequest.fromPartial({})),\n            QueryNonceResponse: getStructure(QueryNonceResponse.fromPartial({})),\n            QueryOwnersResponse: getStructure(QueryOwnersResponse.fromPartial({})),\n            MsgRegisterRelay: getStructure(MsgRegisterRelay.fromPartial({})),\n            MsgRegisterRelayResponse: getStructure(MsgRegisterRelayResponse.fromPartial({})),\n            MsgSendCrossMintTrusted: getStructure(MsgSendCrossMintTrusted.fromPartial({})),\n            MsgSendCrossMintTrustedResponse: getStructure(MsgSendCrossMintTrustedResponse.fromPartial({})),\n            MsgMintSwapResponse: getStructure(MsgMintSwapResponse.fromPartial({})),\n            MsgMintSwap: getStructure(MsgMintSwap.fromPartial({})),\n            MsgInitiateSwap: getStructure(MsgInitiateSwap.fromPartial({})),\n            MsgInitiateSwapResponse: getStructure(MsgInitiateSwapResponse.fromPartial({})),\n            MsgClaimSwap: getStructure(MsgClaimSwap.fromPartial({})),\n            MsgClaimSwapResponse: getStructure(MsgClaimSwapResponse.fromPartial({})),\n            MsgCreateDIDOwner: getStructure(MsgCreateDIDOwner.fromPartial({})),\n            MsgCreateDIDOwnerResponse: getStructure(MsgCreateDIDOwnerResponse.fromPartial({})),\n            MsgSetAttribute: getStructure(MsgSetAttribute.fromPartial({})),\n            MsgSetAttributeResponse: getStructure(MsgSetAttributeResponse.fromPartial({})),\n            MsgFileMetadataResponse: getStructure(MsgFileMetadataResponse.fromPartial({})),\n            MsgFileResponse: getStructure(MsgFileResponse.fromPartial({})),\n            AguaclaraPacketData: getStructure(AguaclaraPacketData.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getReadRoyaltyInfo: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ReadRoyaltyInfo[JSON.stringify(params)] ?? {};\n        },\n        getReadWithPath: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ReadWithPath[JSON.stringify(params)] ?? {};\n        },\n        getReadMetadataProof: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ReadMetadataProof[JSON.stringify(params)] ?? {};\n        },\n        getIdentifyOwner: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.IdentifyOwner[JSON.stringify(params)] ?? {};\n        },\n        getGetAttributes: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.GetAttributes[JSON.stringify(params)] ?? {};\n        },\n        getResource: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Resource[JSON.stringify(params)] ?? {};\n        },\n        getReadDelegate: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ReadDelegate[JSON.stringify(params)] ?? {};\n        },\n        getOwner: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Owner[JSON.stringify(params)] ?? {};\n        },\n        getCollection: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Collection[JSON.stringify(params)] ?? {};\n        },\n        getDenom: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Denom[JSON.stringify(params)] ?? {};\n        },\n        getDenoms: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Denoms[JSON.stringify(params)] ?? {};\n        },\n        getGetNft: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.GetNft[JSON.stringify(params)] ?? {};\n        },\n        getResolveDidWeb: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ResolveDidWeb[JSON.stringify(params)] ?? {};\n        },\n        getGetDidKey: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.GetDidKey[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: ElectronicSignaturesIndustries.anconprotocol.anconprotocol initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryReadRoyaltyInfo({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryReadRoyaltyInfo(key.cid, key.price)).data;\n                commit('QUERY', { query: 'ReadRoyaltyInfo', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryReadRoyaltyInfo', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getReadRoyaltyInfo']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryReadRoyaltyInfo', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryReadWithPath({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryReadWithPath(key.cid, key.path)).data;\n                commit('QUERY', { query: 'ReadWithPath', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryReadWithPath', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getReadWithPath']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryReadWithPath', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryReadMetadataProof({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryReadMetadataProof(key.cid, key.path)).data;\n                commit('QUERY', { query: 'ReadMetadataProof', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryReadMetadataProof', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getReadMetadataProof']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryReadMetadataProof', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryIdentifyOwner({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryIdentifyOwner(key.address)).data;\n                commit('QUERY', { query: 'IdentifyOwner', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryIdentifyOwner', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getIdentifyOwner']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryIdentifyOwner', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryGetAttributes({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryGetAttributes(key.address)).data;\n                commit('QUERY', { query: 'GetAttributes', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryGetAttributes', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getGetAttributes']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryGetAttributes', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryResource({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryResource(key.cid, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryResource(key.cid, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Resource', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryResource', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getResource']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryResource', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryReadDelegate({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryReadDelegate(key.id)).data;\n                commit('QUERY', { query: 'ReadDelegate', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryReadDelegate', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getReadDelegate']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryReadDelegate', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryOwner({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryOwner(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryOwner({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Owner', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryOwner', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getOwner']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryOwner', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryCollection({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryCollection(key.denom_id, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryCollection(key.denom_id, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Collection', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryCollection', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getCollection']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryCollection', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDenom({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDenom(key.denom_id)).data;\n                commit('QUERY', { query: 'Denom', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenom', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenom']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDenom', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDenoms({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDenoms(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryDenoms({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Denoms', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenoms', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenoms']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDenoms', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryGetNft({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryGetNft(key.denom_id, key.token_id)).data;\n                commit('QUERY', { query: 'GetNft', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryGetNft', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getGetNft']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryGetNft', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryResolveDidWeb({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryResolveDidWeb(key.name)).data;\n                commit('QUERY', { query: 'ResolveDidWeb', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryResolveDidWeb', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getResolveDidWeb']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryResolveDidWeb', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryGetDidKey({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryGetDidKey(key.name)).data;\n                commit('QUERY', { query: 'GetDidKey', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryGetDidKey', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getGetDidKey']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryGetDidKey', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgMintTrustedContent({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMintTrustedContent(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMintTrustedContent:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMintTrustedContent:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgMintTrustedResource({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMintTrustedResource(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMintTrustedResource:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMintTrustedResource:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgIssueDenom({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgIssueDenom(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgIssueDenom:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgIssueDenom:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgRevokeDelegate({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgRevokeDelegate(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgRevokeDelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRevokeDelegate:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgGrantAttribute({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgGrantAttribute(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgGrantAttribute:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgGrantAttribute:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgTransferNFT({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgTransferNFT(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgTransferNFT:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTransferNFT:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgSendMetadataOwnership({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSendMetadataOwnership(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSendMetadataOwnership:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSendMetadataOwnership:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgMetadata({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMetadata(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMetadata:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMetadata:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgUpdateMetadataOwnership({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUpdateMetadataOwnership(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUpdateMetadataOwnership:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdateMetadataOwnership:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgRevokeDid({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgRevokeDid(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgRevokeDid:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRevokeDid:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgGrantDelegate({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgGrantDelegate(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgGrantDelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgGrantDelegate:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgRevokeAttribute({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgRevokeAttribute(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgRevokeAttribute:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRevokeAttribute:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgUpdateDid({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUpdateDid(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUpdateDid:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdateDid:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgMintNFT({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMintNFT(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMintNFT:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMintNFT:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgTransferDenom({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgTransferDenom(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgTransferDenom:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTransferDenom:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgCreateDid({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgCreateDid(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgCreateDid:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateDid:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgRoyaltyInfo({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgRoyaltyInfo(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgRoyaltyInfo:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRoyaltyInfo:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgFile({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgFile(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgFile:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgFile:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgChangeOwner({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChangeOwner(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChangeOwner:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChangeOwner:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgBurnNFT({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgBurnNFT(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgBurnNFT:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgBurnNFT:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgEditNFT({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgEditNFT(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgEditNFT:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgEditNFT:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgMintTrustedContent({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMintTrustedContent(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMintTrustedContent:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMintTrustedContent:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgMintTrustedResource({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMintTrustedResource(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMintTrustedResource:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMintTrustedResource:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgIssueDenom({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgIssueDenom(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgIssueDenom:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgIssueDenom:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgRevokeDelegate({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgRevokeDelegate(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgRevokeDelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRevokeDelegate:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgGrantAttribute({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgGrantAttribute(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgGrantAttribute:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgGrantAttribute:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgTransferNFT({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgTransferNFT(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgTransferNFT:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTransferNFT:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgSendMetadataOwnership({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSendMetadataOwnership(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSendMetadataOwnership:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSendMetadataOwnership:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgMetadata({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMetadata(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMetadata:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMetadata:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgUpdateMetadataOwnership({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUpdateMetadataOwnership(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUpdateMetadataOwnership:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdateMetadataOwnership:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgRevokeDid({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgRevokeDid(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgRevokeDid:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRevokeDid:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgGrantDelegate({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgGrantDelegate(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgGrantDelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgGrantDelegate:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgRevokeAttribute({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgRevokeAttribute(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgRevokeAttribute:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRevokeAttribute:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgUpdateDid({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUpdateDid(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUpdateDid:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdateDid:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgMintNFT({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMintNFT(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMintNFT:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMintNFT:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgTransferDenom({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgTransferDenom(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgTransferDenom:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTransferDenom:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgCreateDid({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgCreateDid(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgCreateDid:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateDid:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgRoyaltyInfo({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgRoyaltyInfo(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgRoyaltyInfo:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRoyaltyInfo:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgFile({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgFile(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgFile:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgFile:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgChangeOwner({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgChangeOwner(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgChangeOwner:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChangeOwner:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgBurnNFT({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgBurnNFT(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgBurnNFT:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgBurnNFT:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgEditNFT({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgEditNFT(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgEditNFT:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgEditNFT:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/authz/v1beta1/authz.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryGrants\n         * @summary Returns list of `Authorization`, granted to the grantee by the granter.\n         * @request GET:/cosmos/authz/v1beta1/grants\n         */\n        this.queryGrants = (query, params = {}) => this.request({\n            path: `/cosmos/authz/v1beta1/grants`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgExec } from \"./types/cosmos/authz/v1beta1/tx\";\nimport { MsgGrant } from \"./types/cosmos/authz/v1beta1/tx\";\nimport { MsgRevoke } from \"./types/cosmos/authz/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.authz.v1beta1.MsgExec\", MsgExec],\n    [\"/cosmos.authz.v1beta1.MsgGrant\", MsgGrant],\n    [\"/cosmos.authz.v1beta1.MsgRevoke\", MsgRevoke],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgExec: (data) => ({ typeUrl: \"/cosmos.authz.v1beta1.MsgExec\", value: data }),\n        msgGrant: (data) => ({ typeUrl: \"/cosmos.authz.v1beta1.MsgGrant\", value: data }),\n        msgRevoke: (data) => ({ typeUrl: \"/cosmos.authz.v1beta1.MsgRevoke\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.authz.v1beta1';\nconst baseEventGrant = { msgTypeUrl: '', granter: '', grantee: '' };\nexport const EventGrant = {\n    encode(message, writer = Writer.create()) {\n        if (message.msgTypeUrl !== '') {\n            writer.uint32(18).string(message.msgTypeUrl);\n        }\n        if (message.granter !== '') {\n            writer.uint32(26).string(message.granter);\n        }\n        if (message.grantee !== '') {\n            writer.uint32(34).string(message.grantee);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEventGrant };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 2:\n                    message.msgTypeUrl = reader.string();\n                    break;\n                case 3:\n                    message.granter = reader.string();\n                    break;\n                case 4:\n                    message.grantee = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEventGrant };\n        if (object.msgTypeUrl !== undefined && object.msgTypeUrl !== null) {\n            message.msgTypeUrl = String(object.msgTypeUrl);\n        }\n        else {\n            message.msgTypeUrl = '';\n        }\n        if (object.granter !== undefined && object.granter !== null) {\n            message.granter = String(object.granter);\n        }\n        else {\n            message.granter = '';\n        }\n        if (object.grantee !== undefined && object.grantee !== null) {\n            message.grantee = String(object.grantee);\n        }\n        else {\n            message.grantee = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.msgTypeUrl !== undefined && (obj.msgTypeUrl = message.msgTypeUrl);\n        message.granter !== undefined && (obj.granter = message.granter);\n        message.grantee !== undefined && (obj.grantee = message.grantee);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEventGrant };\n        if (object.msgTypeUrl !== undefined && object.msgTypeUrl !== null) {\n            message.msgTypeUrl = object.msgTypeUrl;\n        }\n        else {\n            message.msgTypeUrl = '';\n        }\n        if (object.granter !== undefined && object.granter !== null) {\n            message.granter = object.granter;\n        }\n        else {\n            message.granter = '';\n        }\n        if (object.grantee !== undefined && object.grantee !== null) {\n            message.grantee = object.grantee;\n        }\n        else {\n            message.grantee = '';\n        }\n        return message;\n    }\n};\nconst baseEventRevoke = { msgTypeUrl: '', granter: '', grantee: '' };\nexport const EventRevoke = {\n    encode(message, writer = Writer.create()) {\n        if (message.msgTypeUrl !== '') {\n            writer.uint32(18).string(message.msgTypeUrl);\n        }\n        if (message.granter !== '') {\n            writer.uint32(26).string(message.granter);\n        }\n        if (message.grantee !== '') {\n            writer.uint32(34).string(message.grantee);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEventRevoke };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 2:\n                    message.msgTypeUrl = reader.string();\n                    break;\n                case 3:\n                    message.granter = reader.string();\n                    break;\n                case 4:\n                    message.grantee = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEventRevoke };\n        if (object.msgTypeUrl !== undefined && object.msgTypeUrl !== null) {\n            message.msgTypeUrl = String(object.msgTypeUrl);\n        }\n        else {\n            message.msgTypeUrl = '';\n        }\n        if (object.granter !== undefined && object.granter !== null) {\n            message.granter = String(object.granter);\n        }\n        else {\n            message.granter = '';\n        }\n        if (object.grantee !== undefined && object.grantee !== null) {\n            message.grantee = String(object.grantee);\n        }\n        else {\n            message.grantee = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.msgTypeUrl !== undefined && (obj.msgTypeUrl = message.msgTypeUrl);\n        message.granter !== undefined && (obj.granter = message.granter);\n        message.grantee !== undefined && (obj.grantee = message.grantee);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEventRevoke };\n        if (object.msgTypeUrl !== undefined && object.msgTypeUrl !== null) {\n            message.msgTypeUrl = object.msgTypeUrl;\n        }\n        else {\n            message.msgTypeUrl = '';\n        }\n        if (object.granter !== undefined && object.granter !== null) {\n            message.granter = object.granter;\n        }\n        else {\n            message.granter = '';\n        }\n        if (object.grantee !== undefined && object.grantee !== null) {\n            message.grantee = object.grantee;\n        }\n        else {\n            message.grantee = '';\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport { Timestamp } from '../../../google/protobuf/timestamp';\nimport { Any } from '../../../google/protobuf/any';\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.authz.v1beta1';\nconst baseGenesisState = {};\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.authorization) {\n            GrantAuthorization.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.authorization = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.authorization.push(GrantAuthorization.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.authorization = [];\n        if (object.authorization !== undefined && object.authorization !== null) {\n            for (const e of object.authorization) {\n                message.authorization.push(GrantAuthorization.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.authorization) {\n            obj.authorization = message.authorization.map((e) => (e ? GrantAuthorization.toJSON(e) : undefined));\n        }\n        else {\n            obj.authorization = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.authorization = [];\n        if (object.authorization !== undefined && object.authorization !== null) {\n            for (const e of object.authorization) {\n                message.authorization.push(GrantAuthorization.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseGrantAuthorization = { granter: '', grantee: '' };\nexport const GrantAuthorization = {\n    encode(message, writer = Writer.create()) {\n        if (message.granter !== '') {\n            writer.uint32(10).string(message.granter);\n        }\n        if (message.grantee !== '') {\n            writer.uint32(18).string(message.grantee);\n        }\n        if (message.authorization !== undefined) {\n            Any.encode(message.authorization, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.expiration !== undefined) {\n            Timestamp.encode(toTimestamp(message.expiration), writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGrantAuthorization };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.granter = reader.string();\n                    break;\n                case 2:\n                    message.grantee = reader.string();\n                    break;\n                case 3:\n                    message.authorization = Any.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.expiration = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGrantAuthorization };\n        if (object.granter !== undefined && object.granter !== null) {\n            message.granter = String(object.granter);\n        }\n        else {\n            message.granter = '';\n        }\n        if (object.grantee !== undefined && object.grantee !== null) {\n            message.grantee = String(object.grantee);\n        }\n        else {\n            message.grantee = '';\n        }\n        if (object.authorization !== undefined && object.authorization !== null) {\n            message.authorization = Any.fromJSON(object.authorization);\n        }\n        else {\n            message.authorization = undefined;\n        }\n        if (object.expiration !== undefined && object.expiration !== null) {\n            message.expiration = fromJsonTimestamp(object.expiration);\n        }\n        else {\n            message.expiration = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.granter !== undefined && (obj.granter = message.granter);\n        message.grantee !== undefined && (obj.grantee = message.grantee);\n        message.authorization !== undefined && (obj.authorization = message.authorization ? Any.toJSON(message.authorization) : undefined);\n        message.expiration !== undefined && (obj.expiration = message.expiration !== undefined ? message.expiration.toISOString() : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGrantAuthorization };\n        if (object.granter !== undefined && object.granter !== null) {\n            message.granter = object.granter;\n        }\n        else {\n            message.granter = '';\n        }\n        if (object.grantee !== undefined && object.grantee !== null) {\n            message.grantee = object.grantee;\n        }\n        else {\n            message.grantee = '';\n        }\n        if (object.authorization !== undefined && object.authorization !== null) {\n            message.authorization = Any.fromPartial(object.authorization);\n        }\n        else {\n            message.authorization = undefined;\n        }\n        if (object.expiration !== undefined && object.expiration !== null) {\n            message.expiration = object.expiration;\n        }\n        else {\n            message.expiration = undefined;\n        }\n        return message;\n    }\n};\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { GenericAuthorization } from \"./module/types/cosmos/authz/v1beta1/authz\";\nimport { Grant } from \"./module/types/cosmos/authz/v1beta1/authz\";\nimport { EventGrant } from \"./module/types/cosmos/authz/v1beta1/event\";\nimport { EventRevoke } from \"./module/types/cosmos/authz/v1beta1/event\";\nimport { GrantAuthorization } from \"./module/types/cosmos/authz/v1beta1/genesis\";\nexport { GenericAuthorization, Grant, EventGrant, EventRevoke, GrantAuthorization };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Grants: {},\n        _Structure: {\n            GenericAuthorization: getStructure(GenericAuthorization.fromPartial({})),\n            Grant: getStructure(Grant.fromPartial({})),\n            EventGrant: getStructure(EventGrant.fromPartial({})),\n            EventRevoke: getStructure(EventRevoke.fromPartial({})),\n            GrantAuthorization: getStructure(GrantAuthorization.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getGrants: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Grants[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.authz.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryGrants({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryGrants(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryGrants({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Grants', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryGrants', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getGrants']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryGrants', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgExec({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgExec(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgExec:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgExec:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgGrant({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgGrant(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgGrant:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgGrant:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgRevoke({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgRevoke(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgRevoke:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRevoke:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgExec({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgExec(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgExec:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgExec:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgGrant({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgGrant(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgGrant:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgGrant:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgRevoke({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgRevoke(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgRevoke:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRevoke:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/bank/v1beta1/authz.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryAllBalances\n         * @summary AllBalances queries the balance of all coins for a single account.\n         * @request GET:/cosmos/bank/v1beta1/balances/{address}\n         */\n        this.queryAllBalances = (address, query, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/balances/${address}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryBalance\n         * @summary Balance queries the balance of a single coin for a single account.\n         * @request GET:/cosmos/bank/v1beta1/balances/{address}/{denom}\n         */\n        this.queryBalance = (address, denom, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/balances/${address}/${denom}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenomsMetadata\n         * @summary DenomsMetadata queries the client metadata for all registered coin denominations.\n         * @request GET:/cosmos/bank/v1beta1/denoms_metadata\n         */\n        this.queryDenomsMetadata = (query, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/denoms_metadata`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenomMetadata\n         * @summary DenomsMetadata queries the client metadata of a given coin denomination.\n         * @request GET:/cosmos/bank/v1beta1/denoms_metadata/{denom}\n         */\n        this.queryDenomMetadata = (denom, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/denoms_metadata/${denom}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries the parameters of x/bank module.\n         * @request GET:/cosmos/bank/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryTotalSupply\n         * @summary TotalSupply queries the total supply of all coins.\n         * @request GET:/cosmos/bank/v1beta1/supply\n         */\n        this.queryTotalSupply = (query, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/supply`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QuerySupplyOf\n         * @summary SupplyOf queries the supply of a single coin.\n         * @request GET:/cosmos/bank/v1beta1/supply/{denom}\n         */\n        this.querySupplyOf = (denom, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/supply/${denom}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.base.v1beta1';\nconst baseCoin = { denom: '', amount: '' };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseDecCoin = { denom: '', amount: '' };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseIntProto = { int: '' };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== '') {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    }\n};\nconst baseDecProto = { dec: '' };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== '') {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.bank.v1beta1';\nconst baseParams = { defaultSendEnabled: false };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.sendEnabled) {\n            SendEnabled.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.defaultSendEnabled === true) {\n            writer.uint32(16).bool(message.defaultSendEnabled);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.sendEnabled = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sendEnabled.push(SendEnabled.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.defaultSendEnabled = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.sendEnabled = [];\n        if (object.sendEnabled !== undefined && object.sendEnabled !== null) {\n            for (const e of object.sendEnabled) {\n                message.sendEnabled.push(SendEnabled.fromJSON(e));\n            }\n        }\n        if (object.defaultSendEnabled !== undefined && object.defaultSendEnabled !== null) {\n            message.defaultSendEnabled = Boolean(object.defaultSendEnabled);\n        }\n        else {\n            message.defaultSendEnabled = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.sendEnabled) {\n            obj.sendEnabled = message.sendEnabled.map((e) => (e ? SendEnabled.toJSON(e) : undefined));\n        }\n        else {\n            obj.sendEnabled = [];\n        }\n        message.defaultSendEnabled !== undefined && (obj.defaultSendEnabled = message.defaultSendEnabled);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.sendEnabled = [];\n        if (object.sendEnabled !== undefined && object.sendEnabled !== null) {\n            for (const e of object.sendEnabled) {\n                message.sendEnabled.push(SendEnabled.fromPartial(e));\n            }\n        }\n        if (object.defaultSendEnabled !== undefined && object.defaultSendEnabled !== null) {\n            message.defaultSendEnabled = object.defaultSendEnabled;\n        }\n        else {\n            message.defaultSendEnabled = false;\n        }\n        return message;\n    }\n};\nconst baseSendEnabled = { denom: '', enabled: false };\nexport const SendEnabled = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.enabled === true) {\n            writer.uint32(16).bool(message.enabled);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSendEnabled };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.enabled = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSendEnabled };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.enabled !== undefined && object.enabled !== null) {\n            message.enabled = Boolean(object.enabled);\n        }\n        else {\n            message.enabled = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.enabled !== undefined && (obj.enabled = message.enabled);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSendEnabled };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.enabled !== undefined && object.enabled !== null) {\n            message.enabled = object.enabled;\n        }\n        else {\n            message.enabled = false;\n        }\n        return message;\n    }\n};\nconst baseInput = { address: '' };\nexport const Input = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.coins) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseInput };\n        message.coins = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.coins.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseInput };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.coins) {\n            obj.coins = message.coins.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.coins = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseInput };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseOutput = { address: '' };\nexport const Output = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.coins) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseOutput };\n        message.coins = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.coins.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseOutput };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.coins) {\n            obj.coins = message.coins.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.coins = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseOutput };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseSupply = {};\nexport const Supply = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.total) {\n            Coin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSupply };\n        message.total = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSupply };\n        message.total = [];\n        if (object.total !== undefined && object.total !== null) {\n            for (const e of object.total) {\n                message.total.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.total) {\n            obj.total = message.total.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.total = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSupply };\n        message.total = [];\n        if (object.total !== undefined && object.total !== null) {\n            for (const e of object.total) {\n                message.total.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseDenomUnit = { denom: '', exponent: 0, aliases: '' };\nexport const DenomUnit = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.exponent !== 0) {\n            writer.uint32(16).uint32(message.exponent);\n        }\n        for (const v of message.aliases) {\n            writer.uint32(26).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDenomUnit };\n        message.aliases = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.exponent = reader.uint32();\n                    break;\n                case 3:\n                    message.aliases.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDenomUnit };\n        message.aliases = [];\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.exponent !== undefined && object.exponent !== null) {\n            message.exponent = Number(object.exponent);\n        }\n        else {\n            message.exponent = 0;\n        }\n        if (object.aliases !== undefined && object.aliases !== null) {\n            for (const e of object.aliases) {\n                message.aliases.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.exponent !== undefined && (obj.exponent = message.exponent);\n        if (message.aliases) {\n            obj.aliases = message.aliases.map((e) => e);\n        }\n        else {\n            obj.aliases = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDenomUnit };\n        message.aliases = [];\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.exponent !== undefined && object.exponent !== null) {\n            message.exponent = object.exponent;\n        }\n        else {\n            message.exponent = 0;\n        }\n        if (object.aliases !== undefined && object.aliases !== null) {\n            for (const e of object.aliases) {\n                message.aliases.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseMetadata = { description: '', base: '', display: '', name: '', symbol: '' };\nexport const Metadata = {\n    encode(message, writer = Writer.create()) {\n        if (message.description !== '') {\n            writer.uint32(10).string(message.description);\n        }\n        for (const v of message.denomUnits) {\n            DenomUnit.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.base !== '') {\n            writer.uint32(26).string(message.base);\n        }\n        if (message.display !== '') {\n            writer.uint32(34).string(message.display);\n        }\n        if (message.name !== '') {\n            writer.uint32(42).string(message.name);\n        }\n        if (message.symbol !== '') {\n            writer.uint32(50).string(message.symbol);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMetadata };\n        message.denomUnits = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.description = reader.string();\n                    break;\n                case 2:\n                    message.denomUnits.push(DenomUnit.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.base = reader.string();\n                    break;\n                case 4:\n                    message.display = reader.string();\n                    break;\n                case 5:\n                    message.name = reader.string();\n                    break;\n                case 6:\n                    message.symbol = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMetadata };\n        message.denomUnits = [];\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.denomUnits !== undefined && object.denomUnits !== null) {\n            for (const e of object.denomUnits) {\n                message.denomUnits.push(DenomUnit.fromJSON(e));\n            }\n        }\n        if (object.base !== undefined && object.base !== null) {\n            message.base = String(object.base);\n        }\n        else {\n            message.base = '';\n        }\n        if (object.display !== undefined && object.display !== null) {\n            message.display = String(object.display);\n        }\n        else {\n            message.display = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.symbol !== undefined && object.symbol !== null) {\n            message.symbol = String(object.symbol);\n        }\n        else {\n            message.symbol = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.description !== undefined && (obj.description = message.description);\n        if (message.denomUnits) {\n            obj.denomUnits = message.denomUnits.map((e) => (e ? DenomUnit.toJSON(e) : undefined));\n        }\n        else {\n            obj.denomUnits = [];\n        }\n        message.base !== undefined && (obj.base = message.base);\n        message.display !== undefined && (obj.display = message.display);\n        message.name !== undefined && (obj.name = message.name);\n        message.symbol !== undefined && (obj.symbol = message.symbol);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMetadata };\n        message.denomUnits = [];\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.denomUnits !== undefined && object.denomUnits !== null) {\n            for (const e of object.denomUnits) {\n                message.denomUnits.push(DenomUnit.fromPartial(e));\n            }\n        }\n        if (object.base !== undefined && object.base !== null) {\n            message.base = object.base;\n        }\n        else {\n            message.base = '';\n        }\n        if (object.display !== undefined && object.display !== null) {\n            message.display = object.display;\n        }\n        else {\n            message.display = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.symbol !== undefined && object.symbol !== null) {\n            message.symbol = object.symbol;\n        }\n        else {\n            message.symbol = '';\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport { Reader, Writer } from 'protobufjs/minimal';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nimport { Input, Output } from '../../../cosmos/bank/v1beta1/bank';\nexport const protobufPackage = 'cosmos.bank.v1beta1';\nconst baseMsgSend = { fromAddress: '', toAddress: '' };\nexport const MsgSend = {\n    encode(message, writer = Writer.create()) {\n        if (message.fromAddress !== '') {\n            writer.uint32(10).string(message.fromAddress);\n        }\n        if (message.toAddress !== '') {\n            writer.uint32(18).string(message.toAddress);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSend };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.fromAddress = reader.string();\n                    break;\n                case 2:\n                    message.toAddress = reader.string();\n                    break;\n                case 3:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSend };\n        message.amount = [];\n        if (object.fromAddress !== undefined && object.fromAddress !== null) {\n            message.fromAddress = String(object.fromAddress);\n        }\n        else {\n            message.fromAddress = '';\n        }\n        if (object.toAddress !== undefined && object.toAddress !== null) {\n            message.toAddress = String(object.toAddress);\n        }\n        else {\n            message.toAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.fromAddress !== undefined && (obj.fromAddress = message.fromAddress);\n        message.toAddress !== undefined && (obj.toAddress = message.toAddress);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSend };\n        message.amount = [];\n        if (object.fromAddress !== undefined && object.fromAddress !== null) {\n            message.fromAddress = object.fromAddress;\n        }\n        else {\n            message.fromAddress = '';\n        }\n        if (object.toAddress !== undefined && object.toAddress !== null) {\n            message.toAddress = object.toAddress;\n        }\n        else {\n            message.toAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseMsgSendResponse = {};\nexport const MsgSendResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSendResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgSendResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgSendResponse };\n        return message;\n    }\n};\nconst baseMsgMultiSend = {};\nexport const MsgMultiSend = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.inputs) {\n            Input.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.outputs) {\n            Output.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMultiSend };\n        message.inputs = [];\n        message.outputs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.inputs.push(Input.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.outputs.push(Output.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMultiSend };\n        message.inputs = [];\n        message.outputs = [];\n        if (object.inputs !== undefined && object.inputs !== null) {\n            for (const e of object.inputs) {\n                message.inputs.push(Input.fromJSON(e));\n            }\n        }\n        if (object.outputs !== undefined && object.outputs !== null) {\n            for (const e of object.outputs) {\n                message.outputs.push(Output.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.inputs) {\n            obj.inputs = message.inputs.map((e) => (e ? Input.toJSON(e) : undefined));\n        }\n        else {\n            obj.inputs = [];\n        }\n        if (message.outputs) {\n            obj.outputs = message.outputs.map((e) => (e ? Output.toJSON(e) : undefined));\n        }\n        else {\n            obj.outputs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMultiSend };\n        message.inputs = [];\n        message.outputs = [];\n        if (object.inputs !== undefined && object.inputs !== null) {\n            for (const e of object.inputs) {\n                message.inputs.push(Input.fromPartial(e));\n            }\n        }\n        if (object.outputs !== undefined && object.outputs !== null) {\n            for (const e of object.outputs) {\n                message.outputs.push(Output.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseMsgMultiSendResponse = {};\nexport const MsgMultiSendResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMultiSendResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgMultiSendResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgMultiSendResponse };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    Send(request) {\n        const data = MsgSend.encode(request).finish();\n        const promise = this.rpc.request('cosmos.bank.v1beta1.Msg', 'Send', data);\n        return promise.then((data) => MsgSendResponse.decode(new Reader(data)));\n    }\n    MultiSend(request) {\n        const data = MsgMultiSend.encode(request).finish();\n        const promise = this.rpc.request('cosmos.bank.v1beta1.Msg', 'MultiSend', data);\n        return promise.then((data) => MsgMultiSendResponse.decode(new Reader(data)));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgSend } from \"./types/cosmos/bank/v1beta1/tx\";\nimport { MsgMultiSend } from \"./types/cosmos/bank/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.bank.v1beta1.MsgSend\", MsgSend],\n    [\"/cosmos.bank.v1beta1.MsgMultiSend\", MsgMultiSend],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgSend: (data) => ({ typeUrl: \"/cosmos.bank.v1beta1.MsgSend\", value: data }),\n        msgMultiSend: (data) => ({ typeUrl: \"/cosmos.bank.v1beta1.MsgMultiSend\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","/* eslint-disable */\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.bank.v1beta1';\nconst baseSendAuthorization = {};\nexport const SendAuthorization = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.spendLimit) {\n            Coin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSendAuthorization };\n        message.spendLimit = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.spendLimit.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSendAuthorization };\n        message.spendLimit = [];\n        if (object.spendLimit !== undefined && object.spendLimit !== null) {\n            for (const e of object.spendLimit) {\n                message.spendLimit.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.spendLimit) {\n            obj.spendLimit = message.spendLimit.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.spendLimit = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSendAuthorization };\n        message.spendLimit = [];\n        if (object.spendLimit !== undefined && object.spendLimit !== null) {\n            for (const e of object.spendLimit) {\n                message.spendLimit.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport { Params, Metadata } from '../../../cosmos/bank/v1beta1/bank';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.bank.v1beta1';\nconst baseGenesisState = {};\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.balances) {\n            Balance.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.supply) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.denomMetadata) {\n            Metadata.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.balances = [];\n        message.supply = [];\n        message.denomMetadata = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.balances.push(Balance.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.supply.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.denomMetadata.push(Metadata.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.balances = [];\n        message.supply = [];\n        message.denomMetadata = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.balances !== undefined && object.balances !== null) {\n            for (const e of object.balances) {\n                message.balances.push(Balance.fromJSON(e));\n            }\n        }\n        if (object.supply !== undefined && object.supply !== null) {\n            for (const e of object.supply) {\n                message.supply.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.denomMetadata !== undefined && object.denomMetadata !== null) {\n            for (const e of object.denomMetadata) {\n                message.denomMetadata.push(Metadata.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.params !== undefined && (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        if (message.balances) {\n            obj.balances = message.balances.map((e) => (e ? Balance.toJSON(e) : undefined));\n        }\n        else {\n            obj.balances = [];\n        }\n        if (message.supply) {\n            obj.supply = message.supply.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.supply = [];\n        }\n        if (message.denomMetadata) {\n            obj.denomMetadata = message.denomMetadata.map((e) => (e ? Metadata.toJSON(e) : undefined));\n        }\n        else {\n            obj.denomMetadata = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.balances = [];\n        message.supply = [];\n        message.denomMetadata = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.balances !== undefined && object.balances !== null) {\n            for (const e of object.balances) {\n                message.balances.push(Balance.fromPartial(e));\n            }\n        }\n        if (object.supply !== undefined && object.supply !== null) {\n            for (const e of object.supply) {\n                message.supply.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.denomMetadata !== undefined && object.denomMetadata !== null) {\n            for (const e of object.denomMetadata) {\n                message.denomMetadata.push(Metadata.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseBalance = { address: '' };\nexport const Balance = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.coins) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBalance };\n        message.coins = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.coins.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBalance };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.coins) {\n            obj.coins = message.coins.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.coins = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBalance };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { SendAuthorization } from \"./module/types/cosmos/bank/v1beta1/authz\";\nimport { Params } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { SendEnabled } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Input } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Output } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Supply } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { DenomUnit } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Metadata } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Balance } from \"./module/types/cosmos/bank/v1beta1/genesis\";\nexport { SendAuthorization, Params, SendEnabled, Input, Output, Supply, DenomUnit, Metadata, Balance };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Balance: {},\n        AllBalances: {},\n        TotalSupply: {},\n        SupplyOf: {},\n        Params: {},\n        DenomMetadata: {},\n        DenomsMetadata: {},\n        _Structure: {\n            SendAuthorization: getStructure(SendAuthorization.fromPartial({})),\n            Params: getStructure(Params.fromPartial({})),\n            SendEnabled: getStructure(SendEnabled.fromPartial({})),\n            Input: getStructure(Input.fromPartial({})),\n            Output: getStructure(Output.fromPartial({})),\n            Supply: getStructure(Supply.fromPartial({})),\n            DenomUnit: getStructure(DenomUnit.fromPartial({})),\n            Metadata: getStructure(Metadata.fromPartial({})),\n            Balance: getStructure(Balance.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getBalance: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Balance[JSON.stringify(params)] ?? {};\n        },\n        getAllBalances: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.AllBalances[JSON.stringify(params)] ?? {};\n        },\n        getTotalSupply: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.TotalSupply[JSON.stringify(params)] ?? {};\n        },\n        getSupplyOf: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.SupplyOf[JSON.stringify(params)] ?? {};\n        },\n        getParams: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getDenomMetadata: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DenomMetadata[JSON.stringify(params)] ?? {};\n        },\n        getDenomsMetadata: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DenomsMetadata[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.bank.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryBalance({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryBalance(key.address, key.denom)).data;\n                commit('QUERY', { query: 'Balance', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryBalance', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getBalance']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryBalance', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryAllBalances({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryAllBalances(key.address, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryAllBalances(key.address, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'AllBalances', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryAllBalances', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getAllBalances']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryAllBalances', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryTotalSupply({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryTotalSupply(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryTotalSupply({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'TotalSupply', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryTotalSupply', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getTotalSupply']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryTotalSupply', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QuerySupplyOf({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.querySupplyOf(key.denom)).data;\n                commit('QUERY', { query: 'SupplyOf', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QuerySupplyOf', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getSupplyOf']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QuerySupplyOf', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDenomMetadata({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDenomMetadata(key.denom)).data;\n                commit('QUERY', { query: 'DenomMetadata', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenomMetadata', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenomMetadata']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDenomMetadata', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDenomsMetadata({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDenomsMetadata(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryDenomsMetadata({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'DenomsMetadata', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenomsMetadata', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenomsMetadata']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDenomsMetadata', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgSend({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSend(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSend:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSend:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgMultiSend({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMultiSend(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMultiSend:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMultiSend:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgSend({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSend(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSend:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSend:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgMultiSend({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgMultiSend(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgMultiSend:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMultiSend:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/crisis/v1beta1/genesis.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n}\n","/* eslint-disable */\nimport { Reader, Writer } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.crisis.v1beta1';\nconst baseMsgVerifyInvariant = { sender: '', invariantModuleName: '', invariantRoute: '' };\nexport const MsgVerifyInvariant = {\n    encode(message, writer = Writer.create()) {\n        if (message.sender !== '') {\n            writer.uint32(10).string(message.sender);\n        }\n        if (message.invariantModuleName !== '') {\n            writer.uint32(18).string(message.invariantModuleName);\n        }\n        if (message.invariantRoute !== '') {\n            writer.uint32(26).string(message.invariantRoute);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgVerifyInvariant };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sender = reader.string();\n                    break;\n                case 2:\n                    message.invariantModuleName = reader.string();\n                    break;\n                case 3:\n                    message.invariantRoute = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgVerifyInvariant };\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.invariantModuleName !== undefined && object.invariantModuleName !== null) {\n            message.invariantModuleName = String(object.invariantModuleName);\n        }\n        else {\n            message.invariantModuleName = '';\n        }\n        if (object.invariantRoute !== undefined && object.invariantRoute !== null) {\n            message.invariantRoute = String(object.invariantRoute);\n        }\n        else {\n            message.invariantRoute = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.invariantModuleName !== undefined && (obj.invariantModuleName = message.invariantModuleName);\n        message.invariantRoute !== undefined && (obj.invariantRoute = message.invariantRoute);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgVerifyInvariant };\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.invariantModuleName !== undefined && object.invariantModuleName !== null) {\n            message.invariantModuleName = object.invariantModuleName;\n        }\n        else {\n            message.invariantModuleName = '';\n        }\n        if (object.invariantRoute !== undefined && object.invariantRoute !== null) {\n            message.invariantRoute = object.invariantRoute;\n        }\n        else {\n            message.invariantRoute = '';\n        }\n        return message;\n    }\n};\nconst baseMsgVerifyInvariantResponse = {};\nexport const MsgVerifyInvariantResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgVerifyInvariantResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgVerifyInvariantResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgVerifyInvariantResponse };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    VerifyInvariant(request) {\n        const data = MsgVerifyInvariant.encode(request).finish();\n        const promise = this.rpc.request('cosmos.crisis.v1beta1.Msg', 'VerifyInvariant', data);\n        return promise.then((data) => MsgVerifyInvariantResponse.decode(new Reader(data)));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgVerifyInvariant } from \"./types/cosmos/crisis/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.crisis.v1beta1.MsgVerifyInvariant\", MsgVerifyInvariant],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgVerifyInvariant: (data) => ({ typeUrl: \"/cosmos.crisis.v1beta1.MsgVerifyInvariant\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        _Structure: {},\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.crisis.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async sendMsgVerifyInvariant({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgVerifyInvariant(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgVerifyInvariant:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgVerifyInvariant:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgVerifyInvariant({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgVerifyInvariant(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgVerifyInvariant:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgVerifyInvariant:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/distribution/v1beta1/distribution.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryCommunityPool\n         * @summary CommunityPool queries the community pool coins.\n         * @request GET:/cosmos/distribution/v1beta1/community_pool\n         */\n        this.queryCommunityPool = (params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/community_pool`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryDelegationTotalRewards\n       * @summary DelegationTotalRewards queries the total rewards accrued by a each\n      validator.\n       * @request GET:/cosmos/distribution/v1beta1/delegators/{delegatorAddress}/rewards\n       */\n        this.queryDelegationTotalRewards = (delegatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/delegators/${delegatorAddress}/rewards`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegationRewards\n         * @summary DelegationRewards queries the total rewards accrued by a delegation.\n         * @request GET:/cosmos/distribution/v1beta1/delegators/{delegatorAddress}/rewards/{validatorAddress}\n         */\n        this.queryDelegationRewards = (delegatorAddress, validatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/delegators/${delegatorAddress}/rewards/${validatorAddress}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegatorValidators\n         * @summary DelegatorValidators queries the validators of a delegator.\n         * @request GET:/cosmos/distribution/v1beta1/delegators/{delegatorAddress}/validators\n         */\n        this.queryDelegatorValidators = (delegatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/delegators/${delegatorAddress}/validators`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegatorWithdrawAddress\n         * @summary DelegatorWithdrawAddress queries withdraw address of a delegator.\n         * @request GET:/cosmos/distribution/v1beta1/delegators/{delegatorAddress}/withdraw_address\n         */\n        this.queryDelegatorWithdrawAddress = (delegatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/delegators/${delegatorAddress}/withdraw_address`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries params of the distribution module.\n         * @request GET:/cosmos/distribution/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorCommission\n         * @summary ValidatorCommission queries accumulated commission for a validator.\n         * @request GET:/cosmos/distribution/v1beta1/validators/{validatorAddress}/commission\n         */\n        this.queryValidatorCommission = (validatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/validators/${validatorAddress}/commission`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorOutstandingRewards\n         * @summary ValidatorOutstandingRewards queries rewards of a validator address.\n         * @request GET:/cosmos/distribution/v1beta1/validators/{validatorAddress}/outstanding_rewards\n         */\n        this.queryValidatorOutstandingRewards = (validatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/validators/${validatorAddress}/outstanding_rewards`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorSlashes\n         * @summary ValidatorSlashes queries slash events of a validator.\n         * @request GET:/cosmos/distribution/v1beta1/validators/{validatorAddress}/slashes\n         */\n        this.queryValidatorSlashes = (validatorAddress, query, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/validators/${validatorAddress}/slashes`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","/* eslint-disable */\nimport { Reader, Writer } from 'protobufjs/minimal';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nexport const protobufPackage = 'cosmos.distribution.v1beta1';\nconst baseMsgSetWithdrawAddress = { delegatorAddress: '', withdrawAddress: '' };\nexport const MsgSetWithdrawAddress = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.withdrawAddress !== '') {\n            writer.uint32(18).string(message.withdrawAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSetWithdrawAddress };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.withdrawAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSetWithdrawAddress };\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.withdrawAddress !== undefined && object.withdrawAddress !== null) {\n            message.withdrawAddress = String(object.withdrawAddress);\n        }\n        else {\n            message.withdrawAddress = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined && (obj.delegatorAddress = message.delegatorAddress);\n        message.withdrawAddress !== undefined && (obj.withdrawAddress = message.withdrawAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSetWithdrawAddress };\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.withdrawAddress !== undefined && object.withdrawAddress !== null) {\n            message.withdrawAddress = object.withdrawAddress;\n        }\n        else {\n            message.withdrawAddress = '';\n        }\n        return message;\n    }\n};\nconst baseMsgSetWithdrawAddressResponse = {};\nexport const MsgSetWithdrawAddressResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSetWithdrawAddressResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgSetWithdrawAddressResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgSetWithdrawAddressResponse };\n        return message;\n    }\n};\nconst baseMsgWithdrawDelegatorReward = { delegatorAddress: '', validatorAddress: '' };\nexport const MsgWithdrawDelegatorReward = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgWithdrawDelegatorReward };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgWithdrawDelegatorReward };\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined && (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgWithdrawDelegatorReward };\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        return message;\n    }\n};\nconst baseMsgWithdrawDelegatorRewardResponse = {};\nexport const MsgWithdrawDelegatorRewardResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgWithdrawDelegatorRewardResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgWithdrawDelegatorRewardResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgWithdrawDelegatorRewardResponse };\n        return message;\n    }\n};\nconst baseMsgWithdrawValidatorCommission = { validatorAddress: '' };\nexport const MsgWithdrawValidatorCommission = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== '') {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgWithdrawValidatorCommission };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgWithdrawValidatorCommission };\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgWithdrawValidatorCommission };\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        return message;\n    }\n};\nconst baseMsgWithdrawValidatorCommissionResponse = {};\nexport const MsgWithdrawValidatorCommissionResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgWithdrawValidatorCommissionResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgWithdrawValidatorCommissionResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgWithdrawValidatorCommissionResponse };\n        return message;\n    }\n};\nconst baseMsgFundCommunityPool = { depositor: '' };\nexport const MsgFundCommunityPool = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.depositor !== '') {\n            writer.uint32(18).string(message.depositor);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgFundCommunityPool };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.depositor = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgFundCommunityPool };\n        message.amount = [];\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = String(object.depositor);\n        }\n        else {\n            message.depositor = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        message.depositor !== undefined && (obj.depositor = message.depositor);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgFundCommunityPool };\n        message.amount = [];\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = object.depositor;\n        }\n        else {\n            message.depositor = '';\n        }\n        return message;\n    }\n};\nconst baseMsgFundCommunityPoolResponse = {};\nexport const MsgFundCommunityPoolResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgFundCommunityPoolResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgFundCommunityPoolResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgFundCommunityPoolResponse };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    SetWithdrawAddress(request) {\n        const data = MsgSetWithdrawAddress.encode(request).finish();\n        const promise = this.rpc.request('cosmos.distribution.v1beta1.Msg', 'SetWithdrawAddress', data);\n        return promise.then((data) => MsgSetWithdrawAddressResponse.decode(new Reader(data)));\n    }\n    WithdrawDelegatorReward(request) {\n        const data = MsgWithdrawDelegatorReward.encode(request).finish();\n        const promise = this.rpc.request('cosmos.distribution.v1beta1.Msg', 'WithdrawDelegatorReward', data);\n        return promise.then((data) => MsgWithdrawDelegatorRewardResponse.decode(new Reader(data)));\n    }\n    WithdrawValidatorCommission(request) {\n        const data = MsgWithdrawValidatorCommission.encode(request).finish();\n        const promise = this.rpc.request('cosmos.distribution.v1beta1.Msg', 'WithdrawValidatorCommission', data);\n        return promise.then((data) => MsgWithdrawValidatorCommissionResponse.decode(new Reader(data)));\n    }\n    FundCommunityPool(request) {\n        const data = MsgFundCommunityPool.encode(request).finish();\n        const promise = this.rpc.request('cosmos.distribution.v1beta1.Msg', 'FundCommunityPool', data);\n        return promise.then((data) => MsgFundCommunityPoolResponse.decode(new Reader(data)));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgWithdrawDelegatorReward } from \"./types/cosmos/distribution/v1beta1/tx\";\nimport { MsgFundCommunityPool } from \"./types/cosmos/distribution/v1beta1/tx\";\nimport { MsgSetWithdrawAddress } from \"./types/cosmos/distribution/v1beta1/tx\";\nimport { MsgWithdrawValidatorCommission } from \"./types/cosmos/distribution/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward\", MsgWithdrawDelegatorReward],\n    [\"/cosmos.distribution.v1beta1.MsgFundCommunityPool\", MsgFundCommunityPool],\n    [\"/cosmos.distribution.v1beta1.MsgSetWithdrawAddress\", MsgSetWithdrawAddress],\n    [\"/cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission\", MsgWithdrawValidatorCommission],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgWithdrawDelegatorReward: (data) => ({ typeUrl: \"/cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward\", value: data }),\n        msgFundCommunityPool: (data) => ({ typeUrl: \"/cosmos.distribution.v1beta1.MsgFundCommunityPool\", value: data }),\n        msgSetWithdrawAddress: (data) => ({ typeUrl: \"/cosmos.distribution.v1beta1.MsgSetWithdrawAddress\", value: data }),\n        msgWithdrawValidatorCommission: (data) => ({ typeUrl: \"/cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { Params } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorHistoricalRewards } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorCurrentRewards } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorAccumulatedCommission } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorOutstandingRewards } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorSlashEvent } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorSlashEvents } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { FeePool } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { CommunityPoolSpendProposal } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { DelegatorStartingInfo } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { DelegationDelegatorReward } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { CommunityPoolSpendProposalWithDeposit } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { DelegatorWithdrawInfo } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorOutstandingRewardsRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorAccumulatedCommissionRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorHistoricalRewardsRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorCurrentRewardsRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { DelegatorStartingInfoRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorSlashEventRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nexport { Params, ValidatorHistoricalRewards, ValidatorCurrentRewards, ValidatorAccumulatedCommission, ValidatorOutstandingRewards, ValidatorSlashEvent, ValidatorSlashEvents, FeePool, CommunityPoolSpendProposal, DelegatorStartingInfo, DelegationDelegatorReward, CommunityPoolSpendProposalWithDeposit, DelegatorWithdrawInfo, ValidatorOutstandingRewardsRecord, ValidatorAccumulatedCommissionRecord, ValidatorHistoricalRewardsRecord, ValidatorCurrentRewardsRecord, DelegatorStartingInfoRecord, ValidatorSlashEventRecord };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Params: {},\n        ValidatorOutstandingRewards: {},\n        ValidatorCommission: {},\n        ValidatorSlashes: {},\n        DelegationRewards: {},\n        DelegationTotalRewards: {},\n        DelegatorValidators: {},\n        DelegatorWithdrawAddress: {},\n        CommunityPool: {},\n        _Structure: {\n            Params: getStructure(Params.fromPartial({})),\n            ValidatorHistoricalRewards: getStructure(ValidatorHistoricalRewards.fromPartial({})),\n            ValidatorCurrentRewards: getStructure(ValidatorCurrentRewards.fromPartial({})),\n            ValidatorAccumulatedCommission: getStructure(ValidatorAccumulatedCommission.fromPartial({})),\n            ValidatorOutstandingRewards: getStructure(ValidatorOutstandingRewards.fromPartial({})),\n            ValidatorSlashEvent: getStructure(ValidatorSlashEvent.fromPartial({})),\n            ValidatorSlashEvents: getStructure(ValidatorSlashEvents.fromPartial({})),\n            FeePool: getStructure(FeePool.fromPartial({})),\n            CommunityPoolSpendProposal: getStructure(CommunityPoolSpendProposal.fromPartial({})),\n            DelegatorStartingInfo: getStructure(DelegatorStartingInfo.fromPartial({})),\n            DelegationDelegatorReward: getStructure(DelegationDelegatorReward.fromPartial({})),\n            CommunityPoolSpendProposalWithDeposit: getStructure(CommunityPoolSpendProposalWithDeposit.fromPartial({})),\n            DelegatorWithdrawInfo: getStructure(DelegatorWithdrawInfo.fromPartial({})),\n            ValidatorOutstandingRewardsRecord: getStructure(ValidatorOutstandingRewardsRecord.fromPartial({})),\n            ValidatorAccumulatedCommissionRecord: getStructure(ValidatorAccumulatedCommissionRecord.fromPartial({})),\n            ValidatorHistoricalRewardsRecord: getStructure(ValidatorHistoricalRewardsRecord.fromPartial({})),\n            ValidatorCurrentRewardsRecord: getStructure(ValidatorCurrentRewardsRecord.fromPartial({})),\n            DelegatorStartingInfoRecord: getStructure(DelegatorStartingInfoRecord.fromPartial({})),\n            ValidatorSlashEventRecord: getStructure(ValidatorSlashEventRecord.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getParams: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getValidatorOutstandingRewards: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorOutstandingRewards[JSON.stringify(params)] ?? {};\n        },\n        getValidatorCommission: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorCommission[JSON.stringify(params)] ?? {};\n        },\n        getValidatorSlashes: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorSlashes[JSON.stringify(params)] ?? {};\n        },\n        getDelegationRewards: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegationRewards[JSON.stringify(params)] ?? {};\n        },\n        getDelegationTotalRewards: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegationTotalRewards[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorValidators: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorValidators[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorWithdrawAddress: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorWithdrawAddress[JSON.stringify(params)] ?? {};\n        },\n        getCommunityPool: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.CommunityPool[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.distribution.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryValidatorOutstandingRewards({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryValidatorOutstandingRewards(key.validator_address)).data;\n                commit('QUERY', { query: 'ValidatorOutstandingRewards', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorOutstandingRewards', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorOutstandingRewards']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryValidatorOutstandingRewards', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryValidatorCommission({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryValidatorCommission(key.validator_address)).data;\n                commit('QUERY', { query: 'ValidatorCommission', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorCommission', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorCommission']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryValidatorCommission', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryValidatorSlashes({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryValidatorSlashes(key.validator_address, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryValidatorSlashes(key.validator_address, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'ValidatorSlashes', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorSlashes', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorSlashes']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryValidatorSlashes', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegationRewards({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegationRewards(key.delegator_address, key.validator_address)).data;\n                commit('QUERY', { query: 'DelegationRewards', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegationRewards', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegationRewards']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegationRewards', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegationTotalRewards({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegationTotalRewards(key.delegator_address)).data;\n                commit('QUERY', { query: 'DelegationTotalRewards', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegationTotalRewards', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegationTotalRewards']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegationTotalRewards', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegatorValidators({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegatorValidators(key.delegator_address)).data;\n                commit('QUERY', { query: 'DelegatorValidators', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorValidators', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorValidators']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegatorValidators', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegatorWithdrawAddress({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegatorWithdrawAddress(key.delegator_address)).data;\n                commit('QUERY', { query: 'DelegatorWithdrawAddress', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorWithdrawAddress', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorWithdrawAddress']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegatorWithdrawAddress', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryCommunityPool({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryCommunityPool()).data;\n                commit('QUERY', { query: 'CommunityPool', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryCommunityPool', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getCommunityPool']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryCommunityPool', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgWithdrawDelegatorReward({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgWithdrawDelegatorReward(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgWithdrawDelegatorReward:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgWithdrawDelegatorReward:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgFundCommunityPool({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgFundCommunityPool(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgFundCommunityPool:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgFundCommunityPool:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgSetWithdrawAddress({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSetWithdrawAddress(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSetWithdrawAddress:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSetWithdrawAddress:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgWithdrawValidatorCommission({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgWithdrawValidatorCommission(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgWithdrawValidatorCommission:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgWithdrawValidatorCommission:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgWithdrawDelegatorReward({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgWithdrawDelegatorReward(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgWithdrawDelegatorReward:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgWithdrawDelegatorReward:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgFundCommunityPool({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgFundCommunityPool(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgFundCommunityPool:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgFundCommunityPool:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgSetWithdrawAddress({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSetWithdrawAddress(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSetWithdrawAddress:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSetWithdrawAddress:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgWithdrawValidatorCommission({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgWithdrawValidatorCommission(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgWithdrawValidatorCommission:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgWithdrawValidatorCommission:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/evidence/v1beta1/evidence.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryAllEvidence\n         * @summary AllEvidence queries all evidence.\n         * @request GET:/cosmos/evidence/v1beta1/evidence\n         */\n        this.queryAllEvidence = (query, params = {}) => this.request({\n            path: `/cosmos/evidence/v1beta1/evidence`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryEvidence\n         * @summary Evidence queries evidence based on evidence hash.\n         * @request GET:/cosmos/evidence/v1beta1/evidence/{evidenceHash}\n         */\n        this.queryEvidence = (evidenceHash, params = {}) => this.request({\n            path: `/cosmos/evidence/v1beta1/evidence/${evidenceHash}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgSubmitEvidence } from \"./types/cosmos/evidence/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.evidence.v1beta1.MsgSubmitEvidence\", MsgSubmitEvidence],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgSubmitEvidence: (data) => ({ typeUrl: \"/cosmos.evidence.v1beta1.MsgSubmitEvidence\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { Equivocation } from \"./module/types/cosmos/evidence/v1beta1/evidence\";\nexport { Equivocation };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Evidence: {},\n        AllEvidence: {},\n        _Structure: {\n            Equivocation: getStructure(Equivocation.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getEvidence: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Evidence[JSON.stringify(params)] ?? {};\n        },\n        getAllEvidence: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.AllEvidence[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.evidence.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryEvidence({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryEvidence(key.evidence_hash)).data;\n                commit('QUERY', { query: 'Evidence', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryEvidence', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getEvidence']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryEvidence', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryAllEvidence({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryAllEvidence(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryAllEvidence({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'AllEvidence', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryAllEvidence', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getAllEvidence']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryAllEvidence', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgSubmitEvidence({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSubmitEvidence(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSubmitEvidence:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitEvidence:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgSubmitEvidence({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSubmitEvidence(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSubmitEvidence:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitEvidence:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/feegrant/v1beta1/feegrant.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryAllowance\n         * @summary Allowance returns fee granted to the grantee by the granter.\n         * @request GET:/cosmos/feegrant/v1beta1/allowance/{granter}/{grantee}\n         */\n        this.queryAllowance = (granter, grantee, params = {}) => this.request({\n            path: `/cosmos/feegrant/v1beta1/allowance/${granter}/${grantee}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryAllowances\n         * @summary Allowances returns all the grants for address.\n         * @request GET:/cosmos/feegrant/v1beta1/allowances/{grantee}\n         */\n        this.queryAllowances = (grantee, query, params = {}) => this.request({\n            path: `/cosmos/feegrant/v1beta1/allowances/${grantee}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","/* eslint-disable */\nimport { Reader, Writer } from 'protobufjs/minimal';\nimport { Any } from '../../../google/protobuf/any';\nexport const protobufPackage = 'cosmos.feegrant.v1beta1';\nconst baseMsgGrantAllowance = { granter: '', grantee: '' };\nexport const MsgGrantAllowance = {\n    encode(message, writer = Writer.create()) {\n        if (message.granter !== '') {\n            writer.uint32(10).string(message.granter);\n        }\n        if (message.grantee !== '') {\n            writer.uint32(18).string(message.grantee);\n        }\n        if (message.allowance !== undefined) {\n            Any.encode(message.allowance, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgGrantAllowance };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.granter = reader.string();\n                    break;\n                case 2:\n                    message.grantee = reader.string();\n                    break;\n                case 3:\n                    message.allowance = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgGrantAllowance };\n        if (object.granter !== undefined && object.granter !== null) {\n            message.granter = String(object.granter);\n        }\n        else {\n            message.granter = '';\n        }\n        if (object.grantee !== undefined && object.grantee !== null) {\n            message.grantee = String(object.grantee);\n        }\n        else {\n            message.grantee = '';\n        }\n        if (object.allowance !== undefined && object.allowance !== null) {\n            message.allowance = Any.fromJSON(object.allowance);\n        }\n        else {\n            message.allowance = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.granter !== undefined && (obj.granter = message.granter);\n        message.grantee !== undefined && (obj.grantee = message.grantee);\n        message.allowance !== undefined && (obj.allowance = message.allowance ? Any.toJSON(message.allowance) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgGrantAllowance };\n        if (object.granter !== undefined && object.granter !== null) {\n            message.granter = object.granter;\n        }\n        else {\n            message.granter = '';\n        }\n        if (object.grantee !== undefined && object.grantee !== null) {\n            message.grantee = object.grantee;\n        }\n        else {\n            message.grantee = '';\n        }\n        if (object.allowance !== undefined && object.allowance !== null) {\n            message.allowance = Any.fromPartial(object.allowance);\n        }\n        else {\n            message.allowance = undefined;\n        }\n        return message;\n    }\n};\nconst baseMsgGrantAllowanceResponse = {};\nexport const MsgGrantAllowanceResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgGrantAllowanceResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgGrantAllowanceResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgGrantAllowanceResponse };\n        return message;\n    }\n};\nconst baseMsgRevokeAllowance = { granter: '', grantee: '' };\nexport const MsgRevokeAllowance = {\n    encode(message, writer = Writer.create()) {\n        if (message.granter !== '') {\n            writer.uint32(10).string(message.granter);\n        }\n        if (message.grantee !== '') {\n            writer.uint32(18).string(message.grantee);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRevokeAllowance };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.granter = reader.string();\n                    break;\n                case 2:\n                    message.grantee = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRevokeAllowance };\n        if (object.granter !== undefined && object.granter !== null) {\n            message.granter = String(object.granter);\n        }\n        else {\n            message.granter = '';\n        }\n        if (object.grantee !== undefined && object.grantee !== null) {\n            message.grantee = String(object.grantee);\n        }\n        else {\n            message.grantee = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.granter !== undefined && (obj.granter = message.granter);\n        message.grantee !== undefined && (obj.grantee = message.grantee);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRevokeAllowance };\n        if (object.granter !== undefined && object.granter !== null) {\n            message.granter = object.granter;\n        }\n        else {\n            message.granter = '';\n        }\n        if (object.grantee !== undefined && object.grantee !== null) {\n            message.grantee = object.grantee;\n        }\n        else {\n            message.grantee = '';\n        }\n        return message;\n    }\n};\nconst baseMsgRevokeAllowanceResponse = {};\nexport const MsgRevokeAllowanceResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRevokeAllowanceResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgRevokeAllowanceResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgRevokeAllowanceResponse };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    GrantAllowance(request) {\n        const data = MsgGrantAllowance.encode(request).finish();\n        const promise = this.rpc.request('cosmos.feegrant.v1beta1.Msg', 'GrantAllowance', data);\n        return promise.then((data) => MsgGrantAllowanceResponse.decode(new Reader(data)));\n    }\n    RevokeAllowance(request) {\n        const data = MsgRevokeAllowance.encode(request).finish();\n        const promise = this.rpc.request('cosmos.feegrant.v1beta1.Msg', 'RevokeAllowance', data);\n        return promise.then((data) => MsgRevokeAllowanceResponse.decode(new Reader(data)));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgGrantAllowance } from \"./types/cosmos/feegrant/v1beta1/tx\";\nimport { MsgRevokeAllowance } from \"./types/cosmos/feegrant/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.feegrant.v1beta1.MsgGrantAllowance\", MsgGrantAllowance],\n    [\"/cosmos.feegrant.v1beta1.MsgRevokeAllowance\", MsgRevokeAllowance],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgGrantAllowance: (data) => ({ typeUrl: \"/cosmos.feegrant.v1beta1.MsgGrantAllowance\", value: data }),\n        msgRevokeAllowance: (data) => ({ typeUrl: \"/cosmos.feegrant.v1beta1.MsgRevokeAllowance\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.base.v1beta1';\nconst baseCoin = { denom: '', amount: '' };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseDecCoin = { denom: '', amount: '' };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseIntProto = { int: '' };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== '') {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    }\n};\nconst baseDecProto = { dec: '' };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== '') {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport { Timestamp } from '../../../google/protobuf/timestamp';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nimport { Duration } from '../../../google/protobuf/duration';\nimport { Any } from '../../../google/protobuf/any';\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.feegrant.v1beta1';\nconst baseBasicAllowance = {};\nexport const BasicAllowance = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.spendLimit) {\n            Coin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.expiration !== undefined) {\n            Timestamp.encode(toTimestamp(message.expiration), writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBasicAllowance };\n        message.spendLimit = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.spendLimit.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.expiration = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBasicAllowance };\n        message.spendLimit = [];\n        if (object.spendLimit !== undefined && object.spendLimit !== null) {\n            for (const e of object.spendLimit) {\n                message.spendLimit.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.expiration !== undefined && object.expiration !== null) {\n            message.expiration = fromJsonTimestamp(object.expiration);\n        }\n        else {\n            message.expiration = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.spendLimit) {\n            obj.spendLimit = message.spendLimit.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.spendLimit = [];\n        }\n        message.expiration !== undefined && (obj.expiration = message.expiration !== undefined ? message.expiration.toISOString() : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBasicAllowance };\n        message.spendLimit = [];\n        if (object.spendLimit !== undefined && object.spendLimit !== null) {\n            for (const e of object.spendLimit) {\n                message.spendLimit.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.expiration !== undefined && object.expiration !== null) {\n            message.expiration = object.expiration;\n        }\n        else {\n            message.expiration = undefined;\n        }\n        return message;\n    }\n};\nconst basePeriodicAllowance = {};\nexport const PeriodicAllowance = {\n    encode(message, writer = Writer.create()) {\n        if (message.basic !== undefined) {\n            BasicAllowance.encode(message.basic, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.period !== undefined) {\n            Duration.encode(message.period, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.periodSpendLimit) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.periodCanSpend) {\n            Coin.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.periodReset !== undefined) {\n            Timestamp.encode(toTimestamp(message.periodReset), writer.uint32(42).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePeriodicAllowance };\n        message.periodSpendLimit = [];\n        message.periodCanSpend = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.basic = BasicAllowance.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.period = Duration.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.periodSpendLimit.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.periodCanSpend.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.periodReset = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePeriodicAllowance };\n        message.periodSpendLimit = [];\n        message.periodCanSpend = [];\n        if (object.basic !== undefined && object.basic !== null) {\n            message.basic = BasicAllowance.fromJSON(object.basic);\n        }\n        else {\n            message.basic = undefined;\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = Duration.fromJSON(object.period);\n        }\n        else {\n            message.period = undefined;\n        }\n        if (object.periodSpendLimit !== undefined && object.periodSpendLimit !== null) {\n            for (const e of object.periodSpendLimit) {\n                message.periodSpendLimit.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.periodCanSpend !== undefined && object.periodCanSpend !== null) {\n            for (const e of object.periodCanSpend) {\n                message.periodCanSpend.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.periodReset !== undefined && object.periodReset !== null) {\n            message.periodReset = fromJsonTimestamp(object.periodReset);\n        }\n        else {\n            message.periodReset = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.basic !== undefined && (obj.basic = message.basic ? BasicAllowance.toJSON(message.basic) : undefined);\n        message.period !== undefined && (obj.period = message.period ? Duration.toJSON(message.period) : undefined);\n        if (message.periodSpendLimit) {\n            obj.periodSpendLimit = message.periodSpendLimit.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.periodSpendLimit = [];\n        }\n        if (message.periodCanSpend) {\n            obj.periodCanSpend = message.periodCanSpend.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.periodCanSpend = [];\n        }\n        message.periodReset !== undefined && (obj.periodReset = message.periodReset !== undefined ? message.periodReset.toISOString() : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePeriodicAllowance };\n        message.periodSpendLimit = [];\n        message.periodCanSpend = [];\n        if (object.basic !== undefined && object.basic !== null) {\n            message.basic = BasicAllowance.fromPartial(object.basic);\n        }\n        else {\n            message.basic = undefined;\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = Duration.fromPartial(object.period);\n        }\n        else {\n            message.period = undefined;\n        }\n        if (object.periodSpendLimit !== undefined && object.periodSpendLimit !== null) {\n            for (const e of object.periodSpendLimit) {\n                message.periodSpendLimit.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.periodCanSpend !== undefined && object.periodCanSpend !== null) {\n            for (const e of object.periodCanSpend) {\n                message.periodCanSpend.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.periodReset !== undefined && object.periodReset !== null) {\n            message.periodReset = object.periodReset;\n        }\n        else {\n            message.periodReset = undefined;\n        }\n        return message;\n    }\n};\nconst baseAllowedMsgAllowance = { allowedMessages: '' };\nexport const AllowedMsgAllowance = {\n    encode(message, writer = Writer.create()) {\n        if (message.allowance !== undefined) {\n            Any.encode(message.allowance, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.allowedMessages) {\n            writer.uint32(18).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAllowedMsgAllowance };\n        message.allowedMessages = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.allowance = Any.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.allowedMessages.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAllowedMsgAllowance };\n        message.allowedMessages = [];\n        if (object.allowance !== undefined && object.allowance !== null) {\n            message.allowance = Any.fromJSON(object.allowance);\n        }\n        else {\n            message.allowance = undefined;\n        }\n        if (object.allowedMessages !== undefined && object.allowedMessages !== null) {\n            for (const e of object.allowedMessages) {\n                message.allowedMessages.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.allowance !== undefined && (obj.allowance = message.allowance ? Any.toJSON(message.allowance) : undefined);\n        if (message.allowedMessages) {\n            obj.allowedMessages = message.allowedMessages.map((e) => e);\n        }\n        else {\n            obj.allowedMessages = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAllowedMsgAllowance };\n        message.allowedMessages = [];\n        if (object.allowance !== undefined && object.allowance !== null) {\n            message.allowance = Any.fromPartial(object.allowance);\n        }\n        else {\n            message.allowance = undefined;\n        }\n        if (object.allowedMessages !== undefined && object.allowedMessages !== null) {\n            for (const e of object.allowedMessages) {\n                message.allowedMessages.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseGrant = { granter: '', grantee: '' };\nexport const Grant = {\n    encode(message, writer = Writer.create()) {\n        if (message.granter !== '') {\n            writer.uint32(10).string(message.granter);\n        }\n        if (message.grantee !== '') {\n            writer.uint32(18).string(message.grantee);\n        }\n        if (message.allowance !== undefined) {\n            Any.encode(message.allowance, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGrant };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.granter = reader.string();\n                    break;\n                case 2:\n                    message.grantee = reader.string();\n                    break;\n                case 3:\n                    message.allowance = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGrant };\n        if (object.granter !== undefined && object.granter !== null) {\n            message.granter = String(object.granter);\n        }\n        else {\n            message.granter = '';\n        }\n        if (object.grantee !== undefined && object.grantee !== null) {\n            message.grantee = String(object.grantee);\n        }\n        else {\n            message.grantee = '';\n        }\n        if (object.allowance !== undefined && object.allowance !== null) {\n            message.allowance = Any.fromJSON(object.allowance);\n        }\n        else {\n            message.allowance = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.granter !== undefined && (obj.granter = message.granter);\n        message.grantee !== undefined && (obj.grantee = message.grantee);\n        message.allowance !== undefined && (obj.allowance = message.allowance ? Any.toJSON(message.allowance) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGrant };\n        if (object.granter !== undefined && object.granter !== null) {\n            message.granter = object.granter;\n        }\n        else {\n            message.granter = '';\n        }\n        if (object.grantee !== undefined && object.grantee !== null) {\n            message.grantee = object.grantee;\n        }\n        else {\n            message.grantee = '';\n        }\n        if (object.allowance !== undefined && object.allowance !== null) {\n            message.allowance = Any.fromPartial(object.allowance);\n        }\n        else {\n            message.allowance = undefined;\n        }\n        return message;\n    }\n};\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { BasicAllowance } from \"./module/types/cosmos/feegrant/v1beta1/feegrant\";\nimport { PeriodicAllowance } from \"./module/types/cosmos/feegrant/v1beta1/feegrant\";\nimport { AllowedMsgAllowance } from \"./module/types/cosmos/feegrant/v1beta1/feegrant\";\nimport { Grant } from \"./module/types/cosmos/feegrant/v1beta1/feegrant\";\nexport { BasicAllowance, PeriodicAllowance, AllowedMsgAllowance, Grant };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Allowance: {},\n        Allowances: {},\n        _Structure: {\n            BasicAllowance: getStructure(BasicAllowance.fromPartial({})),\n            PeriodicAllowance: getStructure(PeriodicAllowance.fromPartial({})),\n            AllowedMsgAllowance: getStructure(AllowedMsgAllowance.fromPartial({})),\n            Grant: getStructure(Grant.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getAllowance: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Allowance[JSON.stringify(params)] ?? {};\n        },\n        getAllowances: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Allowances[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.feegrant.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryAllowance({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryAllowance(key.granter, key.grantee)).data;\n                commit('QUERY', { query: 'Allowance', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryAllowance', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getAllowance']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryAllowance', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryAllowances({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryAllowances(key.grantee, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryAllowances(key.grantee, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Allowances', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryAllowances', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getAllowances']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryAllowances', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgGrantAllowance({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgGrantAllowance(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgGrantAllowance:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgGrantAllowance:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgRevokeAllowance({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgRevokeAllowance(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgRevokeAllowance:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRevokeAllowance:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgGrantAllowance({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgGrantAllowance(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgGrantAllowance:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgGrantAllowance:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgRevokeAllowance({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgRevokeAllowance(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgRevokeAllowance:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRevokeAllowance:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\n/**\n* ProposalStatus enumerates the valid statuses of a proposal.\n\n - PROPOSAL_STATUS_UNSPECIFIED: PROPOSAL_STATUS_UNSPECIFIED defines the default propopsal status.\n - PROPOSAL_STATUS_DEPOSIT_PERIOD: PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit\nperiod.\n - PROPOSAL_STATUS_VOTING_PERIOD: PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting\nperiod.\n - PROPOSAL_STATUS_PASSED: PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has\npassed.\n - PROPOSAL_STATUS_REJECTED: PROPOSAL_STATUS_REJECTED defines a proposal status of a proposal that has\nbeen rejected.\n - PROPOSAL_STATUS_FAILED: PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has\nfailed.\n*/\nexport var V1Beta1ProposalStatus;\n(function (V1Beta1ProposalStatus) {\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_UNSPECIFIED\"] = \"PROPOSAL_STATUS_UNSPECIFIED\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_DEPOSIT_PERIOD\"] = \"PROPOSAL_STATUS_DEPOSIT_PERIOD\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_VOTING_PERIOD\"] = \"PROPOSAL_STATUS_VOTING_PERIOD\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_PASSED\"] = \"PROPOSAL_STATUS_PASSED\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_REJECTED\"] = \"PROPOSAL_STATUS_REJECTED\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_FAILED\"] = \"PROPOSAL_STATUS_FAILED\";\n})(V1Beta1ProposalStatus || (V1Beta1ProposalStatus = {}));\n/**\n* VoteOption enumerates the valid vote options for a given governance proposal.\n\n - VOTE_OPTION_UNSPECIFIED: VOTE_OPTION_UNSPECIFIED defines a no-op vote option.\n - VOTE_OPTION_YES: VOTE_OPTION_YES defines a yes vote option.\n - VOTE_OPTION_ABSTAIN: VOTE_OPTION_ABSTAIN defines an abstain vote option.\n - VOTE_OPTION_NO: VOTE_OPTION_NO defines a no vote option.\n - VOTE_OPTION_NO_WITH_VETO: VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option.\n*/\nexport var V1Beta1VoteOption;\n(function (V1Beta1VoteOption) {\n    V1Beta1VoteOption[\"VOTE_OPTION_UNSPECIFIED\"] = \"VOTE_OPTION_UNSPECIFIED\";\n    V1Beta1VoteOption[\"VOTE_OPTION_YES\"] = \"VOTE_OPTION_YES\";\n    V1Beta1VoteOption[\"VOTE_OPTION_ABSTAIN\"] = \"VOTE_OPTION_ABSTAIN\";\n    V1Beta1VoteOption[\"VOTE_OPTION_NO\"] = \"VOTE_OPTION_NO\";\n    V1Beta1VoteOption[\"VOTE_OPTION_NO_WITH_VETO\"] = \"VOTE_OPTION_NO_WITH_VETO\";\n})(V1Beta1VoteOption || (V1Beta1VoteOption = {}));\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/gov/v1beta1/genesis.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries all parameters of the gov module.\n         * @request GET:/cosmos/gov/v1beta1/params/{paramsType}\n         */\n        this.queryParams = (paramsType, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/params/${paramsType}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryProposals\n         * @summary Proposals queries all proposals based on given status.\n         * @request GET:/cosmos/gov/v1beta1/proposals\n         */\n        this.queryProposals = (query, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryProposal\n         * @summary Proposal queries proposal details based on ProposalID.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}\n         */\n        this.queryProposal = (proposalId, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDeposits\n         * @summary Deposits queries all deposits of a single proposal.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/deposits\n         */\n        this.queryDeposits = (proposalId, query, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/deposits`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDeposit\n         * @summary Deposit queries single deposit information based proposalID, depositAddr.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/deposits/{depositor}\n         */\n        this.queryDeposit = (proposalId, depositor, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/deposits/${depositor}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryTallyResult\n         * @summary TallyResult queries the tally of a proposal vote.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/tally\n         */\n        this.queryTallyResult = (proposalId, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/tally`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryVotes\n         * @summary Votes queries votes of a given proposal.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/votes\n         */\n        this.queryVotes = (proposalId, query, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/votes`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryVote\n         * @summary Vote queries voted information based on proposalID, voterAddr.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/votes/{voter}\n         */\n        this.queryVote = (proposalId, voter, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/votes/${voter}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgVoteWeighted } from \"./types/cosmos/gov/v1beta1/tx\";\nimport { MsgSubmitProposal } from \"./types/cosmos/gov/v1beta1/tx\";\nimport { MsgVote } from \"./types/cosmos/gov/v1beta1/tx\";\nimport { MsgDeposit } from \"./types/cosmos/gov/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.gov.v1beta1.MsgVoteWeighted\", MsgVoteWeighted],\n    [\"/cosmos.gov.v1beta1.MsgSubmitProposal\", MsgSubmitProposal],\n    [\"/cosmos.gov.v1beta1.MsgVote\", MsgVote],\n    [\"/cosmos.gov.v1beta1.MsgDeposit\", MsgDeposit],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgVoteWeighted: (data) => ({ typeUrl: \"/cosmos.gov.v1beta1.MsgVoteWeighted\", value: data }),\n        msgSubmitProposal: (data) => ({ typeUrl: \"/cosmos.gov.v1beta1.MsgSubmitProposal\", value: data }),\n        msgVote: (data) => ({ typeUrl: \"/cosmos.gov.v1beta1.MsgVote\", value: data }),\n        msgDeposit: (data) => ({ typeUrl: \"/cosmos.gov.v1beta1.MsgDeposit\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { WeightedVoteOption } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { TextProposal } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { Deposit } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { Proposal } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { TallyResult } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { Vote } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { DepositParams } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { VotingParams } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { TallyParams } from \"./module/types/cosmos/gov/v1beta1/gov\";\nexport { WeightedVoteOption, TextProposal, Deposit, Proposal, TallyResult, Vote, DepositParams, VotingParams, TallyParams };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Proposal: {},\n        Proposals: {},\n        Vote: {},\n        Votes: {},\n        Params: {},\n        Deposit: {},\n        Deposits: {},\n        TallyResult: {},\n        _Structure: {\n            WeightedVoteOption: getStructure(WeightedVoteOption.fromPartial({})),\n            TextProposal: getStructure(TextProposal.fromPartial({})),\n            Deposit: getStructure(Deposit.fromPartial({})),\n            Proposal: getStructure(Proposal.fromPartial({})),\n            TallyResult: getStructure(TallyResult.fromPartial({})),\n            Vote: getStructure(Vote.fromPartial({})),\n            DepositParams: getStructure(DepositParams.fromPartial({})),\n            VotingParams: getStructure(VotingParams.fromPartial({})),\n            TallyParams: getStructure(TallyParams.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getProposal: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Proposal[JSON.stringify(params)] ?? {};\n        },\n        getProposals: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Proposals[JSON.stringify(params)] ?? {};\n        },\n        getVote: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Vote[JSON.stringify(params)] ?? {};\n        },\n        getVotes: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Votes[JSON.stringify(params)] ?? {};\n        },\n        getParams: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getDeposit: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Deposit[JSON.stringify(params)] ?? {};\n        },\n        getDeposits: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Deposits[JSON.stringify(params)] ?? {};\n        },\n        getTallyResult: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.TallyResult[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.gov.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryProposal({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryProposal(key.proposal_id)).data;\n                commit('QUERY', { query: 'Proposal', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryProposal', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getProposal']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryProposal', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryProposals({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryProposals(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryProposals({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Proposals', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryProposals', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getProposals']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryProposals', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryVote({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryVote(key.proposal_id, key.voter)).data;\n                commit('QUERY', { query: 'Vote', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryVote', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getVote']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryVote', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryVotes({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryVotes(key.proposal_id, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryVotes(key.proposal_id, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Votes', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryVotes', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getVotes']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryVotes', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryParams(key.params_type)).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDeposit({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDeposit(key.proposal_id, key.depositor)).data;\n                commit('QUERY', { query: 'Deposit', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDeposit', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDeposit']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDeposit', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDeposits({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDeposits(key.proposal_id, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryDeposits(key.proposal_id, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Deposits', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDeposits', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDeposits']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDeposits', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryTallyResult({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryTallyResult(key.proposal_id)).data;\n                commit('QUERY', { query: 'TallyResult', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryTallyResult', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getTallyResult']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryTallyResult', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgVoteWeighted({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgVoteWeighted(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgVoteWeighted:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgVoteWeighted:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgSubmitProposal({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSubmitProposal(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSubmitProposal:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitProposal:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgVote({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgVote(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgVote:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgVote:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgDeposit({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgDeposit(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgDeposit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeposit:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgVoteWeighted({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgVoteWeighted(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgVoteWeighted:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgVoteWeighted:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgSubmitProposal({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgSubmitProposal(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgSubmitProposal:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitProposal:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgVote({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgVote(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgVote:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgVote:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgDeposit({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgDeposit(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgDeposit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeposit:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/slashing/v1beta1/genesis.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries the parameters of slashing module\n         * @request GET:/cosmos/slashing/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/cosmos/slashing/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QuerySigningInfos\n         * @summary SigningInfos queries signing info of all validators\n         * @request GET:/cosmos/slashing/v1beta1/signing_infos\n         */\n        this.querySigningInfos = (query, params = {}) => this.request({\n            path: `/cosmos/slashing/v1beta1/signing_infos`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QuerySigningInfo\n         * @summary SigningInfo queries the signing info of given cons address\n         * @request GET:/cosmos/slashing/v1beta1/signing_infos/{consAddress}\n         */\n        this.querySigningInfo = (consAddress, params = {}) => this.request({\n            path: `/cosmos/slashing/v1beta1/signing_infos/${consAddress}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","/* eslint-disable */\nimport { Reader, Writer } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.slashing.v1beta1';\nconst baseMsgUnjail = { validatorAddr: '' };\nexport const MsgUnjail = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddr !== '') {\n            writer.uint32(10).string(message.validatorAddr);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUnjail };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddr = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUnjail };\n        if (object.validatorAddr !== undefined && object.validatorAddr !== null) {\n            message.validatorAddr = String(object.validatorAddr);\n        }\n        else {\n            message.validatorAddr = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddr !== undefined && (obj.validatorAddr = message.validatorAddr);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUnjail };\n        if (object.validatorAddr !== undefined && object.validatorAddr !== null) {\n            message.validatorAddr = object.validatorAddr;\n        }\n        else {\n            message.validatorAddr = '';\n        }\n        return message;\n    }\n};\nconst baseMsgUnjailResponse = {};\nexport const MsgUnjailResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUnjailResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgUnjailResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgUnjailResponse };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    Unjail(request) {\n        const data = MsgUnjail.encode(request).finish();\n        const promise = this.rpc.request('cosmos.slashing.v1beta1.Msg', 'Unjail', data);\n        return promise.then((data) => MsgUnjailResponse.decode(new Reader(data)));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgUnjail } from \"./types/cosmos/slashing/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.slashing.v1beta1.MsgUnjail\", MsgUnjail],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgUnjail: (data) => ({ typeUrl: \"/cosmos.slashing.v1beta1.MsgUnjail\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { SigningInfo } from \"./module/types/cosmos/slashing/v1beta1/genesis\";\nimport { ValidatorMissedBlocks } from \"./module/types/cosmos/slashing/v1beta1/genesis\";\nimport { MissedBlock } from \"./module/types/cosmos/slashing/v1beta1/genesis\";\nimport { ValidatorSigningInfo } from \"./module/types/cosmos/slashing/v1beta1/slashing\";\nimport { Params } from \"./module/types/cosmos/slashing/v1beta1/slashing\";\nexport { SigningInfo, ValidatorMissedBlocks, MissedBlock, ValidatorSigningInfo, Params };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Params: {},\n        SigningInfo: {},\n        SigningInfos: {},\n        _Structure: {\n            SigningInfo: getStructure(SigningInfo.fromPartial({})),\n            ValidatorMissedBlocks: getStructure(ValidatorMissedBlocks.fromPartial({})),\n            MissedBlock: getStructure(MissedBlock.fromPartial({})),\n            ValidatorSigningInfo: getStructure(ValidatorSigningInfo.fromPartial({})),\n            Params: getStructure(Params.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getParams: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getSigningInfo: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.SigningInfo[JSON.stringify(params)] ?? {};\n        },\n        getSigningInfos: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.SigningInfos[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.slashing.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QuerySigningInfo({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.querySigningInfo(key.cons_address)).data;\n                commit('QUERY', { query: 'SigningInfo', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QuerySigningInfo', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getSigningInfo']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QuerySigningInfo', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QuerySigningInfos({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.querySigningInfos(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.querySigningInfos({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'SigningInfos', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QuerySigningInfos', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getSigningInfos']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QuerySigningInfos', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgUnjail({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUnjail(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUnjail:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUnjail:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgUnjail({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUnjail(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUnjail:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUnjail:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\n/**\n* BondStatus is the status of a validator.\n\n - BOND_STATUS_UNSPECIFIED: UNSPECIFIED defines an invalid validator status.\n - BOND_STATUS_UNBONDED: UNBONDED defines a validator that is not bonded.\n - BOND_STATUS_UNBONDING: UNBONDING defines a validator that is unbonding.\n - BOND_STATUS_BONDED: BONDED defines a validator that is bonded.\n*/\nexport var V1Beta1BondStatus;\n(function (V1Beta1BondStatus) {\n    V1Beta1BondStatus[\"BOND_STATUS_UNSPECIFIED\"] = \"BOND_STATUS_UNSPECIFIED\";\n    V1Beta1BondStatus[\"BOND_STATUS_UNBONDED\"] = \"BOND_STATUS_UNBONDED\";\n    V1Beta1BondStatus[\"BOND_STATUS_UNBONDING\"] = \"BOND_STATUS_UNBONDING\";\n    V1Beta1BondStatus[\"BOND_STATUS_BONDED\"] = \"BOND_STATUS_BONDED\";\n})(V1Beta1BondStatus || (V1Beta1BondStatus = {}));\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/staking/v1beta1/authz.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegatorDelegations\n         * @summary DelegatorDelegations queries all delegations of a given delegator address.\n         * @request GET:/cosmos/staking/v1beta1/delegations/{delegatorAddr}\n         */\n        this.queryDelegatorDelegations = (delegatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegations/${delegatorAddr}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryRedelegations\n         * @summary Redelegations queries redelegations of given address.\n         * @request GET:/cosmos/staking/v1beta1/delegators/{delegatorAddr}/redelegations\n         */\n        this.queryRedelegations = (delegatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegators/${delegatorAddr}/redelegations`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryDelegatorUnbondingDelegations\n       * @summary DelegatorUnbondingDelegations queries all unbonding delegations of a given\n      delegator address.\n       * @request GET:/cosmos/staking/v1beta1/delegators/{delegatorAddr}/unbonding_delegations\n       */\n        this.queryDelegatorUnbondingDelegations = (delegatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegators/${delegatorAddr}/unbonding_delegations`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryDelegatorValidators\n       * @summary DelegatorValidators queries all validators info for given delegator\n      address.\n       * @request GET:/cosmos/staking/v1beta1/delegators/{delegatorAddr}/validators\n       */\n        this.queryDelegatorValidators = (delegatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegators/${delegatorAddr}/validators`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryDelegatorValidator\n       * @summary DelegatorValidator queries validator info for given delegator validator\n      pair.\n       * @request GET:/cosmos/staking/v1beta1/delegators/{delegatorAddr}/validators/{validatorAddr}\n       */\n        this.queryDelegatorValidator = (delegatorAddr, validatorAddr, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegators/${delegatorAddr}/validators/${validatorAddr}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryHistoricalInfo\n         * @summary HistoricalInfo queries the historical info for given height.\n         * @request GET:/cosmos/staking/v1beta1/historical_info/{height}\n         */\n        this.queryHistoricalInfo = (height, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/historical_info/${height}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Parameters queries the staking parameters.\n         * @request GET:/cosmos/staking/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryPool\n         * @summary Pool queries the pool info.\n         * @request GET:/cosmos/staking/v1beta1/pool\n         */\n        this.queryPool = (params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/pool`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidators\n         * @summary Validators queries all validators that match the given status.\n         * @request GET:/cosmos/staking/v1beta1/validators\n         */\n        this.queryValidators = (query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidator\n         * @summary Validator queries validator info for given validator address.\n         * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}\n         */\n        this.queryValidator = (validatorAddr, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorDelegations\n         * @summary ValidatorDelegations queries delegate info for given validator.\n         * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}/delegations\n         */\n        this.queryValidatorDelegations = (validatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}/delegations`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegation\n         * @summary Delegation queries delegate info for given validator delegator pair.\n         * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}/delegations/{delegatorAddr}\n         */\n        this.queryDelegation = (validatorAddr, delegatorAddr, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}/delegations/${delegatorAddr}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryUnbondingDelegation\n       * @summary UnbondingDelegation queries unbonding info for given validator delegator\n      pair.\n       * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}/delegations/{delegatorAddr}/unbonding_delegation\n       */\n        this.queryUnbondingDelegation = (validatorAddr, delegatorAddr, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}/delegations/${delegatorAddr}/unbonding_delegation`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorUnbondingDelegations\n         * @summary ValidatorUnbondingDelegations queries unbonding delegations of a validator.\n         * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}/unbonding_delegations\n         */\n        this.queryValidatorUnbondingDelegations = (validatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}/unbonding_delegations`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","/* eslint-disable */\nimport { Reader, Writer } from 'protobufjs/minimal';\nimport { Timestamp } from '../../../google/protobuf/timestamp';\nimport { Description, CommissionRates } from '../../../cosmos/staking/v1beta1/staking';\nimport { Any } from '../../../google/protobuf/any';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nexport const protobufPackage = 'cosmos.staking.v1beta1';\nconst baseMsgCreateValidator = { minSelfDelegation: '', delegatorAddress: '', validatorAddress: '' };\nexport const MsgCreateValidator = {\n    encode(message, writer = Writer.create()) {\n        if (message.description !== undefined) {\n            Description.encode(message.description, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.commission !== undefined) {\n            CommissionRates.encode(message.commission, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.minSelfDelegation !== '') {\n            writer.uint32(26).string(message.minSelfDelegation);\n        }\n        if (message.delegatorAddress !== '') {\n            writer.uint32(34).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(42).string(message.validatorAddress);\n        }\n        if (message.pubkey !== undefined) {\n            Any.encode(message.pubkey, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.value !== undefined) {\n            Coin.encode(message.value, writer.uint32(58).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.description = Description.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.commission = CommissionRates.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.minSelfDelegation = reader.string();\n                    break;\n                case 4:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 5:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 6:\n                    message.pubkey = Any.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.value = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateValidator };\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromJSON(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.commission !== undefined && object.commission !== null) {\n            message.commission = CommissionRates.fromJSON(object.commission);\n        }\n        else {\n            message.commission = undefined;\n        }\n        if (object.minSelfDelegation !== undefined && object.minSelfDelegation !== null) {\n            message.minSelfDelegation = String(object.minSelfDelegation);\n        }\n        else {\n            message.minSelfDelegation = '';\n        }\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.pubkey !== undefined && object.pubkey !== null) {\n            message.pubkey = Any.fromJSON(object.pubkey);\n        }\n        else {\n            message.pubkey = undefined;\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = Coin.fromJSON(object.value);\n        }\n        else {\n            message.value = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.description !== undefined && (obj.description = message.description ? Description.toJSON(message.description) : undefined);\n        message.commission !== undefined && (obj.commission = message.commission ? CommissionRates.toJSON(message.commission) : undefined);\n        message.minSelfDelegation !== undefined && (obj.minSelfDelegation = message.minSelfDelegation);\n        message.delegatorAddress !== undefined && (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);\n        message.pubkey !== undefined && (obj.pubkey = message.pubkey ? Any.toJSON(message.pubkey) : undefined);\n        message.value !== undefined && (obj.value = message.value ? Coin.toJSON(message.value) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateValidator };\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromPartial(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.commission !== undefined && object.commission !== null) {\n            message.commission = CommissionRates.fromPartial(object.commission);\n        }\n        else {\n            message.commission = undefined;\n        }\n        if (object.minSelfDelegation !== undefined && object.minSelfDelegation !== null) {\n            message.minSelfDelegation = object.minSelfDelegation;\n        }\n        else {\n            message.minSelfDelegation = '';\n        }\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.pubkey !== undefined && object.pubkey !== null) {\n            message.pubkey = Any.fromPartial(object.pubkey);\n        }\n        else {\n            message.pubkey = undefined;\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = Coin.fromPartial(object.value);\n        }\n        else {\n            message.value = undefined;\n        }\n        return message;\n    }\n};\nconst baseMsgCreateValidatorResponse = {};\nexport const MsgCreateValidatorResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateValidatorResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgCreateValidatorResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgCreateValidatorResponse };\n        return message;\n    }\n};\nconst baseMsgEditValidator = { validatorAddress: '', commissionRate: '', minSelfDelegation: '' };\nexport const MsgEditValidator = {\n    encode(message, writer = Writer.create()) {\n        if (message.description !== undefined) {\n            Description.encode(message.description, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.commissionRate !== '') {\n            writer.uint32(26).string(message.commissionRate);\n        }\n        if (message.minSelfDelegation !== '') {\n            writer.uint32(34).string(message.minSelfDelegation);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgEditValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.description = Description.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.commissionRate = reader.string();\n                    break;\n                case 4:\n                    message.minSelfDelegation = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgEditValidator };\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromJSON(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.commissionRate !== undefined && object.commissionRate !== null) {\n            message.commissionRate = String(object.commissionRate);\n        }\n        else {\n            message.commissionRate = '';\n        }\n        if (object.minSelfDelegation !== undefined && object.minSelfDelegation !== null) {\n            message.minSelfDelegation = String(object.minSelfDelegation);\n        }\n        else {\n            message.minSelfDelegation = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.description !== undefined && (obj.description = message.description ? Description.toJSON(message.description) : undefined);\n        message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);\n        message.commissionRate !== undefined && (obj.commissionRate = message.commissionRate);\n        message.minSelfDelegation !== undefined && (obj.minSelfDelegation = message.minSelfDelegation);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgEditValidator };\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromPartial(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.commissionRate !== undefined && object.commissionRate !== null) {\n            message.commissionRate = object.commissionRate;\n        }\n        else {\n            message.commissionRate = '';\n        }\n        if (object.minSelfDelegation !== undefined && object.minSelfDelegation !== null) {\n            message.minSelfDelegation = object.minSelfDelegation;\n        }\n        else {\n            message.minSelfDelegation = '';\n        }\n        return message;\n    }\n};\nconst baseMsgEditValidatorResponse = {};\nexport const MsgEditValidatorResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgEditValidatorResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgEditValidatorResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgEditValidatorResponse };\n        return message;\n    }\n};\nconst baseMsgDelegate = { delegatorAddress: '', validatorAddress: '' };\nexport const MsgDelegate = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.amount !== undefined) {\n            Coin.encode(message.amount, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDelegate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.amount = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgDelegate };\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromJSON(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined && (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);\n        message.amount !== undefined && (obj.amount = message.amount ? Coin.toJSON(message.amount) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgDelegate };\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromPartial(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    }\n};\nconst baseMsgDelegateResponse = {};\nexport const MsgDelegateResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDelegateResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgDelegateResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgDelegateResponse };\n        return message;\n    }\n};\nconst baseMsgBeginRedelegate = { delegatorAddress: '', validatorSrcAddress: '', validatorDstAddress: '' };\nexport const MsgBeginRedelegate = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorSrcAddress !== '') {\n            writer.uint32(18).string(message.validatorSrcAddress);\n        }\n        if (message.validatorDstAddress !== '') {\n            writer.uint32(26).string(message.validatorDstAddress);\n        }\n        if (message.amount !== undefined) {\n            Coin.encode(message.amount, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgBeginRedelegate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorSrcAddress = reader.string();\n                    break;\n                case 3:\n                    message.validatorDstAddress = reader.string();\n                    break;\n                case 4:\n                    message.amount = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgBeginRedelegate };\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorSrcAddress !== undefined && object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = String(object.validatorSrcAddress);\n        }\n        else {\n            message.validatorSrcAddress = '';\n        }\n        if (object.validatorDstAddress !== undefined && object.validatorDstAddress !== null) {\n            message.validatorDstAddress = String(object.validatorDstAddress);\n        }\n        else {\n            message.validatorDstAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromJSON(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined && (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorSrcAddress !== undefined && (obj.validatorSrcAddress = message.validatorSrcAddress);\n        message.validatorDstAddress !== undefined && (obj.validatorDstAddress = message.validatorDstAddress);\n        message.amount !== undefined && (obj.amount = message.amount ? Coin.toJSON(message.amount) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgBeginRedelegate };\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorSrcAddress !== undefined && object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = object.validatorSrcAddress;\n        }\n        else {\n            message.validatorSrcAddress = '';\n        }\n        if (object.validatorDstAddress !== undefined && object.validatorDstAddress !== null) {\n            message.validatorDstAddress = object.validatorDstAddress;\n        }\n        else {\n            message.validatorDstAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromPartial(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    }\n};\nconst baseMsgBeginRedelegateResponse = {};\nexport const MsgBeginRedelegateResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.completionTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.completionTime), writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgBeginRedelegateResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.completionTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgBeginRedelegateResponse };\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = fromJsonTimestamp(object.completionTime);\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.completionTime !== undefined && (obj.completionTime = message.completionTime !== undefined ? message.completionTime.toISOString() : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgBeginRedelegateResponse };\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = object.completionTime;\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        return message;\n    }\n};\nconst baseMsgUndelegate = { delegatorAddress: '', validatorAddress: '' };\nexport const MsgUndelegate = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.amount !== undefined) {\n            Coin.encode(message.amount, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUndelegate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.amount = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUndelegate };\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromJSON(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined && (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);\n        message.amount !== undefined && (obj.amount = message.amount ? Coin.toJSON(message.amount) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUndelegate };\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromPartial(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    }\n};\nconst baseMsgUndelegateResponse = {};\nexport const MsgUndelegateResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.completionTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.completionTime), writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUndelegateResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.completionTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUndelegateResponse };\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = fromJsonTimestamp(object.completionTime);\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.completionTime !== undefined && (obj.completionTime = message.completionTime !== undefined ? message.completionTime.toISOString() : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUndelegateResponse };\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = object.completionTime;\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    CreateValidator(request) {\n        const data = MsgCreateValidator.encode(request).finish();\n        const promise = this.rpc.request('cosmos.staking.v1beta1.Msg', 'CreateValidator', data);\n        return promise.then((data) => MsgCreateValidatorResponse.decode(new Reader(data)));\n    }\n    EditValidator(request) {\n        const data = MsgEditValidator.encode(request).finish();\n        const promise = this.rpc.request('cosmos.staking.v1beta1.Msg', 'EditValidator', data);\n        return promise.then((data) => MsgEditValidatorResponse.decode(new Reader(data)));\n    }\n    Delegate(request) {\n        const data = MsgDelegate.encode(request).finish();\n        const promise = this.rpc.request('cosmos.staking.v1beta1.Msg', 'Delegate', data);\n        return promise.then((data) => MsgDelegateResponse.decode(new Reader(data)));\n    }\n    BeginRedelegate(request) {\n        const data = MsgBeginRedelegate.encode(request).finish();\n        const promise = this.rpc.request('cosmos.staking.v1beta1.Msg', 'BeginRedelegate', data);\n        return promise.then((data) => MsgBeginRedelegateResponse.decode(new Reader(data)));\n    }\n    Undelegate(request) {\n        const data = MsgUndelegate.encode(request).finish();\n        const promise = this.rpc.request('cosmos.staking.v1beta1.Msg', 'Undelegate', data);\n        return promise.then((data) => MsgUndelegateResponse.decode(new Reader(data)));\n    }\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgBeginRedelegate } from \"./types/cosmos/staking/v1beta1/tx\";\nimport { MsgUndelegate } from \"./types/cosmos/staking/v1beta1/tx\";\nimport { MsgDelegate } from \"./types/cosmos/staking/v1beta1/tx\";\nimport { MsgCreateValidator } from \"./types/cosmos/staking/v1beta1/tx\";\nimport { MsgEditValidator } from \"./types/cosmos/staking/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.staking.v1beta1.MsgBeginRedelegate\", MsgBeginRedelegate],\n    [\"/cosmos.staking.v1beta1.MsgUndelegate\", MsgUndelegate],\n    [\"/cosmos.staking.v1beta1.MsgDelegate\", MsgDelegate],\n    [\"/cosmos.staking.v1beta1.MsgCreateValidator\", MsgCreateValidator],\n    [\"/cosmos.staking.v1beta1.MsgEditValidator\", MsgEditValidator],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgBeginRedelegate: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgBeginRedelegate\", value: data }),\n        msgUndelegate: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgUndelegate\", value: data }),\n        msgDelegate: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgDelegate\", value: data }),\n        msgCreateValidator: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgCreateValidator\", value: data }),\n        msgEditValidator: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgEditValidator\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","/* eslint-disable */\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.staking.v1beta1';\n/** AuthorizationType defines the type of staking module authorization type */\nexport var AuthorizationType;\n(function (AuthorizationType) {\n    /** AUTHORIZATION_TYPE_UNSPECIFIED - AUTHORIZATION_TYPE_UNSPECIFIED specifies an unknown authorization type */\n    AuthorizationType[AuthorizationType[\"AUTHORIZATION_TYPE_UNSPECIFIED\"] = 0] = \"AUTHORIZATION_TYPE_UNSPECIFIED\";\n    /** AUTHORIZATION_TYPE_DELEGATE - AUTHORIZATION_TYPE_DELEGATE defines an authorization type for Msg/Delegate */\n    AuthorizationType[AuthorizationType[\"AUTHORIZATION_TYPE_DELEGATE\"] = 1] = \"AUTHORIZATION_TYPE_DELEGATE\";\n    /** AUTHORIZATION_TYPE_UNDELEGATE - AUTHORIZATION_TYPE_UNDELEGATE defines an authorization type for Msg/Undelegate */\n    AuthorizationType[AuthorizationType[\"AUTHORIZATION_TYPE_UNDELEGATE\"] = 2] = \"AUTHORIZATION_TYPE_UNDELEGATE\";\n    /** AUTHORIZATION_TYPE_REDELEGATE - AUTHORIZATION_TYPE_REDELEGATE defines an authorization type for Msg/BeginRedelegate */\n    AuthorizationType[AuthorizationType[\"AUTHORIZATION_TYPE_REDELEGATE\"] = 3] = \"AUTHORIZATION_TYPE_REDELEGATE\";\n    AuthorizationType[AuthorizationType[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(AuthorizationType || (AuthorizationType = {}));\nexport function authorizationTypeFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'AUTHORIZATION_TYPE_UNSPECIFIED':\n            return AuthorizationType.AUTHORIZATION_TYPE_UNSPECIFIED;\n        case 1:\n        case 'AUTHORIZATION_TYPE_DELEGATE':\n            return AuthorizationType.AUTHORIZATION_TYPE_DELEGATE;\n        case 2:\n        case 'AUTHORIZATION_TYPE_UNDELEGATE':\n            return AuthorizationType.AUTHORIZATION_TYPE_UNDELEGATE;\n        case 3:\n        case 'AUTHORIZATION_TYPE_REDELEGATE':\n            return AuthorizationType.AUTHORIZATION_TYPE_REDELEGATE;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return AuthorizationType.UNRECOGNIZED;\n    }\n}\nexport function authorizationTypeToJSON(object) {\n    switch (object) {\n        case AuthorizationType.AUTHORIZATION_TYPE_UNSPECIFIED:\n            return 'AUTHORIZATION_TYPE_UNSPECIFIED';\n        case AuthorizationType.AUTHORIZATION_TYPE_DELEGATE:\n            return 'AUTHORIZATION_TYPE_DELEGATE';\n        case AuthorizationType.AUTHORIZATION_TYPE_UNDELEGATE:\n            return 'AUTHORIZATION_TYPE_UNDELEGATE';\n        case AuthorizationType.AUTHORIZATION_TYPE_REDELEGATE:\n            return 'AUTHORIZATION_TYPE_REDELEGATE';\n        default:\n            return 'UNKNOWN';\n    }\n}\nconst baseStakeAuthorization = { authorizationType: 0 };\nexport const StakeAuthorization = {\n    encode(message, writer = Writer.create()) {\n        if (message.maxTokens !== undefined) {\n            Coin.encode(message.maxTokens, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.allowList !== undefined) {\n            StakeAuthorization_Validators.encode(message.allowList, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.denyList !== undefined) {\n            StakeAuthorization_Validators.encode(message.denyList, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.authorizationType !== 0) {\n            writer.uint32(32).int32(message.authorizationType);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseStakeAuthorization };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.maxTokens = Coin.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.allowList = StakeAuthorization_Validators.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.denyList = StakeAuthorization_Validators.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.authorizationType = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseStakeAuthorization };\n        if (object.maxTokens !== undefined && object.maxTokens !== null) {\n            message.maxTokens = Coin.fromJSON(object.maxTokens);\n        }\n        else {\n            message.maxTokens = undefined;\n        }\n        if (object.allowList !== undefined && object.allowList !== null) {\n            message.allowList = StakeAuthorization_Validators.fromJSON(object.allowList);\n        }\n        else {\n            message.allowList = undefined;\n        }\n        if (object.denyList !== undefined && object.denyList !== null) {\n            message.denyList = StakeAuthorization_Validators.fromJSON(object.denyList);\n        }\n        else {\n            message.denyList = undefined;\n        }\n        if (object.authorizationType !== undefined && object.authorizationType !== null) {\n            message.authorizationType = authorizationTypeFromJSON(object.authorizationType);\n        }\n        else {\n            message.authorizationType = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.maxTokens !== undefined && (obj.maxTokens = message.maxTokens ? Coin.toJSON(message.maxTokens) : undefined);\n        message.allowList !== undefined && (obj.allowList = message.allowList ? StakeAuthorization_Validators.toJSON(message.allowList) : undefined);\n        message.denyList !== undefined && (obj.denyList = message.denyList ? StakeAuthorization_Validators.toJSON(message.denyList) : undefined);\n        message.authorizationType !== undefined && (obj.authorizationType = authorizationTypeToJSON(message.authorizationType));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseStakeAuthorization };\n        if (object.maxTokens !== undefined && object.maxTokens !== null) {\n            message.maxTokens = Coin.fromPartial(object.maxTokens);\n        }\n        else {\n            message.maxTokens = undefined;\n        }\n        if (object.allowList !== undefined && object.allowList !== null) {\n            message.allowList = StakeAuthorization_Validators.fromPartial(object.allowList);\n        }\n        else {\n            message.allowList = undefined;\n        }\n        if (object.denyList !== undefined && object.denyList !== null) {\n            message.denyList = StakeAuthorization_Validators.fromPartial(object.denyList);\n        }\n        else {\n            message.denyList = undefined;\n        }\n        if (object.authorizationType !== undefined && object.authorizationType !== null) {\n            message.authorizationType = object.authorizationType;\n        }\n        else {\n            message.authorizationType = 0;\n        }\n        return message;\n    }\n};\nconst baseStakeAuthorization_Validators = { address: '' };\nexport const StakeAuthorization_Validators = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.address) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseStakeAuthorization_Validators };\n        message.address = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseStakeAuthorization_Validators };\n        message.address = [];\n        if (object.address !== undefined && object.address !== null) {\n            for (const e of object.address) {\n                message.address.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.address) {\n            obj.address = message.address.map((e) => e);\n        }\n        else {\n            obj.address = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseStakeAuthorization_Validators };\n        message.address = [];\n        if (object.address !== undefined && object.address !== null) {\n            for (const e of object.address) {\n                message.address.push(e);\n            }\n        }\n        return message;\n    }\n};\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { StakeAuthorization } from \"./module/types/cosmos/staking/v1beta1/authz\";\nimport { StakeAuthorization_Validators } from \"./module/types/cosmos/staking/v1beta1/authz\";\nimport { LastValidatorPower } from \"./module/types/cosmos/staking/v1beta1/genesis\";\nimport { HistoricalInfo } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { CommissionRates } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Commission } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Description } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Validator } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { ValAddresses } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DVPair } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DVPairs } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DVVTriplet } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DVVTriplets } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Delegation } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { UnbondingDelegation } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { UnbondingDelegationEntry } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { RedelegationEntry } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Redelegation } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Params } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DelegationResponse } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { RedelegationEntryResponse } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { RedelegationResponse } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Pool } from \"./module/types/cosmos/staking/v1beta1/staking\";\nexport { StakeAuthorization, StakeAuthorization_Validators, LastValidatorPower, HistoricalInfo, CommissionRates, Commission, Description, Validator, ValAddresses, DVPair, DVPairs, DVVTriplet, DVVTriplets, Delegation, UnbondingDelegation, UnbondingDelegationEntry, RedelegationEntry, Redelegation, Params, DelegationResponse, RedelegationEntryResponse, RedelegationResponse, Pool };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Validators: {},\n        Validator: {},\n        ValidatorDelegations: {},\n        ValidatorUnbondingDelegations: {},\n        Delegation: {},\n        UnbondingDelegation: {},\n        DelegatorDelegations: {},\n        DelegatorUnbondingDelegations: {},\n        Redelegations: {},\n        DelegatorValidators: {},\n        DelegatorValidator: {},\n        HistoricalInfo: {},\n        Pool: {},\n        Params: {},\n        _Structure: {\n            StakeAuthorization: getStructure(StakeAuthorization.fromPartial({})),\n            StakeAuthorization_Validators: getStructure(StakeAuthorization_Validators.fromPartial({})),\n            LastValidatorPower: getStructure(LastValidatorPower.fromPartial({})),\n            HistoricalInfo: getStructure(HistoricalInfo.fromPartial({})),\n            CommissionRates: getStructure(CommissionRates.fromPartial({})),\n            Commission: getStructure(Commission.fromPartial({})),\n            Description: getStructure(Description.fromPartial({})),\n            Validator: getStructure(Validator.fromPartial({})),\n            ValAddresses: getStructure(ValAddresses.fromPartial({})),\n            DVPair: getStructure(DVPair.fromPartial({})),\n            DVPairs: getStructure(DVPairs.fromPartial({})),\n            DVVTriplet: getStructure(DVVTriplet.fromPartial({})),\n            DVVTriplets: getStructure(DVVTriplets.fromPartial({})),\n            Delegation: getStructure(Delegation.fromPartial({})),\n            UnbondingDelegation: getStructure(UnbondingDelegation.fromPartial({})),\n            UnbondingDelegationEntry: getStructure(UnbondingDelegationEntry.fromPartial({})),\n            RedelegationEntry: getStructure(RedelegationEntry.fromPartial({})),\n            Redelegation: getStructure(Redelegation.fromPartial({})),\n            Params: getStructure(Params.fromPartial({})),\n            DelegationResponse: getStructure(DelegationResponse.fromPartial({})),\n            RedelegationEntryResponse: getStructure(RedelegationEntryResponse.fromPartial({})),\n            RedelegationResponse: getStructure(RedelegationResponse.fromPartial({})),\n            Pool: getStructure(Pool.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getValidators: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Validators[JSON.stringify(params)] ?? {};\n        },\n        getValidator: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Validator[JSON.stringify(params)] ?? {};\n        },\n        getValidatorDelegations: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorDelegations[JSON.stringify(params)] ?? {};\n        },\n        getValidatorUnbondingDelegations: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorUnbondingDelegations[JSON.stringify(params)] ?? {};\n        },\n        getDelegation: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Delegation[JSON.stringify(params)] ?? {};\n        },\n        getUnbondingDelegation: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.UnbondingDelegation[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorDelegations: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorDelegations[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorUnbondingDelegations: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorUnbondingDelegations[JSON.stringify(params)] ?? {};\n        },\n        getRedelegations: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Redelegations[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorValidators: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorValidators[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorValidator: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorValidator[JSON.stringify(params)] ?? {};\n        },\n        getHistoricalInfo: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.HistoricalInfo[JSON.stringify(params)] ?? {};\n        },\n        getPool: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Pool[JSON.stringify(params)] ?? {};\n        },\n        getParams: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.staking.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryValidators({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryValidators(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryValidators({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Validators', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidators', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidators']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryValidators', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryValidator({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryValidator(key.validator_addr)).data;\n                commit('QUERY', { query: 'Validator', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidator', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidator']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryValidator', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryValidatorDelegations({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryValidatorDelegations(key.validator_addr, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryValidatorDelegations(key.validator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'ValidatorDelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorDelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorDelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryValidatorDelegations', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryValidatorUnbondingDelegations({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryValidatorUnbondingDelegations(key.validator_addr, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryValidatorUnbondingDelegations(key.validator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'ValidatorUnbondingDelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorUnbondingDelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorUnbondingDelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryValidatorUnbondingDelegations', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegation({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegation(key.validator_addr, key.delegator_addr)).data;\n                commit('QUERY', { query: 'Delegation', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegation', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegation']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegation', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryUnbondingDelegation({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryUnbondingDelegation(key.validator_addr, key.delegator_addr)).data;\n                commit('QUERY', { query: 'UnbondingDelegation', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryUnbondingDelegation', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getUnbondingDelegation']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryUnbondingDelegation', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegatorDelegations({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegatorDelegations(key.delegator_addr, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryDelegatorDelegations(key.delegator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'DelegatorDelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorDelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorDelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegatorDelegations', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegatorUnbondingDelegations({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegatorUnbondingDelegations(key.delegator_addr, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryDelegatorUnbondingDelegations(key.delegator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'DelegatorUnbondingDelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorUnbondingDelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorUnbondingDelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegatorUnbondingDelegations', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryRedelegations({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryRedelegations(key.delegator_addr, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryRedelegations(key.delegator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'Redelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryRedelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getRedelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryRedelegations', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegatorValidators({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegatorValidators(key.delegator_addr, query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryDelegatorValidators(key.delegator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'DelegatorValidators', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorValidators', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorValidators']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegatorValidators', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDelegatorValidator({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDelegatorValidator(key.delegator_addr, key.validator_addr)).data;\n                commit('QUERY', { query: 'DelegatorValidator', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorValidator', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorValidator']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDelegatorValidator', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryHistoricalInfo({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryHistoricalInfo(key.height)).data;\n                commit('QUERY', { query: 'HistoricalInfo', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryHistoricalInfo', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getHistoricalInfo']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryHistoricalInfo', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryPool({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryPool()).data;\n                commit('QUERY', { query: 'Pool', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPool', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPool']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryPool', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgBeginRedelegate({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgBeginRedelegate(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgBeginRedelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgBeginRedelegate:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgUndelegate({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUndelegate(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUndelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUndelegate:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgDelegate({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgDelegate(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgDelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDelegate:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgCreateValidator({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgCreateValidator(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgCreateValidator:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateValidator:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async sendMsgEditValidator({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgEditValidator(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgEditValidator:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgEditValidator:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgBeginRedelegate({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgBeginRedelegate(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgBeginRedelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgBeginRedelegate:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgUndelegate({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgUndelegate(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgUndelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUndelegate:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgDelegate({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgDelegate(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgDelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDelegate:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgCreateValidator({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgCreateValidator(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgCreateValidator:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateValidator:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n        async MsgEditValidator({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgEditValidator(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgEditValidator:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgEditValidator:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/vesting/v1beta1/tx.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgCreateVestingAccount } from \"./types/cosmos/vesting/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.vesting.v1beta1.MsgCreateVestingAccount\", MsgCreateVestingAccount],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgCreateVestingAccount: (data) => ({ typeUrl: \"/cosmos.vesting.v1beta1.MsgCreateVestingAccount\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { BaseVestingAccount } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nimport { ContinuousVestingAccount } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nimport { DelayedVestingAccount } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nimport { Period } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nimport { PeriodicVestingAccount } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nimport { PermanentLockedAccount } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nexport { BaseVestingAccount, ContinuousVestingAccount, DelayedVestingAccount, Period, PeriodicVestingAccount, PermanentLockedAccount };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        _Structure: {\n            BaseVestingAccount: getStructure(BaseVestingAccount.fromPartial({})),\n            ContinuousVestingAccount: getStructure(ContinuousVestingAccount.fromPartial({})),\n            DelayedVestingAccount: getStructure(DelayedVestingAccount.fromPartial({})),\n            Period: getStructure(Period.fromPartial({})),\n            PeriodicVestingAccount: getStructure(PeriodicVestingAccount.fromPartial({})),\n            PermanentLockedAccount: getStructure(PermanentLockedAccount.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: cosmos.vesting.v1beta1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async sendMsgCreateVestingAccount({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgCreateVestingAccount(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgCreateVestingAccount:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateVestingAccount:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgCreateVestingAccount({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgCreateVestingAccount(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgCreateVestingAccount:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateVestingAccount:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title ibc/applications/transfer/v1/genesis.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenomTraces\n         * @summary DenomTraces queries all denomination traces.\n         * @request GET:/ibc/apps/transfer/v1/denom_traces\n         */\n        this.queryDenomTraces = (query, params = {}) => this.request({\n            path: `/ibc/apps/transfer/v1/denom_traces`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenomTrace\n         * @summary DenomTrace queries a denomination trace information.\n         * @request GET:/ibc/apps/transfer/v1/denom_traces/{hash}\n         */\n        this.queryDenomTrace = (hash, params = {}) => this.request({\n            path: `/ibc/apps/transfer/v1/denom_traces/${hash}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries all parameters of the ibc-transfer module.\n         * @request GET:/ibc/apps/transfer/v1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/ibc/apps/transfer/v1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgTransfer } from \"./types/ibc/applications/transfer/v1/tx\";\nconst types = [\n    [\"/ibc.applications.transfer.v1.MsgTransfer\", MsgTransfer],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgTransfer: (data) => ({ typeUrl: \"/ibc.applications.transfer.v1.MsgTransfer\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'ibc.applications.transfer.v1';\nconst baseDenomTrace = { path: '', baseDenom: '' };\nexport const DenomTrace = {\n    encode(message, writer = Writer.create()) {\n        if (message.path !== '') {\n            writer.uint32(10).string(message.path);\n        }\n        if (message.baseDenom !== '') {\n            writer.uint32(18).string(message.baseDenom);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDenomTrace };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.path = reader.string();\n                    break;\n                case 2:\n                    message.baseDenom = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDenomTrace };\n        if (object.path !== undefined && object.path !== null) {\n            message.path = String(object.path);\n        }\n        else {\n            message.path = '';\n        }\n        if (object.baseDenom !== undefined && object.baseDenom !== null) {\n            message.baseDenom = String(object.baseDenom);\n        }\n        else {\n            message.baseDenom = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.path !== undefined && (obj.path = message.path);\n        message.baseDenom !== undefined && (obj.baseDenom = message.baseDenom);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDenomTrace };\n        if (object.path !== undefined && object.path !== null) {\n            message.path = object.path;\n        }\n        else {\n            message.path = '';\n        }\n        if (object.baseDenom !== undefined && object.baseDenom !== null) {\n            message.baseDenom = object.baseDenom;\n        }\n        else {\n            message.baseDenom = '';\n        }\n        return message;\n    }\n};\nconst baseParams = { sendEnabled: false, receiveEnabled: false };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.sendEnabled === true) {\n            writer.uint32(8).bool(message.sendEnabled);\n        }\n        if (message.receiveEnabled === true) {\n            writer.uint32(16).bool(message.receiveEnabled);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sendEnabled = reader.bool();\n                    break;\n                case 2:\n                    message.receiveEnabled = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.sendEnabled !== undefined && object.sendEnabled !== null) {\n            message.sendEnabled = Boolean(object.sendEnabled);\n        }\n        else {\n            message.sendEnabled = false;\n        }\n        if (object.receiveEnabled !== undefined && object.receiveEnabled !== null) {\n            message.receiveEnabled = Boolean(object.receiveEnabled);\n        }\n        else {\n            message.receiveEnabled = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sendEnabled !== undefined && (obj.sendEnabled = message.sendEnabled);\n        message.receiveEnabled !== undefined && (obj.receiveEnabled = message.receiveEnabled);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.sendEnabled !== undefined && object.sendEnabled !== null) {\n            message.sendEnabled = object.sendEnabled;\n        }\n        else {\n            message.sendEnabled = false;\n        }\n        if (object.receiveEnabled !== undefined && object.receiveEnabled !== null) {\n            message.receiveEnabled = object.receiveEnabled;\n        }\n        else {\n            message.receiveEnabled = false;\n        }\n        return message;\n    }\n};\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { DenomTrace } from \"./module/types/ibc/applications/transfer/v1/transfer\";\nimport { Params } from \"./module/types/ibc/applications/transfer/v1/transfer\";\nexport { DenomTrace, Params };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        DenomTrace: {},\n        DenomTraces: {},\n        Params: {},\n        _Structure: {\n            DenomTrace: getStructure(DenomTrace.fromPartial({})),\n            Params: getStructure(Params.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getDenomTrace: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DenomTrace[JSON.stringify(params)] ?? {};\n        },\n        getDenomTraces: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DenomTraces[JSON.stringify(params)] ?? {};\n        },\n        getParams: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: ibc.applications.transfer.v1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryDenomTrace({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDenomTrace(key.hash)).data;\n                commit('QUERY', { query: 'DenomTrace', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenomTrace', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenomTrace']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDenomTrace', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryDenomTraces({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryDenomTraces(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryDenomTraces({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'DenomTraces', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenomTraces', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenomTraces']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryDenomTraces', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgTransfer({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgTransfer(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgTransfer:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTransfer:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgTransfer({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgTransfer(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgTransfer:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTransfer:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title ibc/applications/transfer/v2/packet.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nconst types = [];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'ibc.applications.transfer.v2';\nconst baseFungibleTokenPacketData = { denom: '', amount: '', sender: '', receiver: '' };\nexport const FungibleTokenPacketData = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        if (message.sender !== '') {\n            writer.uint32(26).string(message.sender);\n        }\n        if (message.receiver !== '') {\n            writer.uint32(34).string(message.receiver);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseFungibleTokenPacketData };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                case 3:\n                    message.sender = reader.string();\n                    break;\n                case 4:\n                    message.receiver = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseFungibleTokenPacketData };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = String(object.receiver);\n        }\n        else {\n            message.receiver = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.receiver !== undefined && (obj.receiver = message.receiver);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseFungibleTokenPacketData };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = object.receiver;\n        }\n        else {\n            message.receiver = '';\n        }\n        return message;\n    }\n};\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { FungibleTokenPacketData } from \"./module/types/ibc/applications/transfer/v2/packet\";\nexport { FungibleTokenPacketData };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        _Structure: {\n            FungibleTokenPacketData: getStructure(FungibleTokenPacketData.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: ibc.applications.transfer.v2 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title ethermint/evm/v1/evm.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryAccount\n         * @summary Account queries an Ethereum account.\n         * @request GET:/ethermint/evm/v1/account/{address}\n         */\n        this.queryAccount = (address, params = {}) => this.request({\n            path: `/ethermint/evm/v1/account/${address}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryBalance\n       * @summary Balance queries the balance of a the EVM denomination for a single\n      EthAccount.\n       * @request GET:/ethermint/evm/v1/balances/{address}\n       */\n        this.queryBalance = (address, params = {}) => this.request({\n            path: `/ethermint/evm/v1/balances/${address}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryCode\n         * @summary Code queries the balance of all coins for a single account.\n         * @request GET:/ethermint/evm/v1/codes/{address}\n         */\n        this.queryCode = (address, params = {}) => this.request({\n            path: `/ethermint/evm/v1/codes/${address}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryCosmosAccount\n         * @summary CosmosAccount queries an Ethereum account's Cosmos Address.\n         * @request GET:/ethermint/evm/v1/cosmos_account/{address}\n         */\n        this.queryCosmosAccount = (address, params = {}) => this.request({\n            path: `/ethermint/evm/v1/cosmos_account/${address}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryEstimateGas\n         * @summary EstimateGas implements the `eth_estimateGas` rpc api\n         * @request GET:/ethermint/evm/v1/estimate_gas\n         */\n        this.queryEstimateGas = (query, params = {}) => this.request({\n            path: `/ethermint/evm/v1/estimate_gas`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryEthCall\n         * @summary EthCall implements the `eth_call` rpc api\n         * @request GET:/ethermint/evm/v1/eth_call\n         */\n        this.queryEthCall = (query, params = {}) => this.request({\n            path: `/ethermint/evm/v1/eth_call`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries the parameters of x/evm module.\n         * @request GET:/ethermint/evm/v1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/ethermint/evm/v1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryStorage\n         * @summary Storage queries the balance of all coins for a single account.\n         * @request GET:/ethermint/evm/v1/storage/{address}/{key}\n         */\n        this.queryStorage = (address, key, params = {}) => this.request({\n            path: `/ethermint/evm/v1/storage/${address}/${key}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryTraceTx\n         * @summary TraceTx implements the `debug_traceTransaction` rpc api\n         * @request GET:/ethermint/evm/v1/trace_tx\n         */\n        this.queryTraceTx = (query, params = {}) => this.request({\n            path: `/ethermint/evm/v1/trace_tx`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryValidatorAccount\n       * @summary ValidatorAccount queries an Ethereum account's from a validator consensus\n      Address.\n       * @request GET:/ethermint/evm/v1/validator_account/{consAddress}\n       */\n        this.queryValidatorAccount = (consAddress, params = {}) => this.request({\n            path: `/ethermint/evm/v1/validator_account/${consAddress}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgEthereumTx } from \"./types/ethermint/evm/v1/tx\";\nconst types = [\n    [\"/ethermint.evm.v1.MsgEthereumTx\", MsgEthereumTx],\n];\nexport const MissingWalletError = new Error(\"wallet is required\");\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw MissingWalletError;\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee, memo } = { fee: defaultFee, memo: \"\" }) => client.signAndBroadcast(address, msgs, fee, memo),\n        msgEthereumTx: (data) => ({ typeUrl: \"/ethermint.evm.v1.MsgEthereumTx\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","/* eslint-disable */\nimport { Params, State } from '../../../ethermint/evm/v1/evm';\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'ethermint.evm.v1';\nconst baseGenesisState = {};\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.accounts) {\n            GenesisAccount.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.accounts = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.accounts.push(GenesisAccount.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.accounts = [];\n        if (object.accounts !== undefined && object.accounts !== null) {\n            for (const e of object.accounts) {\n                message.accounts.push(GenesisAccount.fromJSON(e));\n            }\n        }\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.accounts) {\n            obj.accounts = message.accounts.map((e) => (e ? GenesisAccount.toJSON(e) : undefined));\n        }\n        else {\n            obj.accounts = [];\n        }\n        message.params !== undefined && (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.accounts = [];\n        if (object.accounts !== undefined && object.accounts !== null) {\n            for (const e of object.accounts) {\n                message.accounts.push(GenesisAccount.fromPartial(e));\n            }\n        }\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        return message;\n    }\n};\nconst baseGenesisAccount = { address: '', code: '' };\nexport const GenesisAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.code !== '') {\n            writer.uint32(18).string(message.code);\n        }\n        for (const v of message.storage) {\n            State.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisAccount };\n        message.storage = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.code = reader.string();\n                    break;\n                case 3:\n                    message.storage.push(State.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisAccount };\n        message.storage = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.code !== undefined && object.code !== null) {\n            message.code = String(object.code);\n        }\n        else {\n            message.code = '';\n        }\n        if (object.storage !== undefined && object.storage !== null) {\n            for (const e of object.storage) {\n                message.storage.push(State.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.code !== undefined && (obj.code = message.code);\n        if (message.storage) {\n            obj.storage = message.storage.map((e) => (e ? State.toJSON(e) : undefined));\n        }\n        else {\n            obj.storage = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisAccount };\n        message.storage = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.code !== undefined && object.code !== null) {\n            message.code = object.code;\n        }\n        else {\n            message.code = '';\n        }\n        if (object.storage !== undefined && object.storage !== null) {\n            for (const e of object.storage) {\n                message.storage.push(State.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\n","import { txClient, queryClient, MissingWalletError } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { Params } from \"./module/types/ethermint/evm/v1/evm\";\nimport { ChainConfig } from \"./module/types/ethermint/evm/v1/evm\";\nimport { State } from \"./module/types/ethermint/evm/v1/evm\";\nimport { TransactionLogs } from \"./module/types/ethermint/evm/v1/evm\";\nimport { Log } from \"./module/types/ethermint/evm/v1/evm\";\nimport { TxResult } from \"./module/types/ethermint/evm/v1/evm\";\nimport { AccessTuple } from \"./module/types/ethermint/evm/v1/evm\";\nimport { TraceConfig } from \"./module/types/ethermint/evm/v1/evm\";\nimport { GenesisAccount } from \"./module/types/ethermint/evm/v1/genesis\";\nimport { QueryTxLogsRequest } from \"./module/types/ethermint/evm/v1/query\";\nimport { QueryTxLogsResponse } from \"./module/types/ethermint/evm/v1/query\";\nimport { LegacyTx } from \"./module/types/ethermint/evm/v1/tx\";\nimport { AccessListTx } from \"./module/types/ethermint/evm/v1/tx\";\nimport { DynamicFeeTx } from \"./module/types/ethermint/evm/v1/tx\";\nimport { ExtensionOptionsEthereumTx } from \"./module/types/ethermint/evm/v1/tx\";\nexport { Params, ChainConfig, State, TransactionLogs, Log, TxResult, AccessTuple, TraceConfig, GenesisAccount, QueryTxLogsRequest, QueryTxLogsResponse, LegacyTx, AccessListTx, DynamicFeeTx, ExtensionOptionsEthereumTx };\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction mergeResults(value, next_values) {\n    for (let prop of Object.keys(next_values)) {\n        if (Array.isArray(next_values[prop])) {\n            value[prop] = [...value[prop], ...next_values[prop]];\n        }\n        else {\n            value[prop] = next_values[prop];\n        }\n    }\n    return value;\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Account: {},\n        CosmosAccount: {},\n        ValidatorAccount: {},\n        Balance: {},\n        Storage: {},\n        Code: {},\n        Params: {},\n        EthCall: {},\n        EstimateGas: {},\n        TraceTx: {},\n        _Structure: {\n            Params: getStructure(Params.fromPartial({})),\n            ChainConfig: getStructure(ChainConfig.fromPartial({})),\n            State: getStructure(State.fromPartial({})),\n            TransactionLogs: getStructure(TransactionLogs.fromPartial({})),\n            Log: getStructure(Log.fromPartial({})),\n            TxResult: getStructure(TxResult.fromPartial({})),\n            AccessTuple: getStructure(AccessTuple.fromPartial({})),\n            TraceConfig: getStructure(TraceConfig.fromPartial({})),\n            GenesisAccount: getStructure(GenesisAccount.fromPartial({})),\n            QueryTxLogsRequest: getStructure(QueryTxLogsRequest.fromPartial({})),\n            QueryTxLogsResponse: getStructure(QueryTxLogsResponse.fromPartial({})),\n            LegacyTx: getStructure(LegacyTx.fromPartial({})),\n            AccessListTx: getStructure(AccessListTx.fromPartial({})),\n            DynamicFeeTx: getStructure(DynamicFeeTx.fromPartial({})),\n            ExtensionOptionsEthereumTx: getStructure(ExtensionOptionsEthereumTx.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getAccount: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Account[JSON.stringify(params)] ?? {};\n        },\n        getCosmosAccount: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.CosmosAccount[JSON.stringify(params)] ?? {};\n        },\n        getValidatorAccount: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorAccount[JSON.stringify(params)] ?? {};\n        },\n        getBalance: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Balance[JSON.stringify(params)] ?? {};\n        },\n        getStorage: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Storage[JSON.stringify(params)] ?? {};\n        },\n        getCode: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Code[JSON.stringify(params)] ?? {};\n        },\n        getParams: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getEthCall: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.EthCall[JSON.stringify(params)] ?? {};\n        },\n        getEstimateGas: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.EstimateGas[JSON.stringify(params)] ?? {};\n        },\n        getTraceTx: (state) => (params = { params: {} }) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.TraceTx[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('Vuex module: ethermint.evm.v1 initialized!');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach(async (subscription) => {\n                try {\n                    await dispatch(subscription.action, subscription.payload);\n                }\n                catch (e) {\n                    throw new SpVuexError('Subscriptions: ' + e.message);\n                }\n            });\n        },\n        async QueryAccount({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryAccount(key.address)).data;\n                commit('QUERY', { query: 'Account', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryAccount', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getAccount']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryAccount', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryCosmosAccount({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryCosmosAccount(key.address)).data;\n                commit('QUERY', { query: 'CosmosAccount', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryCosmosAccount', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getCosmosAccount']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryCosmosAccount', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryValidatorAccount({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryValidatorAccount(key.cons_address)).data;\n                commit('QUERY', { query: 'ValidatorAccount', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorAccount', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorAccount']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryValidatorAccount', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryBalance({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryBalance(key.address)).data;\n                commit('QUERY', { query: 'Balance', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryBalance', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getBalance']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryBalance', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryStorage({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryStorage(key.address, key.key)).data;\n                commit('QUERY', { query: 'Storage', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryStorage', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getStorage']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryStorage', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryCode({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryCode(key.address)).data;\n                commit('QUERY', { query: 'Code', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryCode', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getCode']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryCode', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryEthCall({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryEthCall(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryEthCall({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'EthCall', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryEthCall', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getEthCall']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryEthCall', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryEstimateGas({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryEstimateGas(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryEstimateGas({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'EstimateGas', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryEstimateGas', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getEstimateGas']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryEstimateGas', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async QueryTraceTx({ commit, rootGetters, getters }, { options: { subscribe, all } = { subscribe: false, all: false }, params: { ...key }, query = null }) {\n            try {\n                const queryClient = await initQueryClient(rootGetters);\n                let value = (await queryClient.queryTraceTx(query)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await queryClient.queryTraceTx({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    value = mergeResults(value, next_values);\n                }\n                commit('QUERY', { query: 'TraceTx', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryTraceTx', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getTraceTx']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                throw new SpVuexError('QueryClient:QueryTraceTx', 'API Node Unavailable. Could not perform query: ' + e.message);\n            }\n        },\n        async sendMsgEthereumTx({ rootGetters }, { value, fee = [], memo = '' }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgEthereumTx(value);\n                const result = await txClient.signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgEthereumTx:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgEthereumTx:Send', 'Could not broadcast Tx: ' + e.message);\n                }\n            }\n        },\n        async MsgEthereumTx({ rootGetters }, { value }) {\n            try {\n                const txClient = await initTxClient(rootGetters);\n                const msg = await txClient.msgEthereumTx(value);\n                return msg;\n            }\n            catch (e) {\n                if (e == MissingWalletError) {\n                    throw new SpVuexError('TxClient:MsgEthereumTx:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgEthereumTx:Create', 'Could not create message: ' + e.message);\n                }\n            }\n        },\n    }\n};\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport ElectronicSignaturesIndustriesAnconProtocolElectronicSignaturesIndustriesAnconprotocolAguaclara from './Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.aguaclara';\nimport ElectronicSignaturesIndustriesAnconProtocolElectronicSignaturesIndustriesAnconprotocolAnconprotocol from './Electronic-Signatures-Industries/ancon-protocol/ElectronicSignaturesIndustries.anconprotocol.anconprotocol';\nimport CosmosCosmosSdkCosmosAuthzV1Beta1 from './cosmos/cosmos-sdk/cosmos.authz.v1beta1';\nimport CosmosCosmosSdkCosmosBankV1Beta1 from './cosmos/cosmos-sdk/cosmos.bank.v1beta1';\nimport CosmosCosmosSdkCosmosCrisisV1Beta1 from './cosmos/cosmos-sdk/cosmos.crisis.v1beta1';\nimport CosmosCosmosSdkCosmosDistributionV1Beta1 from './cosmos/cosmos-sdk/cosmos.distribution.v1beta1';\nimport CosmosCosmosSdkCosmosEvidenceV1Beta1 from './cosmos/cosmos-sdk/cosmos.evidence.v1beta1';\nimport CosmosCosmosSdkCosmosFeegrantV1Beta1 from './cosmos/cosmos-sdk/cosmos.feegrant.v1beta1';\nimport CosmosCosmosSdkCosmosGovV1Beta1 from './cosmos/cosmos-sdk/cosmos.gov.v1beta1';\nimport CosmosCosmosSdkCosmosSlashingV1Beta1 from './cosmos/cosmos-sdk/cosmos.slashing.v1beta1';\nimport CosmosCosmosSdkCosmosStakingV1Beta1 from './cosmos/cosmos-sdk/cosmos.staking.v1beta1';\nimport CosmosCosmosSdkCosmosVestingV1Beta1 from './cosmos/cosmos-sdk/cosmos.vesting.v1beta1';\nimport CosmosIbcGoIbcApplicationsTransferV1 from './cosmos/ibc-go/ibc.applications.transfer.v1';\nimport CosmosIbcGoIbcApplicationsTransferV2 from './cosmos/ibc-go/ibc.applications.transfer.v2';\nimport TharsisEthermintEthermintEvmV1 from './tharsis/ethermint/ethermint.evm.v1';\nexport default {\n    ElectronicSignaturesIndustriesAnconProtocolElectronicSignaturesIndustriesAnconprotocolAguaclara: load(ElectronicSignaturesIndustriesAnconProtocolElectronicSignaturesIndustriesAnconprotocolAguaclara, 'ElectronicSignaturesIndustries.anconprotocol.aguaclara'),\n    ElectronicSignaturesIndustriesAnconProtocolElectronicSignaturesIndustriesAnconprotocolAnconprotocol: load(ElectronicSignaturesIndustriesAnconProtocolElectronicSignaturesIndustriesAnconprotocolAnconprotocol, 'ElectronicSignaturesIndustries.anconprotocol.anconprotocol'),\n    CosmosCosmosSdkCosmosAuthzV1Beta1: load(CosmosCosmosSdkCosmosAuthzV1Beta1, 'cosmos.authz.v1beta1'),\n    CosmosCosmosSdkCosmosBankV1Beta1: load(CosmosCosmosSdkCosmosBankV1Beta1, 'cosmos.bank.v1beta1'),\n    CosmosCosmosSdkCosmosCrisisV1Beta1: load(CosmosCosmosSdkCosmosCrisisV1Beta1, 'cosmos.crisis.v1beta1'),\n    CosmosCosmosSdkCosmosDistributionV1Beta1: load(CosmosCosmosSdkCosmosDistributionV1Beta1, 'cosmos.distribution.v1beta1'),\n    CosmosCosmosSdkCosmosEvidenceV1Beta1: load(CosmosCosmosSdkCosmosEvidenceV1Beta1, 'cosmos.evidence.v1beta1'),\n    CosmosCosmosSdkCosmosFeegrantV1Beta1: load(CosmosCosmosSdkCosmosFeegrantV1Beta1, 'cosmos.feegrant.v1beta1'),\n    CosmosCosmosSdkCosmosGovV1Beta1: load(CosmosCosmosSdkCosmosGovV1Beta1, 'cosmos.gov.v1beta1'),\n    CosmosCosmosSdkCosmosSlashingV1Beta1: load(CosmosCosmosSdkCosmosSlashingV1Beta1, 'cosmos.slashing.v1beta1'),\n    CosmosCosmosSdkCosmosStakingV1Beta1: load(CosmosCosmosSdkCosmosStakingV1Beta1, 'cosmos.staking.v1beta1'),\n    CosmosCosmosSdkCosmosVestingV1Beta1: load(CosmosCosmosSdkCosmosVestingV1Beta1, 'cosmos.vesting.v1beta1'),\n    CosmosIbcGoIbcApplicationsTransferV1: load(CosmosIbcGoIbcApplicationsTransferV1, 'ibc.applications.transfer.v1'),\n    CosmosIbcGoIbcApplicationsTransferV2: load(CosmosIbcGoIbcApplicationsTransferV2, 'ibc.applications.transfer.v2'),\n    TharsisEthermintEthermintEvmV1: load(TharsisEthermintEthermintEvmV1, 'ethermint.evm.v1'),\n};\nfunction load(mod, fullns) {\n    return function init(store) {\n        if (store.hasModule([fullns])) {\n            throw new Error('Duplicate module name detected: ' + fullns);\n        }\n        else {\n            store.registerModule([fullns], mod);\n            store.subscribe((mutation) => {\n                if (mutation.type == 'common/env/INITIALIZE_WS_COMPLETE') {\n                    store.dispatch(fullns + '/init', null, {\n                        root: true\n                    });\n                }\n            });\n        }\n    };\n}\n","import { env, blocks, wallet, transfers, relayers } from '@starport/vuex'\nimport generated from './generated'\nexport default function init(store) {\n\tfor (const moduleInit of Object.values(generated)) {\n\t\tmoduleInit(store)\n\t}\n\ttransfers(store)\n\tblocks(store)\n\tenv(store)\n\twallet(store)\n\trelayers(store)\n}\n","import { createStore } from 'vuex'\nimport init from './config'\n\nconst store = createStore({\n\tstate() {\n\t\treturn {}\n\t},\n\tmutations: {},\n\tactions: {}\n})\ninit(store)\nexport default store\n","<template>\n\t<div>\n\t\t<div class=\"container\">\n\t\t\t<SpWelcome />\n\t\t\t<SpTokenSend :address=\"address\" />\n\t\t\t<SpTransferList :address=\"address\" />\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nexport default {\n\tname: 'Index',\n\tcomputed: {\n\t\taddress() {\n\t\t\treturn this.$store.getters['common/wallet/address']\n\t\t}\n\t}\n}\n</script>\n","import { render } from \"./Index.vue?vue&type=template&id=3e0bb846\"\nimport script from \"./Index.vue?vue&type=script&lang=js\"\nexport * from \"./Index.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/home/runner/work/ancon-protocol/ancon-protocol/vue/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n\t<div>\n\t\t<div class=\"container\">\n\t\t\t<!-- this line is used by starport scaffolding # 4 -->\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nexport default {\n\tname: 'Types'\n}\n</script>\n","import { render } from \"./Types.vue?vue&type=template&id=57fe0881\"\nimport script from \"./Types.vue?vue&type=script&lang=js\"\nexport * from \"./Types.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/home/runner/work/ancon-protocol/ancon-protocol/vue/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n\t<div>\n\t\t<div class=\"container\">\n\t\t\t<SpRelayers />\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nexport default {\n\tname: 'Relayers'\n}\n</script>\n","import { render } from \"./Relayers.vue?vue&type=template&id=13039c6a\"\nimport script from \"./Relayers.vue?vue&type=script&lang=js\"\nexport * from \"./Relayers.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/home/runner/work/ancon-protocol/ancon-protocol/vue/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { createRouter, createWebHistory } from 'vue-router'\nimport Index from '@/views/Index.vue'\nimport Types from '@/views/Types.vue'\nimport Relayers from '@/views/Relayers.vue'\n\nconst routerHistory = createWebHistory()\nconst routes = [\n\t{\n\t\tpath: '/',\n\t\tcomponent: Index\n\t},\n\t{ path: '/types', component: Types },\n\t{ path: '/relayers', component: Relayers }\n]\n\nconst router = createRouter({\n\thistory: routerHistory,\n\troutes\n})\n\nexport default router\n","import { createApp } from 'vue'\nimport App from './App.vue'\nimport store from './store'\nimport router from './router'\nimport vueLib from '@starport/vue'\n\nconst app = createApp(App)\napp.config.globalProperties._depsLoaded = true\napp.use(store).use(router).use(vueLib).mount('#app')\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'tendermint.crypto';\nconst baseProof = { total: 0, index: 0 };\nexport const Proof = {\n    encode(message, writer = Writer.create()) {\n        if (message.total !== 0) {\n            writer.uint32(8).int64(message.total);\n        }\n        if (message.index !== 0) {\n            writer.uint32(16).int64(message.index);\n        }\n        if (message.leafHash.length !== 0) {\n            writer.uint32(26).bytes(message.leafHash);\n        }\n        for (const v of message.aunts) {\n            writer.uint32(34).bytes(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProof };\n        message.aunts = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.index = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.leafHash = reader.bytes();\n                    break;\n                case 4:\n                    message.aunts.push(reader.bytes());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProof };\n        message.aunts = [];\n        if (object.total !== undefined && object.total !== null) {\n            message.total = Number(object.total);\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.leafHash !== undefined && object.leafHash !== null) {\n            message.leafHash = bytesFromBase64(object.leafHash);\n        }\n        if (object.aunts !== undefined && object.aunts !== null) {\n            for (const e of object.aunts) {\n                message.aunts.push(bytesFromBase64(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.total !== undefined && (obj.total = message.total);\n        message.index !== undefined && (obj.index = message.index);\n        message.leafHash !== undefined && (obj.leafHash = base64FromBytes(message.leafHash !== undefined ? message.leafHash : new Uint8Array()));\n        if (message.aunts) {\n            obj.aunts = message.aunts.map((e) => base64FromBytes(e !== undefined ? e : new Uint8Array()));\n        }\n        else {\n            obj.aunts = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProof };\n        message.aunts = [];\n        if (object.total !== undefined && object.total !== null) {\n            message.total = object.total;\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.leafHash !== undefined && object.leafHash !== null) {\n            message.leafHash = object.leafHash;\n        }\n        else {\n            message.leafHash = new Uint8Array();\n        }\n        if (object.aunts !== undefined && object.aunts !== null) {\n            for (const e of object.aunts) {\n                message.aunts.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseValueOp = {};\nexport const ValueOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValueOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValueOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.proof !== undefined && (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValueOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    }\n};\nconst baseDominoOp = { key: '', input: '', output: '' };\nexport const DominoOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.key !== '') {\n            writer.uint32(10).string(message.key);\n        }\n        if (message.input !== '') {\n            writer.uint32(18).string(message.input);\n        }\n        if (message.output !== '') {\n            writer.uint32(26).string(message.output);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDominoOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.input = reader.string();\n                    break;\n                case 3:\n                    message.output = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDominoOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = String(object.key);\n        }\n        else {\n            message.key = '';\n        }\n        if (object.input !== undefined && object.input !== null) {\n            message.input = String(object.input);\n        }\n        else {\n            message.input = '';\n        }\n        if (object.output !== undefined && object.output !== null) {\n            message.output = String(object.output);\n        }\n        else {\n            message.output = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = message.key);\n        message.input !== undefined && (obj.input = message.input);\n        message.output !== undefined && (obj.output = message.output);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDominoOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = '';\n        }\n        if (object.input !== undefined && object.input !== null) {\n            message.input = object.input;\n        }\n        else {\n            message.input = '';\n        }\n        if (object.output !== undefined && object.output !== null) {\n            message.output = object.output;\n        }\n        else {\n            message.output = '';\n        }\n        return message;\n    }\n};\nconst baseProofOp = { type: '' };\nexport const ProofOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== '') {\n            writer.uint32(10).string(message.type);\n        }\n        if (message.key.length !== 0) {\n            writer.uint32(18).bytes(message.key);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(26).bytes(message.data);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProofOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.string();\n                    break;\n                case 2:\n                    message.key = reader.bytes();\n                    break;\n                case 3:\n                    message.data = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProofOp };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = String(object.type);\n        }\n        else {\n            message.type = '';\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = message.type);\n        message.key !== undefined && (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.data !== undefined && (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProofOp };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = '';\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseProofOps = {};\nexport const ProofOps = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.ops) {\n            ProofOp.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProofOps };\n        message.ops = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.ops.push(ProofOp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProofOps };\n        message.ops = [];\n        if (object.ops !== undefined && object.ops !== null) {\n            for (const e of object.ops) {\n                message.ops.push(ProofOp.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.ops) {\n            obj.ops = message.ops.map((e) => (e ? ProofOp.toJSON(e) : undefined));\n        }\n        else {\n            obj.ops = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProofOps };\n        message.ops = [];\n        if (object.ops !== undefined && object.ops !== null) {\n            for (const e of object.ops) {\n                message.ops.push(ProofOp.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Params, ValidatorSigningInfo } from '../../../cosmos/slashing/v1beta1/slashing';\nexport const protobufPackage = 'cosmos.slashing.v1beta1';\nconst baseGenesisState = {};\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.signingInfos) {\n            SigningInfo.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.missedBlocks) {\n            ValidatorMissedBlocks.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.signingInfos = [];\n        message.missedBlocks = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.signingInfos.push(SigningInfo.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.missedBlocks.push(ValidatorMissedBlocks.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.signingInfos = [];\n        message.missedBlocks = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.signingInfos !== undefined && object.signingInfos !== null) {\n            for (const e of object.signingInfos) {\n                message.signingInfos.push(SigningInfo.fromJSON(e));\n            }\n        }\n        if (object.missedBlocks !== undefined && object.missedBlocks !== null) {\n            for (const e of object.missedBlocks) {\n                message.missedBlocks.push(ValidatorMissedBlocks.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.params !== undefined && (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        if (message.signingInfos) {\n            obj.signingInfos = message.signingInfos.map((e) => (e ? SigningInfo.toJSON(e) : undefined));\n        }\n        else {\n            obj.signingInfos = [];\n        }\n        if (message.missedBlocks) {\n            obj.missedBlocks = message.missedBlocks.map((e) => (e ? ValidatorMissedBlocks.toJSON(e) : undefined));\n        }\n        else {\n            obj.missedBlocks = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.signingInfos = [];\n        message.missedBlocks = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.signingInfos !== undefined && object.signingInfos !== null) {\n            for (const e of object.signingInfos) {\n                message.signingInfos.push(SigningInfo.fromPartial(e));\n            }\n        }\n        if (object.missedBlocks !== undefined && object.missedBlocks !== null) {\n            for (const e of object.missedBlocks) {\n                message.missedBlocks.push(ValidatorMissedBlocks.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseSigningInfo = { address: '' };\nexport const SigningInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.validatorSigningInfo !== undefined) {\n            ValidatorSigningInfo.encode(message.validatorSigningInfo, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSigningInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.validatorSigningInfo = ValidatorSigningInfo.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSigningInfo };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.validatorSigningInfo !== undefined && object.validatorSigningInfo !== null) {\n            message.validatorSigningInfo = ValidatorSigningInfo.fromJSON(object.validatorSigningInfo);\n        }\n        else {\n            message.validatorSigningInfo = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.validatorSigningInfo !== undefined &&\n            (obj.validatorSigningInfo = message.validatorSigningInfo ? ValidatorSigningInfo.toJSON(message.validatorSigningInfo) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSigningInfo };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.validatorSigningInfo !== undefined && object.validatorSigningInfo !== null) {\n            message.validatorSigningInfo = ValidatorSigningInfo.fromPartial(object.validatorSigningInfo);\n        }\n        else {\n            message.validatorSigningInfo = undefined;\n        }\n        return message;\n    }\n};\nconst baseValidatorMissedBlocks = { address: '' };\nexport const ValidatorMissedBlocks = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.missedBlocks) {\n            MissedBlock.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorMissedBlocks };\n        message.missedBlocks = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.missedBlocks.push(MissedBlock.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorMissedBlocks };\n        message.missedBlocks = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.missedBlocks !== undefined && object.missedBlocks !== null) {\n            for (const e of object.missedBlocks) {\n                message.missedBlocks.push(MissedBlock.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.missedBlocks) {\n            obj.missedBlocks = message.missedBlocks.map((e) => (e ? MissedBlock.toJSON(e) : undefined));\n        }\n        else {\n            obj.missedBlocks = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorMissedBlocks };\n        message.missedBlocks = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.missedBlocks !== undefined && object.missedBlocks !== null) {\n            for (const e of object.missedBlocks) {\n                message.missedBlocks.push(MissedBlock.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseMissedBlock = { index: 0, missed: false };\nexport const MissedBlock = {\n    encode(message, writer = Writer.create()) {\n        if (message.index !== 0) {\n            writer.uint32(8).int64(message.index);\n        }\n        if (message.missed === true) {\n            writer.uint32(16).bool(message.missed);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMissedBlock };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.index = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.missed = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMissedBlock };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.missed !== undefined && object.missed !== null) {\n            message.missed = Boolean(object.missed);\n        }\n        else {\n            message.missed = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.index !== undefined && (obj.index = message.index);\n        message.missed !== undefined && (obj.missed = message.missed);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMissedBlock };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.missed !== undefined && object.missed !== null) {\n            message.missed = object.missed;\n        }\n        else {\n            message.missed = false;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.base.query.v1beta1';\nconst basePageRequest = { offset: 0, limit: 0, countTotal: false, reverse: false };\nexport const PageRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.offset !== 0) {\n            writer.uint32(16).uint64(message.offset);\n        }\n        if (message.limit !== 0) {\n            writer.uint32(24).uint64(message.limit);\n        }\n        if (message.countTotal === true) {\n            writer.uint32(32).bool(message.countTotal);\n        }\n        if (message.reverse === true) {\n            writer.uint32(40).bool(message.reverse);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePageRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.offset = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.limit = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.countTotal = reader.bool();\n                    break;\n                case 5:\n                    message.reverse = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePageRequest };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.offset !== undefined && object.offset !== null) {\n            message.offset = Number(object.offset);\n        }\n        else {\n            message.offset = 0;\n        }\n        if (object.limit !== undefined && object.limit !== null) {\n            message.limit = Number(object.limit);\n        }\n        else {\n            message.limit = 0;\n        }\n        if (object.countTotal !== undefined && object.countTotal !== null) {\n            message.countTotal = Boolean(object.countTotal);\n        }\n        else {\n            message.countTotal = false;\n        }\n        if (object.reverse !== undefined && object.reverse !== null) {\n            message.reverse = Boolean(object.reverse);\n        }\n        else {\n            message.reverse = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.offset !== undefined && (obj.offset = message.offset);\n        message.limit !== undefined && (obj.limit = message.limit);\n        message.countTotal !== undefined && (obj.countTotal = message.countTotal);\n        message.reverse !== undefined && (obj.reverse = message.reverse);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePageRequest };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.offset !== undefined && object.offset !== null) {\n            message.offset = object.offset;\n        }\n        else {\n            message.offset = 0;\n        }\n        if (object.limit !== undefined && object.limit !== null) {\n            message.limit = object.limit;\n        }\n        else {\n            message.limit = 0;\n        }\n        if (object.countTotal !== undefined && object.countTotal !== null) {\n            message.countTotal = object.countTotal;\n        }\n        else {\n            message.countTotal = false;\n        }\n        if (object.reverse !== undefined && object.reverse !== null) {\n            message.reverse = object.reverse;\n        }\n        else {\n            message.reverse = false;\n        }\n        return message;\n    }\n};\nconst basePageResponse = { total: 0 };\nexport const PageResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.nextKey.length !== 0) {\n            writer.uint32(10).bytes(message.nextKey);\n        }\n        if (message.total !== 0) {\n            writer.uint32(16).uint64(message.total);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePageResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.nextKey = reader.bytes();\n                    break;\n                case 2:\n                    message.total = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePageResponse };\n        if (object.nextKey !== undefined && object.nextKey !== null) {\n            message.nextKey = bytesFromBase64(object.nextKey);\n        }\n        if (object.total !== undefined && object.total !== null) {\n            message.total = Number(object.total);\n        }\n        else {\n            message.total = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.nextKey !== undefined && (obj.nextKey = base64FromBytes(message.nextKey !== undefined ? message.nextKey : new Uint8Array()));\n        message.total !== undefined && (obj.total = message.total);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePageResponse };\n        if (object.nextKey !== undefined && object.nextKey !== null) {\n            message.nextKey = object.nextKey;\n        }\n        else {\n            message.nextKey = new Uint8Array();\n        }\n        if (object.total !== undefined && object.total !== null) {\n            message.total = object.total;\n        }\n        else {\n            message.total = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../node_modules/vue-loader-v16/dist/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--1-0!../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./App.vue?vue&type=style&index=0&id=a451c746&lang=css\"","/* eslint-disable */\nimport { Reader, util, configure, Writer } from 'protobufjs/minimal';\nimport * as Long from 'long';\nimport { PageRequest, PageResponse } from '../../../cosmos/base/query/v1beta1/pagination';\nimport { Log, Params, TraceConfig } from '../../../ethermint/evm/v1/evm';\nimport { MsgEthereumTx, MsgEthereumTxResponse } from '../../../ethermint/evm/v1/tx';\nexport const protobufPackage = 'ethermint.evm.v1';\nconst baseQueryAccountRequest = { address: '' };\nexport const QueryAccountRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryAccountRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryAccountRequest };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryAccountRequest };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        return message;\n    }\n};\nconst baseQueryAccountResponse = { balance: '', codeHash: '', nonce: 0 };\nexport const QueryAccountResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.balance !== '') {\n            writer.uint32(10).string(message.balance);\n        }\n        if (message.codeHash !== '') {\n            writer.uint32(18).string(message.codeHash);\n        }\n        if (message.nonce !== 0) {\n            writer.uint32(24).uint64(message.nonce);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryAccountResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.balance = reader.string();\n                    break;\n                case 2:\n                    message.codeHash = reader.string();\n                    break;\n                case 3:\n                    message.nonce = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryAccountResponse };\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = String(object.balance);\n        }\n        else {\n            message.balance = '';\n        }\n        if (object.codeHash !== undefined && object.codeHash !== null) {\n            message.codeHash = String(object.codeHash);\n        }\n        else {\n            message.codeHash = '';\n        }\n        if (object.nonce !== undefined && object.nonce !== null) {\n            message.nonce = Number(object.nonce);\n        }\n        else {\n            message.nonce = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.balance !== undefined && (obj.balance = message.balance);\n        message.codeHash !== undefined && (obj.codeHash = message.codeHash);\n        message.nonce !== undefined && (obj.nonce = message.nonce);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryAccountResponse };\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = object.balance;\n        }\n        else {\n            message.balance = '';\n        }\n        if (object.codeHash !== undefined && object.codeHash !== null) {\n            message.codeHash = object.codeHash;\n        }\n        else {\n            message.codeHash = '';\n        }\n        if (object.nonce !== undefined && object.nonce !== null) {\n            message.nonce = object.nonce;\n        }\n        else {\n            message.nonce = 0;\n        }\n        return message;\n    }\n};\nconst baseQueryCosmosAccountRequest = { address: '' };\nexport const QueryCosmosAccountRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryCosmosAccountRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryCosmosAccountRequest };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryCosmosAccountRequest };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        return message;\n    }\n};\nconst baseQueryCosmosAccountResponse = { cosmosAddress: '', sequence: 0, accountNumber: 0 };\nexport const QueryCosmosAccountResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.cosmosAddress !== '') {\n            writer.uint32(10).string(message.cosmosAddress);\n        }\n        if (message.sequence !== 0) {\n            writer.uint32(16).uint64(message.sequence);\n        }\n        if (message.accountNumber !== 0) {\n            writer.uint32(24).uint64(message.accountNumber);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryCosmosAccountResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.cosmosAddress = reader.string();\n                    break;\n                case 2:\n                    message.sequence = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.accountNumber = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryCosmosAccountResponse };\n        if (object.cosmosAddress !== undefined && object.cosmosAddress !== null) {\n            message.cosmosAddress = String(object.cosmosAddress);\n        }\n        else {\n            message.cosmosAddress = '';\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = Number(object.sequence);\n        }\n        else {\n            message.sequence = 0;\n        }\n        if (object.accountNumber !== undefined && object.accountNumber !== null) {\n            message.accountNumber = Number(object.accountNumber);\n        }\n        else {\n            message.accountNumber = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.cosmosAddress !== undefined && (obj.cosmosAddress = message.cosmosAddress);\n        message.sequence !== undefined && (obj.sequence = message.sequence);\n        message.accountNumber !== undefined && (obj.accountNumber = message.accountNumber);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryCosmosAccountResponse };\n        if (object.cosmosAddress !== undefined && object.cosmosAddress !== null) {\n            message.cosmosAddress = object.cosmosAddress;\n        }\n        else {\n            message.cosmosAddress = '';\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = object.sequence;\n        }\n        else {\n            message.sequence = 0;\n        }\n        if (object.accountNumber !== undefined && object.accountNumber !== null) {\n            message.accountNumber = object.accountNumber;\n        }\n        else {\n            message.accountNumber = 0;\n        }\n        return message;\n    }\n};\nconst baseQueryValidatorAccountRequest = { consAddress: '' };\nexport const QueryValidatorAccountRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.consAddress !== '') {\n            writer.uint32(10).string(message.consAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryValidatorAccountRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.consAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryValidatorAccountRequest };\n        if (object.consAddress !== undefined && object.consAddress !== null) {\n            message.consAddress = String(object.consAddress);\n        }\n        else {\n            message.consAddress = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.consAddress !== undefined && (obj.consAddress = message.consAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryValidatorAccountRequest };\n        if (object.consAddress !== undefined && object.consAddress !== null) {\n            message.consAddress = object.consAddress;\n        }\n        else {\n            message.consAddress = '';\n        }\n        return message;\n    }\n};\nconst baseQueryValidatorAccountResponse = { accountAddress: '', sequence: 0, accountNumber: 0 };\nexport const QueryValidatorAccountResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.accountAddress !== '') {\n            writer.uint32(10).string(message.accountAddress);\n        }\n        if (message.sequence !== 0) {\n            writer.uint32(16).uint64(message.sequence);\n        }\n        if (message.accountNumber !== 0) {\n            writer.uint32(24).uint64(message.accountNumber);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryValidatorAccountResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.accountAddress = reader.string();\n                    break;\n                case 2:\n                    message.sequence = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.accountNumber = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryValidatorAccountResponse };\n        if (object.accountAddress !== undefined && object.accountAddress !== null) {\n            message.accountAddress = String(object.accountAddress);\n        }\n        else {\n            message.accountAddress = '';\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = Number(object.sequence);\n        }\n        else {\n            message.sequence = 0;\n        }\n        if (object.accountNumber !== undefined && object.accountNumber !== null) {\n            message.accountNumber = Number(object.accountNumber);\n        }\n        else {\n            message.accountNumber = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.accountAddress !== undefined && (obj.accountAddress = message.accountAddress);\n        message.sequence !== undefined && (obj.sequence = message.sequence);\n        message.accountNumber !== undefined && (obj.accountNumber = message.accountNumber);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryValidatorAccountResponse };\n        if (object.accountAddress !== undefined && object.accountAddress !== null) {\n            message.accountAddress = object.accountAddress;\n        }\n        else {\n            message.accountAddress = '';\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = object.sequence;\n        }\n        else {\n            message.sequence = 0;\n        }\n        if (object.accountNumber !== undefined && object.accountNumber !== null) {\n            message.accountNumber = object.accountNumber;\n        }\n        else {\n            message.accountNumber = 0;\n        }\n        return message;\n    }\n};\nconst baseQueryBalanceRequest = { address: '' };\nexport const QueryBalanceRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryBalanceRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryBalanceRequest };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryBalanceRequest };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        return message;\n    }\n};\nconst baseQueryBalanceResponse = { balance: '' };\nexport const QueryBalanceResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.balance !== '') {\n            writer.uint32(10).string(message.balance);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryBalanceResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.balance = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryBalanceResponse };\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = String(object.balance);\n        }\n        else {\n            message.balance = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.balance !== undefined && (obj.balance = message.balance);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryBalanceResponse };\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = object.balance;\n        }\n        else {\n            message.balance = '';\n        }\n        return message;\n    }\n};\nconst baseQueryStorageRequest = { address: '', key: '' };\nexport const QueryStorageRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.key !== '') {\n            writer.uint32(18).string(message.key);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryStorageRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.key = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryStorageRequest };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = String(object.key);\n        }\n        else {\n            message.key = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.key !== undefined && (obj.key = message.key);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryStorageRequest };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = '';\n        }\n        return message;\n    }\n};\nconst baseQueryStorageResponse = { value: '' };\nexport const QueryStorageResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.value !== '') {\n            writer.uint32(10).string(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryStorageResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.value = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryStorageResponse };\n        if (object.value !== undefined && object.value !== null) {\n            message.value = String(object.value);\n        }\n        else {\n            message.value = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.value !== undefined && (obj.value = message.value);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryStorageResponse };\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = '';\n        }\n        return message;\n    }\n};\nconst baseQueryCodeRequest = { address: '' };\nexport const QueryCodeRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryCodeRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryCodeRequest };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryCodeRequest };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        return message;\n    }\n};\nconst baseQueryCodeResponse = {};\nexport const QueryCodeResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.code.length !== 0) {\n            writer.uint32(10).bytes(message.code);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryCodeResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.code = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryCodeResponse };\n        if (object.code !== undefined && object.code !== null) {\n            message.code = bytesFromBase64(object.code);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.code !== undefined && (obj.code = base64FromBytes(message.code !== undefined ? message.code : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryCodeResponse };\n        if (object.code !== undefined && object.code !== null) {\n            message.code = object.code;\n        }\n        else {\n            message.code = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseQueryTxLogsRequest = { hash: '' };\nexport const QueryTxLogsRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash !== '') {\n            writer.uint32(10).string(message.hash);\n        }\n        if (message.pagination !== undefined) {\n            PageRequest.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryTxLogsRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.string();\n                    break;\n                case 2:\n                    message.pagination = PageRequest.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryTxLogsRequest };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = String(object.hash);\n        }\n        else {\n            message.hash = '';\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageRequest.fromJSON(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = message.hash);\n        message.pagination !== undefined && (obj.pagination = message.pagination ? PageRequest.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryTxLogsRequest };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = '';\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageRequest.fromPartial(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    }\n};\nconst baseQueryTxLogsResponse = {};\nexport const QueryTxLogsResponse = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.logs) {\n            Log.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.pagination !== undefined) {\n            PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryTxLogsResponse };\n        message.logs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.logs.push(Log.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.pagination = PageResponse.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryTxLogsResponse };\n        message.logs = [];\n        if (object.logs !== undefined && object.logs !== null) {\n            for (const e of object.logs) {\n                message.logs.push(Log.fromJSON(e));\n            }\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageResponse.fromJSON(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.logs) {\n            obj.logs = message.logs.map((e) => (e ? Log.toJSON(e) : undefined));\n        }\n        else {\n            obj.logs = [];\n        }\n        message.pagination !== undefined && (obj.pagination = message.pagination ? PageResponse.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryTxLogsResponse };\n        message.logs = [];\n        if (object.logs !== undefined && object.logs !== null) {\n            for (const e of object.logs) {\n                message.logs.push(Log.fromPartial(e));\n            }\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageResponse.fromPartial(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    }\n};\nconst baseQueryParamsRequest = {};\nexport const QueryParamsRequest = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryParamsRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseQueryParamsRequest };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseQueryParamsRequest };\n        return message;\n    }\n};\nconst baseQueryParamsResponse = {};\nexport const QueryParamsResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryParamsResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryParamsResponse };\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.params !== undefined && (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryParamsResponse };\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        return message;\n    }\n};\nconst baseEthCallRequest = { gasCap: 0 };\nexport const EthCallRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.args.length !== 0) {\n            writer.uint32(10).bytes(message.args);\n        }\n        if (message.gasCap !== 0) {\n            writer.uint32(16).uint64(message.gasCap);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEthCallRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.args = reader.bytes();\n                    break;\n                case 2:\n                    message.gasCap = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEthCallRequest };\n        if (object.args !== undefined && object.args !== null) {\n            message.args = bytesFromBase64(object.args);\n        }\n        if (object.gasCap !== undefined && object.gasCap !== null) {\n            message.gasCap = Number(object.gasCap);\n        }\n        else {\n            message.gasCap = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.args !== undefined && (obj.args = base64FromBytes(message.args !== undefined ? message.args : new Uint8Array()));\n        message.gasCap !== undefined && (obj.gasCap = message.gasCap);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEthCallRequest };\n        if (object.args !== undefined && object.args !== null) {\n            message.args = object.args;\n        }\n        else {\n            message.args = new Uint8Array();\n        }\n        if (object.gasCap !== undefined && object.gasCap !== null) {\n            message.gasCap = object.gasCap;\n        }\n        else {\n            message.gasCap = 0;\n        }\n        return message;\n    }\n};\nconst baseEstimateGasResponse = { gas: 0 };\nexport const EstimateGasResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.gas !== 0) {\n            writer.uint32(8).uint64(message.gas);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEstimateGasResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.gas = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEstimateGasResponse };\n        if (object.gas !== undefined && object.gas !== null) {\n            message.gas = Number(object.gas);\n        }\n        else {\n            message.gas = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.gas !== undefined && (obj.gas = message.gas);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEstimateGasResponse };\n        if (object.gas !== undefined && object.gas !== null) {\n            message.gas = object.gas;\n        }\n        else {\n            message.gas = 0;\n        }\n        return message;\n    }\n};\nconst baseQueryTraceTxRequest = { txIndex: 0 };\nexport const QueryTraceTxRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.msg !== undefined) {\n            MsgEthereumTx.encode(message.msg, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.txIndex !== 0) {\n            writer.uint32(16).uint64(message.txIndex);\n        }\n        if (message.traceConfig !== undefined) {\n            TraceConfig.encode(message.traceConfig, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryTraceTxRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.msg = MsgEthereumTx.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.txIndex = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.traceConfig = TraceConfig.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryTraceTxRequest };\n        if (object.msg !== undefined && object.msg !== null) {\n            message.msg = MsgEthereumTx.fromJSON(object.msg);\n        }\n        else {\n            message.msg = undefined;\n        }\n        if (object.txIndex !== undefined && object.txIndex !== null) {\n            message.txIndex = Number(object.txIndex);\n        }\n        else {\n            message.txIndex = 0;\n        }\n        if (object.traceConfig !== undefined && object.traceConfig !== null) {\n            message.traceConfig = TraceConfig.fromJSON(object.traceConfig);\n        }\n        else {\n            message.traceConfig = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.msg !== undefined && (obj.msg = message.msg ? MsgEthereumTx.toJSON(message.msg) : undefined);\n        message.txIndex !== undefined && (obj.txIndex = message.txIndex);\n        message.traceConfig !== undefined && (obj.traceConfig = message.traceConfig ? TraceConfig.toJSON(message.traceConfig) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryTraceTxRequest };\n        if (object.msg !== undefined && object.msg !== null) {\n            message.msg = MsgEthereumTx.fromPartial(object.msg);\n        }\n        else {\n            message.msg = undefined;\n        }\n        if (object.txIndex !== undefined && object.txIndex !== null) {\n            message.txIndex = object.txIndex;\n        }\n        else {\n            message.txIndex = 0;\n        }\n        if (object.traceConfig !== undefined && object.traceConfig !== null) {\n            message.traceConfig = TraceConfig.fromPartial(object.traceConfig);\n        }\n        else {\n            message.traceConfig = undefined;\n        }\n        return message;\n    }\n};\nconst baseQueryTraceTxResponse = {};\nexport const QueryTraceTxResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.data.length !== 0) {\n            writer.uint32(10).bytes(message.data);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryTraceTxResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.data = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryTraceTxResponse };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.data !== undefined && (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryTraceTxResponse };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        return message;\n    }\n};\nexport class QueryClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    Account(request) {\n        const data = QueryAccountRequest.encode(request).finish();\n        const promise = this.rpc.request('ethermint.evm.v1.Query', 'Account', data);\n        return promise.then((data) => QueryAccountResponse.decode(new Reader(data)));\n    }\n    CosmosAccount(request) {\n        const data = QueryCosmosAccountRequest.encode(request).finish();\n        const promise = this.rpc.request('ethermint.evm.v1.Query', 'CosmosAccount', data);\n        return promise.then((data) => QueryCosmosAccountResponse.decode(new Reader(data)));\n    }\n    ValidatorAccount(request) {\n        const data = QueryValidatorAccountRequest.encode(request).finish();\n        const promise = this.rpc.request('ethermint.evm.v1.Query', 'ValidatorAccount', data);\n        return promise.then((data) => QueryValidatorAccountResponse.decode(new Reader(data)));\n    }\n    Balance(request) {\n        const data = QueryBalanceRequest.encode(request).finish();\n        const promise = this.rpc.request('ethermint.evm.v1.Query', 'Balance', data);\n        return promise.then((data) => QueryBalanceResponse.decode(new Reader(data)));\n    }\n    Storage(request) {\n        const data = QueryStorageRequest.encode(request).finish();\n        const promise = this.rpc.request('ethermint.evm.v1.Query', 'Storage', data);\n        return promise.then((data) => QueryStorageResponse.decode(new Reader(data)));\n    }\n    Code(request) {\n        const data = QueryCodeRequest.encode(request).finish();\n        const promise = this.rpc.request('ethermint.evm.v1.Query', 'Code', data);\n        return promise.then((data) => QueryCodeResponse.decode(new Reader(data)));\n    }\n    Params(request) {\n        const data = QueryParamsRequest.encode(request).finish();\n        const promise = this.rpc.request('ethermint.evm.v1.Query', 'Params', data);\n        return promise.then((data) => QueryParamsResponse.decode(new Reader(data)));\n    }\n    EthCall(request) {\n        const data = EthCallRequest.encode(request).finish();\n        const promise = this.rpc.request('ethermint.evm.v1.Query', 'EthCall', data);\n        return promise.then((data) => MsgEthereumTxResponse.decode(new Reader(data)));\n    }\n    EstimateGas(request) {\n        const data = EthCallRequest.encode(request).finish();\n        const promise = this.rpc.request('ethermint.evm.v1.Query', 'EstimateGas', data);\n        return promise.then((data) => EstimateGasResponse.decode(new Reader(data)));\n    }\n    TraceTx(request) {\n        const data = QueryTraceTxRequest.encode(request).finish();\n        const promise = this.rpc.request('ethermint.evm.v1.Query', 'TraceTx', data);\n        return promise.then((data) => QueryTraceTxResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from 'protobufjs/minimal';\nimport * as Long from 'long';\nimport { Coin } from '../../../../cosmos/base/v1beta1/coin';\nimport { Height } from '../../../../ibc/core/client/v1/client';\nexport const protobufPackage = 'ibc.applications.transfer.v1';\nconst baseMsgTransfer = { sourcePort: '', sourceChannel: '', sender: '', receiver: '', timeoutTimestamp: 0 };\nexport const MsgTransfer = {\n    encode(message, writer = Writer.create()) {\n        if (message.sourcePort !== '') {\n            writer.uint32(10).string(message.sourcePort);\n        }\n        if (message.sourceChannel !== '') {\n            writer.uint32(18).string(message.sourceChannel);\n        }\n        if (message.token !== undefined) {\n            Coin.encode(message.token, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.sender !== '') {\n            writer.uint32(34).string(message.sender);\n        }\n        if (message.receiver !== '') {\n            writer.uint32(42).string(message.receiver);\n        }\n        if (message.timeoutHeight !== undefined) {\n            Height.encode(message.timeoutHeight, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.timeoutTimestamp !== 0) {\n            writer.uint32(56).uint64(message.timeoutTimestamp);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTransfer };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sourcePort = reader.string();\n                    break;\n                case 2:\n                    message.sourceChannel = reader.string();\n                    break;\n                case 3:\n                    message.token = Coin.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.sender = reader.string();\n                    break;\n                case 5:\n                    message.receiver = reader.string();\n                    break;\n                case 6:\n                    message.timeoutHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.timeoutTimestamp = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgTransfer };\n        if (object.sourcePort !== undefined && object.sourcePort !== null) {\n            message.sourcePort = String(object.sourcePort);\n        }\n        else {\n            message.sourcePort = '';\n        }\n        if (object.sourceChannel !== undefined && object.sourceChannel !== null) {\n            message.sourceChannel = String(object.sourceChannel);\n        }\n        else {\n            message.sourceChannel = '';\n        }\n        if (object.token !== undefined && object.token !== null) {\n            message.token = Coin.fromJSON(object.token);\n        }\n        else {\n            message.token = undefined;\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = String(object.receiver);\n        }\n        else {\n            message.receiver = '';\n        }\n        if (object.timeoutHeight !== undefined && object.timeoutHeight !== null) {\n            message.timeoutHeight = Height.fromJSON(object.timeoutHeight);\n        }\n        else {\n            message.timeoutHeight = undefined;\n        }\n        if (object.timeoutTimestamp !== undefined && object.timeoutTimestamp !== null) {\n            message.timeoutTimestamp = Number(object.timeoutTimestamp);\n        }\n        else {\n            message.timeoutTimestamp = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sourcePort !== undefined && (obj.sourcePort = message.sourcePort);\n        message.sourceChannel !== undefined && (obj.sourceChannel = message.sourceChannel);\n        message.token !== undefined && (obj.token = message.token ? Coin.toJSON(message.token) : undefined);\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.receiver !== undefined && (obj.receiver = message.receiver);\n        message.timeoutHeight !== undefined && (obj.timeoutHeight = message.timeoutHeight ? Height.toJSON(message.timeoutHeight) : undefined);\n        message.timeoutTimestamp !== undefined && (obj.timeoutTimestamp = message.timeoutTimestamp);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgTransfer };\n        if (object.sourcePort !== undefined && object.sourcePort !== null) {\n            message.sourcePort = object.sourcePort;\n        }\n        else {\n            message.sourcePort = '';\n        }\n        if (object.sourceChannel !== undefined && object.sourceChannel !== null) {\n            message.sourceChannel = object.sourceChannel;\n        }\n        else {\n            message.sourceChannel = '';\n        }\n        if (object.token !== undefined && object.token !== null) {\n            message.token = Coin.fromPartial(object.token);\n        }\n        else {\n            message.token = undefined;\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = '';\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = object.receiver;\n        }\n        else {\n            message.receiver = '';\n        }\n        if (object.timeoutHeight !== undefined && object.timeoutHeight !== null) {\n            message.timeoutHeight = Height.fromPartial(object.timeoutHeight);\n        }\n        else {\n            message.timeoutHeight = undefined;\n        }\n        if (object.timeoutTimestamp !== undefined && object.timeoutTimestamp !== null) {\n            message.timeoutTimestamp = object.timeoutTimestamp;\n        }\n        else {\n            message.timeoutTimestamp = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgTransferResponse = {};\nexport const MsgTransferResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTransferResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgTransferResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgTransferResponse };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    Transfer(request) {\n        const data = MsgTransfer.encode(request).finish();\n        const promise = this.rpc.request('ibc.applications.transfer.v1.Msg', 'Transfer', data);\n        return promise.then((data) => MsgTransferResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { DecCoin, Coin } from '../../../cosmos/base/v1beta1/coin';\nexport const protobufPackage = 'cosmos.distribution.v1beta1';\nconst baseParams = { communityTax: '', baseProposerReward: '', bonusProposerReward: '', withdrawAddrEnabled: false };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.communityTax !== '') {\n            writer.uint32(10).string(message.communityTax);\n        }\n        if (message.baseProposerReward !== '') {\n            writer.uint32(18).string(message.baseProposerReward);\n        }\n        if (message.bonusProposerReward !== '') {\n            writer.uint32(26).string(message.bonusProposerReward);\n        }\n        if (message.withdrawAddrEnabled === true) {\n            writer.uint32(32).bool(message.withdrawAddrEnabled);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.communityTax = reader.string();\n                    break;\n                case 2:\n                    message.baseProposerReward = reader.string();\n                    break;\n                case 3:\n                    message.bonusProposerReward = reader.string();\n                    break;\n                case 4:\n                    message.withdrawAddrEnabled = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.communityTax !== undefined && object.communityTax !== null) {\n            message.communityTax = String(object.communityTax);\n        }\n        else {\n            message.communityTax = '';\n        }\n        if (object.baseProposerReward !== undefined && object.baseProposerReward !== null) {\n            message.baseProposerReward = String(object.baseProposerReward);\n        }\n        else {\n            message.baseProposerReward = '';\n        }\n        if (object.bonusProposerReward !== undefined && object.bonusProposerReward !== null) {\n            message.bonusProposerReward = String(object.bonusProposerReward);\n        }\n        else {\n            message.bonusProposerReward = '';\n        }\n        if (object.withdrawAddrEnabled !== undefined && object.withdrawAddrEnabled !== null) {\n            message.withdrawAddrEnabled = Boolean(object.withdrawAddrEnabled);\n        }\n        else {\n            message.withdrawAddrEnabled = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.communityTax !== undefined && (obj.communityTax = message.communityTax);\n        message.baseProposerReward !== undefined && (obj.baseProposerReward = message.baseProposerReward);\n        message.bonusProposerReward !== undefined && (obj.bonusProposerReward = message.bonusProposerReward);\n        message.withdrawAddrEnabled !== undefined && (obj.withdrawAddrEnabled = message.withdrawAddrEnabled);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.communityTax !== undefined && object.communityTax !== null) {\n            message.communityTax = object.communityTax;\n        }\n        else {\n            message.communityTax = '';\n        }\n        if (object.baseProposerReward !== undefined && object.baseProposerReward !== null) {\n            message.baseProposerReward = object.baseProposerReward;\n        }\n        else {\n            message.baseProposerReward = '';\n        }\n        if (object.bonusProposerReward !== undefined && object.bonusProposerReward !== null) {\n            message.bonusProposerReward = object.bonusProposerReward;\n        }\n        else {\n            message.bonusProposerReward = '';\n        }\n        if (object.withdrawAddrEnabled !== undefined && object.withdrawAddrEnabled !== null) {\n            message.withdrawAddrEnabled = object.withdrawAddrEnabled;\n        }\n        else {\n            message.withdrawAddrEnabled = false;\n        }\n        return message;\n    }\n};\nconst baseValidatorHistoricalRewards = { referenceCount: 0 };\nexport const ValidatorHistoricalRewards = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.cumulativeRewardRatio) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.referenceCount !== 0) {\n            writer.uint32(16).uint32(message.referenceCount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorHistoricalRewards };\n        message.cumulativeRewardRatio = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.cumulativeRewardRatio.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.referenceCount = reader.uint32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorHistoricalRewards };\n        message.cumulativeRewardRatio = [];\n        if (object.cumulativeRewardRatio !== undefined && object.cumulativeRewardRatio !== null) {\n            for (const e of object.cumulativeRewardRatio) {\n                message.cumulativeRewardRatio.push(DecCoin.fromJSON(e));\n            }\n        }\n        if (object.referenceCount !== undefined && object.referenceCount !== null) {\n            message.referenceCount = Number(object.referenceCount);\n        }\n        else {\n            message.referenceCount = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.cumulativeRewardRatio) {\n            obj.cumulativeRewardRatio = message.cumulativeRewardRatio.map((e) => (e ? DecCoin.toJSON(e) : undefined));\n        }\n        else {\n            obj.cumulativeRewardRatio = [];\n        }\n        message.referenceCount !== undefined && (obj.referenceCount = message.referenceCount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorHistoricalRewards };\n        message.cumulativeRewardRatio = [];\n        if (object.cumulativeRewardRatio !== undefined && object.cumulativeRewardRatio !== null) {\n            for (const e of object.cumulativeRewardRatio) {\n                message.cumulativeRewardRatio.push(DecCoin.fromPartial(e));\n            }\n        }\n        if (object.referenceCount !== undefined && object.referenceCount !== null) {\n            message.referenceCount = object.referenceCount;\n        }\n        else {\n            message.referenceCount = 0;\n        }\n        return message;\n    }\n};\nconst baseValidatorCurrentRewards = { period: 0 };\nexport const ValidatorCurrentRewards = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.rewards) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.period !== 0) {\n            writer.uint32(16).uint64(message.period);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorCurrentRewards };\n        message.rewards = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rewards.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.period = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorCurrentRewards };\n        message.rewards = [];\n        if (object.rewards !== undefined && object.rewards !== null) {\n            for (const e of object.rewards) {\n                message.rewards.push(DecCoin.fromJSON(e));\n            }\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = Number(object.period);\n        }\n        else {\n            message.period = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.rewards) {\n            obj.rewards = message.rewards.map((e) => (e ? DecCoin.toJSON(e) : undefined));\n        }\n        else {\n            obj.rewards = [];\n        }\n        message.period !== undefined && (obj.period = message.period);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorCurrentRewards };\n        message.rewards = [];\n        if (object.rewards !== undefined && object.rewards !== null) {\n            for (const e of object.rewards) {\n                message.rewards.push(DecCoin.fromPartial(e));\n            }\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = object.period;\n        }\n        else {\n            message.period = 0;\n        }\n        return message;\n    }\n};\nconst baseValidatorAccumulatedCommission = {};\nexport const ValidatorAccumulatedCommission = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.commission) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorAccumulatedCommission };\n        message.commission = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.commission.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorAccumulatedCommission };\n        message.commission = [];\n        if (object.commission !== undefined && object.commission !== null) {\n            for (const e of object.commission) {\n                message.commission.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.commission) {\n            obj.commission = message.commission.map((e) => (e ? DecCoin.toJSON(e) : undefined));\n        }\n        else {\n            obj.commission = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorAccumulatedCommission };\n        message.commission = [];\n        if (object.commission !== undefined && object.commission !== null) {\n            for (const e of object.commission) {\n                message.commission.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseValidatorOutstandingRewards = {};\nexport const ValidatorOutstandingRewards = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.rewards) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorOutstandingRewards };\n        message.rewards = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rewards.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorOutstandingRewards };\n        message.rewards = [];\n        if (object.rewards !== undefined && object.rewards !== null) {\n            for (const e of object.rewards) {\n                message.rewards.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.rewards) {\n            obj.rewards = message.rewards.map((e) => (e ? DecCoin.toJSON(e) : undefined));\n        }\n        else {\n            obj.rewards = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorOutstandingRewards };\n        message.rewards = [];\n        if (object.rewards !== undefined && object.rewards !== null) {\n            for (const e of object.rewards) {\n                message.rewards.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseValidatorSlashEvent = { validatorPeriod: 0, fraction: '' };\nexport const ValidatorSlashEvent = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorPeriod !== 0) {\n            writer.uint32(8).uint64(message.validatorPeriod);\n        }\n        if (message.fraction !== '') {\n            writer.uint32(18).string(message.fraction);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSlashEvent };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorPeriod = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.fraction = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSlashEvent };\n        if (object.validatorPeriod !== undefined && object.validatorPeriod !== null) {\n            message.validatorPeriod = Number(object.validatorPeriod);\n        }\n        else {\n            message.validatorPeriod = 0;\n        }\n        if (object.fraction !== undefined && object.fraction !== null) {\n            message.fraction = String(object.fraction);\n        }\n        else {\n            message.fraction = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorPeriod !== undefined && (obj.validatorPeriod = message.validatorPeriod);\n        message.fraction !== undefined && (obj.fraction = message.fraction);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSlashEvent };\n        if (object.validatorPeriod !== undefined && object.validatorPeriod !== null) {\n            message.validatorPeriod = object.validatorPeriod;\n        }\n        else {\n            message.validatorPeriod = 0;\n        }\n        if (object.fraction !== undefined && object.fraction !== null) {\n            message.fraction = object.fraction;\n        }\n        else {\n            message.fraction = '';\n        }\n        return message;\n    }\n};\nconst baseValidatorSlashEvents = {};\nexport const ValidatorSlashEvents = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.validatorSlashEvents) {\n            ValidatorSlashEvent.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSlashEvents };\n        message.validatorSlashEvents = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorSlashEvents.push(ValidatorSlashEvent.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSlashEvents };\n        message.validatorSlashEvents = [];\n        if (object.validatorSlashEvents !== undefined && object.validatorSlashEvents !== null) {\n            for (const e of object.validatorSlashEvents) {\n                message.validatorSlashEvents.push(ValidatorSlashEvent.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.validatorSlashEvents) {\n            obj.validatorSlashEvents = message.validatorSlashEvents.map((e) => (e ? ValidatorSlashEvent.toJSON(e) : undefined));\n        }\n        else {\n            obj.validatorSlashEvents = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSlashEvents };\n        message.validatorSlashEvents = [];\n        if (object.validatorSlashEvents !== undefined && object.validatorSlashEvents !== null) {\n            for (const e of object.validatorSlashEvents) {\n                message.validatorSlashEvents.push(ValidatorSlashEvent.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseFeePool = {};\nexport const FeePool = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.communityPool) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseFeePool };\n        message.communityPool = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.communityPool.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseFeePool };\n        message.communityPool = [];\n        if (object.communityPool !== undefined && object.communityPool !== null) {\n            for (const e of object.communityPool) {\n                message.communityPool.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.communityPool) {\n            obj.communityPool = message.communityPool.map((e) => (e ? DecCoin.toJSON(e) : undefined));\n        }\n        else {\n            obj.communityPool = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseFeePool };\n        message.communityPool = [];\n        if (object.communityPool !== undefined && object.communityPool !== null) {\n            for (const e of object.communityPool) {\n                message.communityPool.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseCommunityPoolSpendProposal = { title: '', description: '', recipient: '' };\nexport const CommunityPoolSpendProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== '') {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== '') {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.recipient !== '') {\n            writer.uint32(26).string(message.recipient);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommunityPoolSpendProposal };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.recipient = reader.string();\n                    break;\n                case 4:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommunityPoolSpendProposal };\n        message.amount = [];\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = String(object.recipient);\n        }\n        else {\n            message.recipient = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined && (obj.description = message.description);\n        message.recipient !== undefined && (obj.recipient = message.recipient);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommunityPoolSpendProposal };\n        message.amount = [];\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = object.recipient;\n        }\n        else {\n            message.recipient = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseDelegatorStartingInfo = { previousPeriod: 0, stake: '', height: 0 };\nexport const DelegatorStartingInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.previousPeriod !== 0) {\n            writer.uint32(8).uint64(message.previousPeriod);\n        }\n        if (message.stake !== '') {\n            writer.uint32(18).string(message.stake);\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).uint64(message.height);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegatorStartingInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.previousPeriod = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.stake = reader.string();\n                    break;\n                case 3:\n                    message.height = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegatorStartingInfo };\n        if (object.previousPeriod !== undefined && object.previousPeriod !== null) {\n            message.previousPeriod = Number(object.previousPeriod);\n        }\n        else {\n            message.previousPeriod = 0;\n        }\n        if (object.stake !== undefined && object.stake !== null) {\n            message.stake = String(object.stake);\n        }\n        else {\n            message.stake = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.previousPeriod !== undefined && (obj.previousPeriod = message.previousPeriod);\n        message.stake !== undefined && (obj.stake = message.stake);\n        message.height !== undefined && (obj.height = message.height);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegatorStartingInfo };\n        if (object.previousPeriod !== undefined && object.previousPeriod !== null) {\n            message.previousPeriod = object.previousPeriod;\n        }\n        else {\n            message.previousPeriod = 0;\n        }\n        if (object.stake !== undefined && object.stake !== null) {\n            message.stake = object.stake;\n        }\n        else {\n            message.stake = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        return message;\n    }\n};\nconst baseDelegationDelegatorReward = { validatorAddress: '' };\nexport const DelegationDelegatorReward = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== '') {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        for (const v of message.reward) {\n            DecCoin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegationDelegatorReward };\n        message.reward = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.reward.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegationDelegatorReward };\n        message.reward = [];\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.reward !== undefined && object.reward !== null) {\n            for (const e of object.reward) {\n                message.reward.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);\n        if (message.reward) {\n            obj.reward = message.reward.map((e) => (e ? DecCoin.toJSON(e) : undefined));\n        }\n        else {\n            obj.reward = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegationDelegatorReward };\n        message.reward = [];\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.reward !== undefined && object.reward !== null) {\n            for (const e of object.reward) {\n                message.reward.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseCommunityPoolSpendProposalWithDeposit = { title: '', description: '', recipient: '', amount: '', deposit: '' };\nexport const CommunityPoolSpendProposalWithDeposit = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== '') {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== '') {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.recipient !== '') {\n            writer.uint32(26).string(message.recipient);\n        }\n        if (message.amount !== '') {\n            writer.uint32(34).string(message.amount);\n        }\n        if (message.deposit !== '') {\n            writer.uint32(42).string(message.deposit);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommunityPoolSpendProposalWithDeposit };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.recipient = reader.string();\n                    break;\n                case 4:\n                    message.amount = reader.string();\n                    break;\n                case 5:\n                    message.deposit = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommunityPoolSpendProposalWithDeposit };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = String(object.recipient);\n        }\n        else {\n            message.recipient = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        if (object.deposit !== undefined && object.deposit !== null) {\n            message.deposit = String(object.deposit);\n        }\n        else {\n            message.deposit = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined && (obj.description = message.description);\n        message.recipient !== undefined && (obj.recipient = message.recipient);\n        message.amount !== undefined && (obj.amount = message.amount);\n        message.deposit !== undefined && (obj.deposit = message.deposit);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommunityPoolSpendProposalWithDeposit };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = object.recipient;\n        }\n        else {\n            message.recipient = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        if (object.deposit !== undefined && object.deposit !== null) {\n            message.deposit = object.deposit;\n        }\n        else {\n            message.deposit = '';\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Timestamp } from '../../../google/protobuf/timestamp';\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Duration } from '../../../google/protobuf/duration';\nexport const protobufPackage = 'cosmos.slashing.v1beta1';\nconst baseValidatorSigningInfo = { address: '', startHeight: 0, indexOffset: 0, tombstoned: false, missedBlocksCounter: 0 };\nexport const ValidatorSigningInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.startHeight !== 0) {\n            writer.uint32(16).int64(message.startHeight);\n        }\n        if (message.indexOffset !== 0) {\n            writer.uint32(24).int64(message.indexOffset);\n        }\n        if (message.jailedUntil !== undefined) {\n            Timestamp.encode(toTimestamp(message.jailedUntil), writer.uint32(34).fork()).ldelim();\n        }\n        if (message.tombstoned === true) {\n            writer.uint32(40).bool(message.tombstoned);\n        }\n        if (message.missedBlocksCounter !== 0) {\n            writer.uint32(48).int64(message.missedBlocksCounter);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSigningInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.startHeight = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.indexOffset = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.jailedUntil = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.tombstoned = reader.bool();\n                    break;\n                case 6:\n                    message.missedBlocksCounter = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSigningInfo };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.startHeight !== undefined && object.startHeight !== null) {\n            message.startHeight = Number(object.startHeight);\n        }\n        else {\n            message.startHeight = 0;\n        }\n        if (object.indexOffset !== undefined && object.indexOffset !== null) {\n            message.indexOffset = Number(object.indexOffset);\n        }\n        else {\n            message.indexOffset = 0;\n        }\n        if (object.jailedUntil !== undefined && object.jailedUntil !== null) {\n            message.jailedUntil = fromJsonTimestamp(object.jailedUntil);\n        }\n        else {\n            message.jailedUntil = undefined;\n        }\n        if (object.tombstoned !== undefined && object.tombstoned !== null) {\n            message.tombstoned = Boolean(object.tombstoned);\n        }\n        else {\n            message.tombstoned = false;\n        }\n        if (object.missedBlocksCounter !== undefined && object.missedBlocksCounter !== null) {\n            message.missedBlocksCounter = Number(object.missedBlocksCounter);\n        }\n        else {\n            message.missedBlocksCounter = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.startHeight !== undefined && (obj.startHeight = message.startHeight);\n        message.indexOffset !== undefined && (obj.indexOffset = message.indexOffset);\n        message.jailedUntil !== undefined && (obj.jailedUntil = message.jailedUntil !== undefined ? message.jailedUntil.toISOString() : null);\n        message.tombstoned !== undefined && (obj.tombstoned = message.tombstoned);\n        message.missedBlocksCounter !== undefined && (obj.missedBlocksCounter = message.missedBlocksCounter);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSigningInfo };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.startHeight !== undefined && object.startHeight !== null) {\n            message.startHeight = object.startHeight;\n        }\n        else {\n            message.startHeight = 0;\n        }\n        if (object.indexOffset !== undefined && object.indexOffset !== null) {\n            message.indexOffset = object.indexOffset;\n        }\n        else {\n            message.indexOffset = 0;\n        }\n        if (object.jailedUntil !== undefined && object.jailedUntil !== null) {\n            message.jailedUntil = object.jailedUntil;\n        }\n        else {\n            message.jailedUntil = undefined;\n        }\n        if (object.tombstoned !== undefined && object.tombstoned !== null) {\n            message.tombstoned = object.tombstoned;\n        }\n        else {\n            message.tombstoned = false;\n        }\n        if (object.missedBlocksCounter !== undefined && object.missedBlocksCounter !== null) {\n            message.missedBlocksCounter = object.missedBlocksCounter;\n        }\n        else {\n            message.missedBlocksCounter = 0;\n        }\n        return message;\n    }\n};\nconst baseParams = { signedBlocksWindow: 0 };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.signedBlocksWindow !== 0) {\n            writer.uint32(8).int64(message.signedBlocksWindow);\n        }\n        if (message.minSignedPerWindow.length !== 0) {\n            writer.uint32(18).bytes(message.minSignedPerWindow);\n        }\n        if (message.downtimeJailDuration !== undefined) {\n            Duration.encode(message.downtimeJailDuration, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.slashFractionDoubleSign.length !== 0) {\n            writer.uint32(34).bytes(message.slashFractionDoubleSign);\n        }\n        if (message.slashFractionDowntime.length !== 0) {\n            writer.uint32(42).bytes(message.slashFractionDowntime);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.signedBlocksWindow = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.minSignedPerWindow = reader.bytes();\n                    break;\n                case 3:\n                    message.downtimeJailDuration = Duration.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.slashFractionDoubleSign = reader.bytes();\n                    break;\n                case 5:\n                    message.slashFractionDowntime = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.signedBlocksWindow !== undefined && object.signedBlocksWindow !== null) {\n            message.signedBlocksWindow = Number(object.signedBlocksWindow);\n        }\n        else {\n            message.signedBlocksWindow = 0;\n        }\n        if (object.minSignedPerWindow !== undefined && object.minSignedPerWindow !== null) {\n            message.minSignedPerWindow = bytesFromBase64(object.minSignedPerWindow);\n        }\n        if (object.downtimeJailDuration !== undefined && object.downtimeJailDuration !== null) {\n            message.downtimeJailDuration = Duration.fromJSON(object.downtimeJailDuration);\n        }\n        else {\n            message.downtimeJailDuration = undefined;\n        }\n        if (object.slashFractionDoubleSign !== undefined && object.slashFractionDoubleSign !== null) {\n            message.slashFractionDoubleSign = bytesFromBase64(object.slashFractionDoubleSign);\n        }\n        if (object.slashFractionDowntime !== undefined && object.slashFractionDowntime !== null) {\n            message.slashFractionDowntime = bytesFromBase64(object.slashFractionDowntime);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.signedBlocksWindow !== undefined && (obj.signedBlocksWindow = message.signedBlocksWindow);\n        message.minSignedPerWindow !== undefined &&\n            (obj.minSignedPerWindow = base64FromBytes(message.minSignedPerWindow !== undefined ? message.minSignedPerWindow : new Uint8Array()));\n        message.downtimeJailDuration !== undefined &&\n            (obj.downtimeJailDuration = message.downtimeJailDuration ? Duration.toJSON(message.downtimeJailDuration) : undefined);\n        message.slashFractionDoubleSign !== undefined &&\n            (obj.slashFractionDoubleSign = base64FromBytes(message.slashFractionDoubleSign !== undefined ? message.slashFractionDoubleSign : new Uint8Array()));\n        message.slashFractionDowntime !== undefined &&\n            (obj.slashFractionDowntime = base64FromBytes(message.slashFractionDowntime !== undefined ? message.slashFractionDowntime : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.signedBlocksWindow !== undefined && object.signedBlocksWindow !== null) {\n            message.signedBlocksWindow = object.signedBlocksWindow;\n        }\n        else {\n            message.signedBlocksWindow = 0;\n        }\n        if (object.minSignedPerWindow !== undefined && object.minSignedPerWindow !== null) {\n            message.minSignedPerWindow = object.minSignedPerWindow;\n        }\n        else {\n            message.minSignedPerWindow = new Uint8Array();\n        }\n        if (object.downtimeJailDuration !== undefined && object.downtimeJailDuration !== null) {\n            message.downtimeJailDuration = Duration.fromPartial(object.downtimeJailDuration);\n        }\n        else {\n            message.downtimeJailDuration = undefined;\n        }\n        if (object.slashFractionDoubleSign !== undefined && object.slashFractionDoubleSign !== null) {\n            message.slashFractionDoubleSign = object.slashFractionDoubleSign;\n        }\n        else {\n            message.slashFractionDoubleSign = new Uint8Array();\n        }\n        if (object.slashFractionDowntime !== undefined && object.slashFractionDowntime !== null) {\n            message.slashFractionDowntime = object.slashFractionDowntime;\n        }\n        else {\n            message.slashFractionDowntime = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'ElectronicSignaturesIndustries.anconprotocol.anconprotocol';\nconst baseBaseNFT = { id: '', name: '', uri: '', data: '', owner: '', didOwner: '', price: 0 };\nexport const BaseNFT = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.name !== '') {\n            writer.uint32(18).string(message.name);\n        }\n        if (message.uri !== '') {\n            writer.uint32(26).string(message.uri);\n        }\n        if (message.data !== '') {\n            writer.uint32(34).string(message.data);\n        }\n        if (message.owner !== '') {\n            writer.uint32(42).string(message.owner);\n        }\n        if (message.didOwner !== '') {\n            writer.uint32(50).string(message.didOwner);\n        }\n        if (message.price !== 0) {\n            writer.uint32(56).uint64(message.price);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBaseNFT };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.name = reader.string();\n                    break;\n                case 3:\n                    message.uri = reader.string();\n                    break;\n                case 4:\n                    message.data = reader.string();\n                    break;\n                case 5:\n                    message.owner = reader.string();\n                    break;\n                case 6:\n                    message.didOwner = reader.string();\n                    break;\n                case 7:\n                    message.price = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBaseNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.uri !== undefined && object.uri !== null) {\n            message.uri = String(object.uri);\n        }\n        else {\n            message.uri = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = String(object.data);\n        }\n        else {\n            message.data = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = String(object.owner);\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.didOwner !== undefined && object.didOwner !== null) {\n            message.didOwner = String(object.didOwner);\n        }\n        else {\n            message.didOwner = '';\n        }\n        if (object.price !== undefined && object.price !== null) {\n            message.price = Number(object.price);\n        }\n        else {\n            message.price = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.name !== undefined && (obj.name = message.name);\n        message.uri !== undefined && (obj.uri = message.uri);\n        message.data !== undefined && (obj.data = message.data);\n        message.owner !== undefined && (obj.owner = message.owner);\n        message.didOwner !== undefined && (obj.didOwner = message.didOwner);\n        message.price !== undefined && (obj.price = message.price);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBaseNFT };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.uri !== undefined && object.uri !== null) {\n            message.uri = object.uri;\n        }\n        else {\n            message.uri = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = object.owner;\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.didOwner !== undefined && object.didOwner !== null) {\n            message.didOwner = object.didOwner;\n        }\n        else {\n            message.didOwner = '';\n        }\n        if (object.price !== undefined && object.price !== null) {\n            message.price = object.price;\n        }\n        else {\n            message.price = 0;\n        }\n        return message;\n    }\n};\nconst baseDenom = { id: '', name: '', schema: '', creator: '', symbol: '', mintRestricted: false, updateRestricted: false };\nexport const Denom = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.name !== '') {\n            writer.uint32(18).string(message.name);\n        }\n        if (message.schema !== '') {\n            writer.uint32(26).string(message.schema);\n        }\n        if (message.creator !== '') {\n            writer.uint32(34).string(message.creator);\n        }\n        if (message.symbol !== '') {\n            writer.uint32(42).string(message.symbol);\n        }\n        if (message.mintRestricted === true) {\n            writer.uint32(48).bool(message.mintRestricted);\n        }\n        if (message.updateRestricted === true) {\n            writer.uint32(56).bool(message.updateRestricted);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDenom };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.name = reader.string();\n                    break;\n                case 3:\n                    message.schema = reader.string();\n                    break;\n                case 4:\n                    message.creator = reader.string();\n                    break;\n                case 5:\n                    message.symbol = reader.string();\n                    break;\n                case 6:\n                    message.mintRestricted = reader.bool();\n                    break;\n                case 7:\n                    message.updateRestricted = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDenom };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.schema !== undefined && object.schema !== null) {\n            message.schema = String(object.schema);\n        }\n        else {\n            message.schema = '';\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.symbol !== undefined && object.symbol !== null) {\n            message.symbol = String(object.symbol);\n        }\n        else {\n            message.symbol = '';\n        }\n        if (object.mintRestricted !== undefined && object.mintRestricted !== null) {\n            message.mintRestricted = Boolean(object.mintRestricted);\n        }\n        else {\n            message.mintRestricted = false;\n        }\n        if (object.updateRestricted !== undefined && object.updateRestricted !== null) {\n            message.updateRestricted = Boolean(object.updateRestricted);\n        }\n        else {\n            message.updateRestricted = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.name !== undefined && (obj.name = message.name);\n        message.schema !== undefined && (obj.schema = message.schema);\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.symbol !== undefined && (obj.symbol = message.symbol);\n        message.mintRestricted !== undefined && (obj.mintRestricted = message.mintRestricted);\n        message.updateRestricted !== undefined && (obj.updateRestricted = message.updateRestricted);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDenom };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.schema !== undefined && object.schema !== null) {\n            message.schema = object.schema;\n        }\n        else {\n            message.schema = '';\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.symbol !== undefined && object.symbol !== null) {\n            message.symbol = object.symbol;\n        }\n        else {\n            message.symbol = '';\n        }\n        if (object.mintRestricted !== undefined && object.mintRestricted !== null) {\n            message.mintRestricted = object.mintRestricted;\n        }\n        else {\n            message.mintRestricted = false;\n        }\n        if (object.updateRestricted !== undefined && object.updateRestricted !== null) {\n            message.updateRestricted = object.updateRestricted;\n        }\n        else {\n            message.updateRestricted = false;\n        }\n        return message;\n    }\n};\nconst baseIDCollection = { denomId: '', tokenIds: '' };\nexport const IDCollection = {\n    encode(message, writer = Writer.create()) {\n        if (message.denomId !== '') {\n            writer.uint32(10).string(message.denomId);\n        }\n        for (const v of message.tokenIds) {\n            writer.uint32(18).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIDCollection };\n        message.tokenIds = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denomId = reader.string();\n                    break;\n                case 2:\n                    message.tokenIds.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIDCollection };\n        message.tokenIds = [];\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.tokenIds !== undefined && object.tokenIds !== null) {\n            for (const e of object.tokenIds) {\n                message.tokenIds.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        if (message.tokenIds) {\n            obj.tokenIds = message.tokenIds.map((e) => e);\n        }\n        else {\n            obj.tokenIds = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIDCollection };\n        message.tokenIds = [];\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.tokenIds !== undefined && object.tokenIds !== null) {\n            for (const e of object.tokenIds) {\n                message.tokenIds.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseOwner = { address: '' };\nexport const Owner = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.idCollections) {\n            IDCollection.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseOwner };\n        message.idCollections = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.idCollections.push(IDCollection.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseOwner };\n        message.idCollections = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.idCollections !== undefined && object.idCollections !== null) {\n            for (const e of object.idCollections) {\n                message.idCollections.push(IDCollection.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.idCollections) {\n            obj.idCollections = message.idCollections.map((e) => (e ? IDCollection.toJSON(e) : undefined));\n        }\n        else {\n            obj.idCollections = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseOwner };\n        message.idCollections = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.idCollections !== undefined && object.idCollections !== null) {\n            for (const e of object.idCollections) {\n                message.idCollections.push(IDCollection.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseCollection = {};\nexport const Collection = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== undefined) {\n            Denom.encode(message.denom, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.nfts) {\n            BaseNFT.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCollection };\n        message.nfts = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = Denom.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.nfts.push(BaseNFT.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCollection };\n        message.nfts = [];\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = Denom.fromJSON(object.denom);\n        }\n        else {\n            message.denom = undefined;\n        }\n        if (object.nfts !== undefined && object.nfts !== null) {\n            for (const e of object.nfts) {\n                message.nfts.push(BaseNFT.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom ? Denom.toJSON(message.denom) : undefined);\n        if (message.nfts) {\n            obj.nfts = message.nfts.map((e) => (e ? BaseNFT.toJSON(e) : undefined));\n        }\n        else {\n            obj.nfts = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCollection };\n        message.nfts = [];\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = Denom.fromPartial(object.denom);\n        }\n        else {\n            message.denom = undefined;\n        }\n        if (object.nfts !== undefined && object.nfts !== null) {\n            for (const e of object.nfts) {\n                message.nfts.push(BaseNFT.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from 'protobufjs/minimal';\nimport * as Long from 'long';\nimport { Any } from '../../../google/protobuf/any';\nimport { AccessTuple, Log } from '../../../ethermint/evm/v1/evm';\nexport const protobufPackage = 'ethermint.evm.v1';\nconst baseMsgEthereumTx = { size: 0, hash: '', from: '' };\nexport const MsgEthereumTx = {\n    encode(message, writer = Writer.create()) {\n        if (message.data !== undefined) {\n            Any.encode(message.data, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.size !== 0) {\n            writer.uint32(17).double(message.size);\n        }\n        if (message.hash !== '') {\n            writer.uint32(26).string(message.hash);\n        }\n        if (message.from !== '') {\n            writer.uint32(34).string(message.from);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgEthereumTx };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.data = Any.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.size = reader.double();\n                    break;\n                case 3:\n                    message.hash = reader.string();\n                    break;\n                case 4:\n                    message.from = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgEthereumTx };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = Any.fromJSON(object.data);\n        }\n        else {\n            message.data = undefined;\n        }\n        if (object.size !== undefined && object.size !== null) {\n            message.size = Number(object.size);\n        }\n        else {\n            message.size = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = String(object.hash);\n        }\n        else {\n            message.hash = '';\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = String(object.from);\n        }\n        else {\n            message.from = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.data !== undefined && (obj.data = message.data ? Any.toJSON(message.data) : undefined);\n        message.size !== undefined && (obj.size = message.size);\n        message.hash !== undefined && (obj.hash = message.hash);\n        message.from !== undefined && (obj.from = message.from);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgEthereumTx };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = Any.fromPartial(object.data);\n        }\n        else {\n            message.data = undefined;\n        }\n        if (object.size !== undefined && object.size !== null) {\n            message.size = object.size;\n        }\n        else {\n            message.size = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = '';\n        }\n        if (object.from !== undefined && object.from !== null) {\n            message.from = object.from;\n        }\n        else {\n            message.from = '';\n        }\n        return message;\n    }\n};\nconst baseLegacyTx = { nonce: 0, gasPrice: '', gas: 0, to: '', value: '' };\nexport const LegacyTx = {\n    encode(message, writer = Writer.create()) {\n        if (message.nonce !== 0) {\n            writer.uint32(8).uint64(message.nonce);\n        }\n        if (message.gasPrice !== '') {\n            writer.uint32(18).string(message.gasPrice);\n        }\n        if (message.gas !== 0) {\n            writer.uint32(24).uint64(message.gas);\n        }\n        if (message.to !== '') {\n            writer.uint32(34).string(message.to);\n        }\n        if (message.value !== '') {\n            writer.uint32(42).string(message.value);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(50).bytes(message.data);\n        }\n        if (message.v.length !== 0) {\n            writer.uint32(58).bytes(message.v);\n        }\n        if (message.r.length !== 0) {\n            writer.uint32(66).bytes(message.r);\n        }\n        if (message.s.length !== 0) {\n            writer.uint32(74).bytes(message.s);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseLegacyTx };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.nonce = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.gasPrice = reader.string();\n                    break;\n                case 3:\n                    message.gas = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.to = reader.string();\n                    break;\n                case 5:\n                    message.value = reader.string();\n                    break;\n                case 6:\n                    message.data = reader.bytes();\n                    break;\n                case 7:\n                    message.v = reader.bytes();\n                    break;\n                case 8:\n                    message.r = reader.bytes();\n                    break;\n                case 9:\n                    message.s = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseLegacyTx };\n        if (object.nonce !== undefined && object.nonce !== null) {\n            message.nonce = Number(object.nonce);\n        }\n        else {\n            message.nonce = 0;\n        }\n        if (object.gasPrice !== undefined && object.gasPrice !== null) {\n            message.gasPrice = String(object.gasPrice);\n        }\n        else {\n            message.gasPrice = '';\n        }\n        if (object.gas !== undefined && object.gas !== null) {\n            message.gas = Number(object.gas);\n        }\n        else {\n            message.gas = 0;\n        }\n        if (object.to !== undefined && object.to !== null) {\n            message.to = String(object.to);\n        }\n        else {\n            message.to = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = String(object.value);\n        }\n        else {\n            message.value = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.v !== undefined && object.v !== null) {\n            message.v = bytesFromBase64(object.v);\n        }\n        if (object.r !== undefined && object.r !== null) {\n            message.r = bytesFromBase64(object.r);\n        }\n        if (object.s !== undefined && object.s !== null) {\n            message.s = bytesFromBase64(object.s);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.nonce !== undefined && (obj.nonce = message.nonce);\n        message.gasPrice !== undefined && (obj.gasPrice = message.gasPrice);\n        message.gas !== undefined && (obj.gas = message.gas);\n        message.to !== undefined && (obj.to = message.to);\n        message.value !== undefined && (obj.value = message.value);\n        message.data !== undefined && (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.v !== undefined && (obj.v = base64FromBytes(message.v !== undefined ? message.v : new Uint8Array()));\n        message.r !== undefined && (obj.r = base64FromBytes(message.r !== undefined ? message.r : new Uint8Array()));\n        message.s !== undefined && (obj.s = base64FromBytes(message.s !== undefined ? message.s : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseLegacyTx };\n        if (object.nonce !== undefined && object.nonce !== null) {\n            message.nonce = object.nonce;\n        }\n        else {\n            message.nonce = 0;\n        }\n        if (object.gasPrice !== undefined && object.gasPrice !== null) {\n            message.gasPrice = object.gasPrice;\n        }\n        else {\n            message.gasPrice = '';\n        }\n        if (object.gas !== undefined && object.gas !== null) {\n            message.gas = object.gas;\n        }\n        else {\n            message.gas = 0;\n        }\n        if (object.to !== undefined && object.to !== null) {\n            message.to = object.to;\n        }\n        else {\n            message.to = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.v !== undefined && object.v !== null) {\n            message.v = object.v;\n        }\n        else {\n            message.v = new Uint8Array();\n        }\n        if (object.r !== undefined && object.r !== null) {\n            message.r = object.r;\n        }\n        else {\n            message.r = new Uint8Array();\n        }\n        if (object.s !== undefined && object.s !== null) {\n            message.s = object.s;\n        }\n        else {\n            message.s = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseAccessListTx = { chainId: '', nonce: 0, gasPrice: '', gas: 0, to: '', value: '' };\nexport const AccessListTx = {\n    encode(message, writer = Writer.create()) {\n        if (message.chainId !== '') {\n            writer.uint32(10).string(message.chainId);\n        }\n        if (message.nonce !== 0) {\n            writer.uint32(16).uint64(message.nonce);\n        }\n        if (message.gasPrice !== '') {\n            writer.uint32(26).string(message.gasPrice);\n        }\n        if (message.gas !== 0) {\n            writer.uint32(32).uint64(message.gas);\n        }\n        if (message.to !== '') {\n            writer.uint32(42).string(message.to);\n        }\n        if (message.value !== '') {\n            writer.uint32(50).string(message.value);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(58).bytes(message.data);\n        }\n        for (const v of message.accesses) {\n            AccessTuple.encode(v, writer.uint32(66).fork()).ldelim();\n        }\n        if (message.v.length !== 0) {\n            writer.uint32(74).bytes(message.v);\n        }\n        if (message.r.length !== 0) {\n            writer.uint32(82).bytes(message.r);\n        }\n        if (message.s.length !== 0) {\n            writer.uint32(90).bytes(message.s);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAccessListTx };\n        message.accesses = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.chainId = reader.string();\n                    break;\n                case 2:\n                    message.nonce = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.gasPrice = reader.string();\n                    break;\n                case 4:\n                    message.gas = longToNumber(reader.uint64());\n                    break;\n                case 5:\n                    message.to = reader.string();\n                    break;\n                case 6:\n                    message.value = reader.string();\n                    break;\n                case 7:\n                    message.data = reader.bytes();\n                    break;\n                case 8:\n                    message.accesses.push(AccessTuple.decode(reader, reader.uint32()));\n                    break;\n                case 9:\n                    message.v = reader.bytes();\n                    break;\n                case 10:\n                    message.r = reader.bytes();\n                    break;\n                case 11:\n                    message.s = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAccessListTx };\n        message.accesses = [];\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = String(object.chainId);\n        }\n        else {\n            message.chainId = '';\n        }\n        if (object.nonce !== undefined && object.nonce !== null) {\n            message.nonce = Number(object.nonce);\n        }\n        else {\n            message.nonce = 0;\n        }\n        if (object.gasPrice !== undefined && object.gasPrice !== null) {\n            message.gasPrice = String(object.gasPrice);\n        }\n        else {\n            message.gasPrice = '';\n        }\n        if (object.gas !== undefined && object.gas !== null) {\n            message.gas = Number(object.gas);\n        }\n        else {\n            message.gas = 0;\n        }\n        if (object.to !== undefined && object.to !== null) {\n            message.to = String(object.to);\n        }\n        else {\n            message.to = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = String(object.value);\n        }\n        else {\n            message.value = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.accesses !== undefined && object.accesses !== null) {\n            for (const e of object.accesses) {\n                message.accesses.push(AccessTuple.fromJSON(e));\n            }\n        }\n        if (object.v !== undefined && object.v !== null) {\n            message.v = bytesFromBase64(object.v);\n        }\n        if (object.r !== undefined && object.r !== null) {\n            message.r = bytesFromBase64(object.r);\n        }\n        if (object.s !== undefined && object.s !== null) {\n            message.s = bytesFromBase64(object.s);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.chainId !== undefined && (obj.chainId = message.chainId);\n        message.nonce !== undefined && (obj.nonce = message.nonce);\n        message.gasPrice !== undefined && (obj.gasPrice = message.gasPrice);\n        message.gas !== undefined && (obj.gas = message.gas);\n        message.to !== undefined && (obj.to = message.to);\n        message.value !== undefined && (obj.value = message.value);\n        message.data !== undefined && (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        if (message.accesses) {\n            obj.accesses = message.accesses.map((e) => (e ? AccessTuple.toJSON(e) : undefined));\n        }\n        else {\n            obj.accesses = [];\n        }\n        message.v !== undefined && (obj.v = base64FromBytes(message.v !== undefined ? message.v : new Uint8Array()));\n        message.r !== undefined && (obj.r = base64FromBytes(message.r !== undefined ? message.r : new Uint8Array()));\n        message.s !== undefined && (obj.s = base64FromBytes(message.s !== undefined ? message.s : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAccessListTx };\n        message.accesses = [];\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = object.chainId;\n        }\n        else {\n            message.chainId = '';\n        }\n        if (object.nonce !== undefined && object.nonce !== null) {\n            message.nonce = object.nonce;\n        }\n        else {\n            message.nonce = 0;\n        }\n        if (object.gasPrice !== undefined && object.gasPrice !== null) {\n            message.gasPrice = object.gasPrice;\n        }\n        else {\n            message.gasPrice = '';\n        }\n        if (object.gas !== undefined && object.gas !== null) {\n            message.gas = object.gas;\n        }\n        else {\n            message.gas = 0;\n        }\n        if (object.to !== undefined && object.to !== null) {\n            message.to = object.to;\n        }\n        else {\n            message.to = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.accesses !== undefined && object.accesses !== null) {\n            for (const e of object.accesses) {\n                message.accesses.push(AccessTuple.fromPartial(e));\n            }\n        }\n        if (object.v !== undefined && object.v !== null) {\n            message.v = object.v;\n        }\n        else {\n            message.v = new Uint8Array();\n        }\n        if (object.r !== undefined && object.r !== null) {\n            message.r = object.r;\n        }\n        else {\n            message.r = new Uint8Array();\n        }\n        if (object.s !== undefined && object.s !== null) {\n            message.s = object.s;\n        }\n        else {\n            message.s = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseDynamicFeeTx = { chainId: '', nonce: 0, gasTipCap: '', gasFeeCap: '', gas: 0, to: '', value: '' };\nexport const DynamicFeeTx = {\n    encode(message, writer = Writer.create()) {\n        if (message.chainId !== '') {\n            writer.uint32(10).string(message.chainId);\n        }\n        if (message.nonce !== 0) {\n            writer.uint32(16).uint64(message.nonce);\n        }\n        if (message.gasTipCap !== '') {\n            writer.uint32(26).string(message.gasTipCap);\n        }\n        if (message.gasFeeCap !== '') {\n            writer.uint32(34).string(message.gasFeeCap);\n        }\n        if (message.gas !== 0) {\n            writer.uint32(40).uint64(message.gas);\n        }\n        if (message.to !== '') {\n            writer.uint32(50).string(message.to);\n        }\n        if (message.value !== '') {\n            writer.uint32(58).string(message.value);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(66).bytes(message.data);\n        }\n        for (const v of message.accesses) {\n            AccessTuple.encode(v, writer.uint32(74).fork()).ldelim();\n        }\n        if (message.v.length !== 0) {\n            writer.uint32(82).bytes(message.v);\n        }\n        if (message.r.length !== 0) {\n            writer.uint32(90).bytes(message.r);\n        }\n        if (message.s.length !== 0) {\n            writer.uint32(98).bytes(message.s);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDynamicFeeTx };\n        message.accesses = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.chainId = reader.string();\n                    break;\n                case 2:\n                    message.nonce = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.gasTipCap = reader.string();\n                    break;\n                case 4:\n                    message.gasFeeCap = reader.string();\n                    break;\n                case 5:\n                    message.gas = longToNumber(reader.uint64());\n                    break;\n                case 6:\n                    message.to = reader.string();\n                    break;\n                case 7:\n                    message.value = reader.string();\n                    break;\n                case 8:\n                    message.data = reader.bytes();\n                    break;\n                case 9:\n                    message.accesses.push(AccessTuple.decode(reader, reader.uint32()));\n                    break;\n                case 10:\n                    message.v = reader.bytes();\n                    break;\n                case 11:\n                    message.r = reader.bytes();\n                    break;\n                case 12:\n                    message.s = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDynamicFeeTx };\n        message.accesses = [];\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = String(object.chainId);\n        }\n        else {\n            message.chainId = '';\n        }\n        if (object.nonce !== undefined && object.nonce !== null) {\n            message.nonce = Number(object.nonce);\n        }\n        else {\n            message.nonce = 0;\n        }\n        if (object.gasTipCap !== undefined && object.gasTipCap !== null) {\n            message.gasTipCap = String(object.gasTipCap);\n        }\n        else {\n            message.gasTipCap = '';\n        }\n        if (object.gasFeeCap !== undefined && object.gasFeeCap !== null) {\n            message.gasFeeCap = String(object.gasFeeCap);\n        }\n        else {\n            message.gasFeeCap = '';\n        }\n        if (object.gas !== undefined && object.gas !== null) {\n            message.gas = Number(object.gas);\n        }\n        else {\n            message.gas = 0;\n        }\n        if (object.to !== undefined && object.to !== null) {\n            message.to = String(object.to);\n        }\n        else {\n            message.to = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = String(object.value);\n        }\n        else {\n            message.value = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.accesses !== undefined && object.accesses !== null) {\n            for (const e of object.accesses) {\n                message.accesses.push(AccessTuple.fromJSON(e));\n            }\n        }\n        if (object.v !== undefined && object.v !== null) {\n            message.v = bytesFromBase64(object.v);\n        }\n        if (object.r !== undefined && object.r !== null) {\n            message.r = bytesFromBase64(object.r);\n        }\n        if (object.s !== undefined && object.s !== null) {\n            message.s = bytesFromBase64(object.s);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.chainId !== undefined && (obj.chainId = message.chainId);\n        message.nonce !== undefined && (obj.nonce = message.nonce);\n        message.gasTipCap !== undefined && (obj.gasTipCap = message.gasTipCap);\n        message.gasFeeCap !== undefined && (obj.gasFeeCap = message.gasFeeCap);\n        message.gas !== undefined && (obj.gas = message.gas);\n        message.to !== undefined && (obj.to = message.to);\n        message.value !== undefined && (obj.value = message.value);\n        message.data !== undefined && (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        if (message.accesses) {\n            obj.accesses = message.accesses.map((e) => (e ? AccessTuple.toJSON(e) : undefined));\n        }\n        else {\n            obj.accesses = [];\n        }\n        message.v !== undefined && (obj.v = base64FromBytes(message.v !== undefined ? message.v : new Uint8Array()));\n        message.r !== undefined && (obj.r = base64FromBytes(message.r !== undefined ? message.r : new Uint8Array()));\n        message.s !== undefined && (obj.s = base64FromBytes(message.s !== undefined ? message.s : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDynamicFeeTx };\n        message.accesses = [];\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = object.chainId;\n        }\n        else {\n            message.chainId = '';\n        }\n        if (object.nonce !== undefined && object.nonce !== null) {\n            message.nonce = object.nonce;\n        }\n        else {\n            message.nonce = 0;\n        }\n        if (object.gasTipCap !== undefined && object.gasTipCap !== null) {\n            message.gasTipCap = object.gasTipCap;\n        }\n        else {\n            message.gasTipCap = '';\n        }\n        if (object.gasFeeCap !== undefined && object.gasFeeCap !== null) {\n            message.gasFeeCap = object.gasFeeCap;\n        }\n        else {\n            message.gasFeeCap = '';\n        }\n        if (object.gas !== undefined && object.gas !== null) {\n            message.gas = object.gas;\n        }\n        else {\n            message.gas = 0;\n        }\n        if (object.to !== undefined && object.to !== null) {\n            message.to = object.to;\n        }\n        else {\n            message.to = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = '';\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.accesses !== undefined && object.accesses !== null) {\n            for (const e of object.accesses) {\n                message.accesses.push(AccessTuple.fromPartial(e));\n            }\n        }\n        if (object.v !== undefined && object.v !== null) {\n            message.v = object.v;\n        }\n        else {\n            message.v = new Uint8Array();\n        }\n        if (object.r !== undefined && object.r !== null) {\n            message.r = object.r;\n        }\n        else {\n            message.r = new Uint8Array();\n        }\n        if (object.s !== undefined && object.s !== null) {\n            message.s = object.s;\n        }\n        else {\n            message.s = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseExtensionOptionsEthereumTx = {};\nexport const ExtensionOptionsEthereumTx = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseExtensionOptionsEthereumTx };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseExtensionOptionsEthereumTx };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseExtensionOptionsEthereumTx };\n        return message;\n    }\n};\nconst baseMsgEthereumTxResponse = { hash: '', vmError: '', gasUsed: 0 };\nexport const MsgEthereumTxResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash !== '') {\n            writer.uint32(10).string(message.hash);\n        }\n        for (const v of message.logs) {\n            Log.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.ret.length !== 0) {\n            writer.uint32(26).bytes(message.ret);\n        }\n        if (message.vmError !== '') {\n            writer.uint32(34).string(message.vmError);\n        }\n        if (message.gasUsed !== 0) {\n            writer.uint32(40).uint64(message.gasUsed);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgEthereumTxResponse };\n        message.logs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.string();\n                    break;\n                case 2:\n                    message.logs.push(Log.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.ret = reader.bytes();\n                    break;\n                case 4:\n                    message.vmError = reader.string();\n                    break;\n                case 5:\n                    message.gasUsed = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgEthereumTxResponse };\n        message.logs = [];\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = String(object.hash);\n        }\n        else {\n            message.hash = '';\n        }\n        if (object.logs !== undefined && object.logs !== null) {\n            for (const e of object.logs) {\n                message.logs.push(Log.fromJSON(e));\n            }\n        }\n        if (object.ret !== undefined && object.ret !== null) {\n            message.ret = bytesFromBase64(object.ret);\n        }\n        if (object.vmError !== undefined && object.vmError !== null) {\n            message.vmError = String(object.vmError);\n        }\n        else {\n            message.vmError = '';\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = Number(object.gasUsed);\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = message.hash);\n        if (message.logs) {\n            obj.logs = message.logs.map((e) => (e ? Log.toJSON(e) : undefined));\n        }\n        else {\n            obj.logs = [];\n        }\n        message.ret !== undefined && (obj.ret = base64FromBytes(message.ret !== undefined ? message.ret : new Uint8Array()));\n        message.vmError !== undefined && (obj.vmError = message.vmError);\n        message.gasUsed !== undefined && (obj.gasUsed = message.gasUsed);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgEthereumTxResponse };\n        message.logs = [];\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = '';\n        }\n        if (object.logs !== undefined && object.logs !== null) {\n            for (const e of object.logs) {\n                message.logs.push(Log.fromPartial(e));\n            }\n        }\n        if (object.ret !== undefined && object.ret !== null) {\n            message.ret = object.ret;\n        }\n        else {\n            message.ret = new Uint8Array();\n        }\n        if (object.vmError !== undefined && object.vmError !== null) {\n            message.vmError = object.vmError;\n        }\n        else {\n            message.vmError = '';\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = object.gasUsed;\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    EthereumTx(request) {\n        const data = MsgEthereumTx.encode(request).finish();\n        const promise = this.rpc.request('ethermint.evm.v1.Msg', 'EthereumTx', data);\n        return promise.then((data) => MsgEthereumTxResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, Writer } from 'protobufjs/minimal';\nimport { Any } from '../../../google/protobuf/any';\nexport const protobufPackage = 'cosmos.evidence.v1beta1';\nconst baseMsgSubmitEvidence = { submitter: '' };\nexport const MsgSubmitEvidence = {\n    encode(message, writer = Writer.create()) {\n        if (message.submitter !== '') {\n            writer.uint32(10).string(message.submitter);\n        }\n        if (message.evidence !== undefined) {\n            Any.encode(message.evidence, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSubmitEvidence };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.submitter = reader.string();\n                    break;\n                case 2:\n                    message.evidence = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSubmitEvidence };\n        if (object.submitter !== undefined && object.submitter !== null) {\n            message.submitter = String(object.submitter);\n        }\n        else {\n            message.submitter = '';\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = Any.fromJSON(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.submitter !== undefined && (obj.submitter = message.submitter);\n        message.evidence !== undefined && (obj.evidence = message.evidence ? Any.toJSON(message.evidence) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSubmitEvidence };\n        if (object.submitter !== undefined && object.submitter !== null) {\n            message.submitter = object.submitter;\n        }\n        else {\n            message.submitter = '';\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = Any.fromPartial(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        return message;\n    }\n};\nconst baseMsgSubmitEvidenceResponse = {};\nexport const MsgSubmitEvidenceResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(34).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSubmitEvidenceResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 4:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSubmitEvidenceResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSubmitEvidenceResponse };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    SubmitEvidence(request) {\n        const data = MsgSubmitEvidence.encode(request).finish();\n        const promise = this.rpc.request('cosmos.evidence.v1beta1.Msg', 'SubmitEvidence', data);\n        return promise.then((data) => MsgSubmitEvidenceResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { DecCoin } from '../../../cosmos/base/v1beta1/coin';\nimport { ValidatorAccumulatedCommission, ValidatorHistoricalRewards, ValidatorCurrentRewards, DelegatorStartingInfo, ValidatorSlashEvent, Params, FeePool } from '../../../cosmos/distribution/v1beta1/distribution';\nexport const protobufPackage = 'cosmos.distribution.v1beta1';\nconst baseDelegatorWithdrawInfo = { delegatorAddress: '', withdrawAddress: '' };\nexport const DelegatorWithdrawInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.withdrawAddress !== '') {\n            writer.uint32(18).string(message.withdrawAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegatorWithdrawInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.withdrawAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegatorWithdrawInfo };\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.withdrawAddress !== undefined && object.withdrawAddress !== null) {\n            message.withdrawAddress = String(object.withdrawAddress);\n        }\n        else {\n            message.withdrawAddress = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined && (obj.delegatorAddress = message.delegatorAddress);\n        message.withdrawAddress !== undefined && (obj.withdrawAddress = message.withdrawAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegatorWithdrawInfo };\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.withdrawAddress !== undefined && object.withdrawAddress !== null) {\n            message.withdrawAddress = object.withdrawAddress;\n        }\n        else {\n            message.withdrawAddress = '';\n        }\n        return message;\n    }\n};\nconst baseValidatorOutstandingRewardsRecord = { validatorAddress: '' };\nexport const ValidatorOutstandingRewardsRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== '') {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        for (const v of message.outstandingRewards) {\n            DecCoin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorOutstandingRewardsRecord };\n        message.outstandingRewards = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.outstandingRewards.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorOutstandingRewardsRecord };\n        message.outstandingRewards = [];\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.outstandingRewards !== undefined && object.outstandingRewards !== null) {\n            for (const e of object.outstandingRewards) {\n                message.outstandingRewards.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);\n        if (message.outstandingRewards) {\n            obj.outstandingRewards = message.outstandingRewards.map((e) => (e ? DecCoin.toJSON(e) : undefined));\n        }\n        else {\n            obj.outstandingRewards = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorOutstandingRewardsRecord };\n        message.outstandingRewards = [];\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.outstandingRewards !== undefined && object.outstandingRewards !== null) {\n            for (const e of object.outstandingRewards) {\n                message.outstandingRewards.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseValidatorAccumulatedCommissionRecord = { validatorAddress: '' };\nexport const ValidatorAccumulatedCommissionRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== '') {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        if (message.accumulated !== undefined) {\n            ValidatorAccumulatedCommission.encode(message.accumulated, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorAccumulatedCommissionRecord };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.accumulated = ValidatorAccumulatedCommission.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorAccumulatedCommissionRecord };\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.accumulated !== undefined && object.accumulated !== null) {\n            message.accumulated = ValidatorAccumulatedCommission.fromJSON(object.accumulated);\n        }\n        else {\n            message.accumulated = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);\n        message.accumulated !== undefined && (obj.accumulated = message.accumulated ? ValidatorAccumulatedCommission.toJSON(message.accumulated) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorAccumulatedCommissionRecord };\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.accumulated !== undefined && object.accumulated !== null) {\n            message.accumulated = ValidatorAccumulatedCommission.fromPartial(object.accumulated);\n        }\n        else {\n            message.accumulated = undefined;\n        }\n        return message;\n    }\n};\nconst baseValidatorHistoricalRewardsRecord = { validatorAddress: '', period: 0 };\nexport const ValidatorHistoricalRewardsRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== '') {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        if (message.period !== 0) {\n            writer.uint32(16).uint64(message.period);\n        }\n        if (message.rewards !== undefined) {\n            ValidatorHistoricalRewards.encode(message.rewards, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorHistoricalRewardsRecord };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.period = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.rewards = ValidatorHistoricalRewards.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorHistoricalRewardsRecord };\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = Number(object.period);\n        }\n        else {\n            message.period = 0;\n        }\n        if (object.rewards !== undefined && object.rewards !== null) {\n            message.rewards = ValidatorHistoricalRewards.fromJSON(object.rewards);\n        }\n        else {\n            message.rewards = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);\n        message.period !== undefined && (obj.period = message.period);\n        message.rewards !== undefined && (obj.rewards = message.rewards ? ValidatorHistoricalRewards.toJSON(message.rewards) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorHistoricalRewardsRecord };\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = object.period;\n        }\n        else {\n            message.period = 0;\n        }\n        if (object.rewards !== undefined && object.rewards !== null) {\n            message.rewards = ValidatorHistoricalRewards.fromPartial(object.rewards);\n        }\n        else {\n            message.rewards = undefined;\n        }\n        return message;\n    }\n};\nconst baseValidatorCurrentRewardsRecord = { validatorAddress: '' };\nexport const ValidatorCurrentRewardsRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== '') {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        if (message.rewards !== undefined) {\n            ValidatorCurrentRewards.encode(message.rewards, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorCurrentRewardsRecord };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.rewards = ValidatorCurrentRewards.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorCurrentRewardsRecord };\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.rewards !== undefined && object.rewards !== null) {\n            message.rewards = ValidatorCurrentRewards.fromJSON(object.rewards);\n        }\n        else {\n            message.rewards = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);\n        message.rewards !== undefined && (obj.rewards = message.rewards ? ValidatorCurrentRewards.toJSON(message.rewards) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorCurrentRewardsRecord };\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.rewards !== undefined && object.rewards !== null) {\n            message.rewards = ValidatorCurrentRewards.fromPartial(object.rewards);\n        }\n        else {\n            message.rewards = undefined;\n        }\n        return message;\n    }\n};\nconst baseDelegatorStartingInfoRecord = { delegatorAddress: '', validatorAddress: '' };\nexport const DelegatorStartingInfoRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== '') {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== '') {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.startingInfo !== undefined) {\n            DelegatorStartingInfo.encode(message.startingInfo, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegatorStartingInfoRecord };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.startingInfo = DelegatorStartingInfo.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegatorStartingInfoRecord };\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.startingInfo !== undefined && object.startingInfo !== null) {\n            message.startingInfo = DelegatorStartingInfo.fromJSON(object.startingInfo);\n        }\n        else {\n            message.startingInfo = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined && (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);\n        message.startingInfo !== undefined && (obj.startingInfo = message.startingInfo ? DelegatorStartingInfo.toJSON(message.startingInfo) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegatorStartingInfoRecord };\n        if (object.delegatorAddress !== undefined && object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = '';\n        }\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.startingInfo !== undefined && object.startingInfo !== null) {\n            message.startingInfo = DelegatorStartingInfo.fromPartial(object.startingInfo);\n        }\n        else {\n            message.startingInfo = undefined;\n        }\n        return message;\n    }\n};\nconst baseValidatorSlashEventRecord = { validatorAddress: '', height: 0, period: 0 };\nexport const ValidatorSlashEventRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== '') {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).uint64(message.height);\n        }\n        if (message.period !== 0) {\n            writer.uint32(24).uint64(message.period);\n        }\n        if (message.validatorSlashEvent !== undefined) {\n            ValidatorSlashEvent.encode(message.validatorSlashEvent, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSlashEventRecord };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.height = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.period = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.validatorSlashEvent = ValidatorSlashEvent.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSlashEventRecord };\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = Number(object.period);\n        }\n        else {\n            message.period = 0;\n        }\n        if (object.validatorSlashEvent !== undefined && object.validatorSlashEvent !== null) {\n            message.validatorSlashEvent = ValidatorSlashEvent.fromJSON(object.validatorSlashEvent);\n        }\n        else {\n            message.validatorSlashEvent = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined && (obj.validatorAddress = message.validatorAddress);\n        message.height !== undefined && (obj.height = message.height);\n        message.period !== undefined && (obj.period = message.period);\n        message.validatorSlashEvent !== undefined &&\n            (obj.validatorSlashEvent = message.validatorSlashEvent ? ValidatorSlashEvent.toJSON(message.validatorSlashEvent) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSlashEventRecord };\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = object.period;\n        }\n        else {\n            message.period = 0;\n        }\n        if (object.validatorSlashEvent !== undefined && object.validatorSlashEvent !== null) {\n            message.validatorSlashEvent = ValidatorSlashEvent.fromPartial(object.validatorSlashEvent);\n        }\n        else {\n            message.validatorSlashEvent = undefined;\n        }\n        return message;\n    }\n};\nconst baseGenesisState = { previousProposer: '' };\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.feePool !== undefined) {\n            FeePool.encode(message.feePool, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.delegatorWithdrawInfos) {\n            DelegatorWithdrawInfo.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.previousProposer !== '') {\n            writer.uint32(34).string(message.previousProposer);\n        }\n        for (const v of message.outstandingRewards) {\n            ValidatorOutstandingRewardsRecord.encode(v, writer.uint32(42).fork()).ldelim();\n        }\n        for (const v of message.validatorAccumulatedCommissions) {\n            ValidatorAccumulatedCommissionRecord.encode(v, writer.uint32(50).fork()).ldelim();\n        }\n        for (const v of message.validatorHistoricalRewards) {\n            ValidatorHistoricalRewardsRecord.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        for (const v of message.validatorCurrentRewards) {\n            ValidatorCurrentRewardsRecord.encode(v, writer.uint32(66).fork()).ldelim();\n        }\n        for (const v of message.delegatorStartingInfos) {\n            DelegatorStartingInfoRecord.encode(v, writer.uint32(74).fork()).ldelim();\n        }\n        for (const v of message.validatorSlashEvents) {\n            ValidatorSlashEventRecord.encode(v, writer.uint32(82).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.delegatorWithdrawInfos = [];\n        message.outstandingRewards = [];\n        message.validatorAccumulatedCommissions = [];\n        message.validatorHistoricalRewards = [];\n        message.validatorCurrentRewards = [];\n        message.delegatorStartingInfos = [];\n        message.validatorSlashEvents = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.feePool = FeePool.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.delegatorWithdrawInfos.push(DelegatorWithdrawInfo.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.previousProposer = reader.string();\n                    break;\n                case 5:\n                    message.outstandingRewards.push(ValidatorOutstandingRewardsRecord.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.validatorAccumulatedCommissions.push(ValidatorAccumulatedCommissionRecord.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.validatorHistoricalRewards.push(ValidatorHistoricalRewardsRecord.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.validatorCurrentRewards.push(ValidatorCurrentRewardsRecord.decode(reader, reader.uint32()));\n                    break;\n                case 9:\n                    message.delegatorStartingInfos.push(DelegatorStartingInfoRecord.decode(reader, reader.uint32()));\n                    break;\n                case 10:\n                    message.validatorSlashEvents.push(ValidatorSlashEventRecord.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.delegatorWithdrawInfos = [];\n        message.outstandingRewards = [];\n        message.validatorAccumulatedCommissions = [];\n        message.validatorHistoricalRewards = [];\n        message.validatorCurrentRewards = [];\n        message.delegatorStartingInfos = [];\n        message.validatorSlashEvents = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.feePool !== undefined && object.feePool !== null) {\n            message.feePool = FeePool.fromJSON(object.feePool);\n        }\n        else {\n            message.feePool = undefined;\n        }\n        if (object.delegatorWithdrawInfos !== undefined && object.delegatorWithdrawInfos !== null) {\n            for (const e of object.delegatorWithdrawInfos) {\n                message.delegatorWithdrawInfos.push(DelegatorWithdrawInfo.fromJSON(e));\n            }\n        }\n        if (object.previousProposer !== undefined && object.previousProposer !== null) {\n            message.previousProposer = String(object.previousProposer);\n        }\n        else {\n            message.previousProposer = '';\n        }\n        if (object.outstandingRewards !== undefined && object.outstandingRewards !== null) {\n            for (const e of object.outstandingRewards) {\n                message.outstandingRewards.push(ValidatorOutstandingRewardsRecord.fromJSON(e));\n            }\n        }\n        if (object.validatorAccumulatedCommissions !== undefined && object.validatorAccumulatedCommissions !== null) {\n            for (const e of object.validatorAccumulatedCommissions) {\n                message.validatorAccumulatedCommissions.push(ValidatorAccumulatedCommissionRecord.fromJSON(e));\n            }\n        }\n        if (object.validatorHistoricalRewards !== undefined && object.validatorHistoricalRewards !== null) {\n            for (const e of object.validatorHistoricalRewards) {\n                message.validatorHistoricalRewards.push(ValidatorHistoricalRewardsRecord.fromJSON(e));\n            }\n        }\n        if (object.validatorCurrentRewards !== undefined && object.validatorCurrentRewards !== null) {\n            for (const e of object.validatorCurrentRewards) {\n                message.validatorCurrentRewards.push(ValidatorCurrentRewardsRecord.fromJSON(e));\n            }\n        }\n        if (object.delegatorStartingInfos !== undefined && object.delegatorStartingInfos !== null) {\n            for (const e of object.delegatorStartingInfos) {\n                message.delegatorStartingInfos.push(DelegatorStartingInfoRecord.fromJSON(e));\n            }\n        }\n        if (object.validatorSlashEvents !== undefined && object.validatorSlashEvents !== null) {\n            for (const e of object.validatorSlashEvents) {\n                message.validatorSlashEvents.push(ValidatorSlashEventRecord.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.params !== undefined && (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        message.feePool !== undefined && (obj.feePool = message.feePool ? FeePool.toJSON(message.feePool) : undefined);\n        if (message.delegatorWithdrawInfos) {\n            obj.delegatorWithdrawInfos = message.delegatorWithdrawInfos.map((e) => (e ? DelegatorWithdrawInfo.toJSON(e) : undefined));\n        }\n        else {\n            obj.delegatorWithdrawInfos = [];\n        }\n        message.previousProposer !== undefined && (obj.previousProposer = message.previousProposer);\n        if (message.outstandingRewards) {\n            obj.outstandingRewards = message.outstandingRewards.map((e) => (e ? ValidatorOutstandingRewardsRecord.toJSON(e) : undefined));\n        }\n        else {\n            obj.outstandingRewards = [];\n        }\n        if (message.validatorAccumulatedCommissions) {\n            obj.validatorAccumulatedCommissions = message.validatorAccumulatedCommissions.map((e) => (e ? ValidatorAccumulatedCommissionRecord.toJSON(e) : undefined));\n        }\n        else {\n            obj.validatorAccumulatedCommissions = [];\n        }\n        if (message.validatorHistoricalRewards) {\n            obj.validatorHistoricalRewards = message.validatorHistoricalRewards.map((e) => (e ? ValidatorHistoricalRewardsRecord.toJSON(e) : undefined));\n        }\n        else {\n            obj.validatorHistoricalRewards = [];\n        }\n        if (message.validatorCurrentRewards) {\n            obj.validatorCurrentRewards = message.validatorCurrentRewards.map((e) => (e ? ValidatorCurrentRewardsRecord.toJSON(e) : undefined));\n        }\n        else {\n            obj.validatorCurrentRewards = [];\n        }\n        if (message.delegatorStartingInfos) {\n            obj.delegatorStartingInfos = message.delegatorStartingInfos.map((e) => (e ? DelegatorStartingInfoRecord.toJSON(e) : undefined));\n        }\n        else {\n            obj.delegatorStartingInfos = [];\n        }\n        if (message.validatorSlashEvents) {\n            obj.validatorSlashEvents = message.validatorSlashEvents.map((e) => (e ? ValidatorSlashEventRecord.toJSON(e) : undefined));\n        }\n        else {\n            obj.validatorSlashEvents = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.delegatorWithdrawInfos = [];\n        message.outstandingRewards = [];\n        message.validatorAccumulatedCommissions = [];\n        message.validatorHistoricalRewards = [];\n        message.validatorCurrentRewards = [];\n        message.delegatorStartingInfos = [];\n        message.validatorSlashEvents = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.feePool !== undefined && object.feePool !== null) {\n            message.feePool = FeePool.fromPartial(object.feePool);\n        }\n        else {\n            message.feePool = undefined;\n        }\n        if (object.delegatorWithdrawInfos !== undefined && object.delegatorWithdrawInfos !== null) {\n            for (const e of object.delegatorWithdrawInfos) {\n                message.delegatorWithdrawInfos.push(DelegatorWithdrawInfo.fromPartial(e));\n            }\n        }\n        if (object.previousProposer !== undefined && object.previousProposer !== null) {\n            message.previousProposer = object.previousProposer;\n        }\n        else {\n            message.previousProposer = '';\n        }\n        if (object.outstandingRewards !== undefined && object.outstandingRewards !== null) {\n            for (const e of object.outstandingRewards) {\n                message.outstandingRewards.push(ValidatorOutstandingRewardsRecord.fromPartial(e));\n            }\n        }\n        if (object.validatorAccumulatedCommissions !== undefined && object.validatorAccumulatedCommissions !== null) {\n            for (const e of object.validatorAccumulatedCommissions) {\n                message.validatorAccumulatedCommissions.push(ValidatorAccumulatedCommissionRecord.fromPartial(e));\n            }\n        }\n        if (object.validatorHistoricalRewards !== undefined && object.validatorHistoricalRewards !== null) {\n            for (const e of object.validatorHistoricalRewards) {\n                message.validatorHistoricalRewards.push(ValidatorHistoricalRewardsRecord.fromPartial(e));\n            }\n        }\n        if (object.validatorCurrentRewards !== undefined && object.validatorCurrentRewards !== null) {\n            for (const e of object.validatorCurrentRewards) {\n                message.validatorCurrentRewards.push(ValidatorCurrentRewardsRecord.fromPartial(e));\n            }\n        }\n        if (object.delegatorStartingInfos !== undefined && object.delegatorStartingInfos !== null) {\n            for (const e of object.delegatorStartingInfos) {\n                message.delegatorStartingInfos.push(DelegatorStartingInfoRecord.fromPartial(e));\n            }\n        }\n        if (object.validatorSlashEvents !== undefined && object.validatorSlashEvents !== null) {\n            for (const e of object.validatorSlashEvents) {\n                message.validatorSlashEvents.push(ValidatorSlashEventRecord.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined && (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.base.v1beta1';\nconst baseCoin = { denom: '', amount: '' };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseDecCoin = { denom: '', amount: '' };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseIntProto = { int: '' };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== '') {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    }\n};\nconst baseDecProto = { dec: '' };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== '') {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.base.v1beta1';\nconst baseCoin = { denom: '', amount: '' };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseDecCoin = { denom: '', amount: '' };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseIntProto = { int: '' };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== '') {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    }\n};\nconst baseDecProto = { dec: '' };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== '') {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from 'protobufjs/minimal';\nimport * as Long from 'long';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nexport const protobufPackage = 'cosmos.vesting.v1beta1';\nconst baseMsgCreateVestingAccount = { fromAddress: '', toAddress: '', endTime: 0, delayed: false };\nexport const MsgCreateVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.fromAddress !== '') {\n            writer.uint32(10).string(message.fromAddress);\n        }\n        if (message.toAddress !== '') {\n            writer.uint32(18).string(message.toAddress);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.endTime !== 0) {\n            writer.uint32(32).int64(message.endTime);\n        }\n        if (message.delayed === true) {\n            writer.uint32(40).bool(message.delayed);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateVestingAccount };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.fromAddress = reader.string();\n                    break;\n                case 2:\n                    message.toAddress = reader.string();\n                    break;\n                case 3:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.endTime = longToNumber(reader.int64());\n                    break;\n                case 5:\n                    message.delayed = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateVestingAccount };\n        message.amount = [];\n        if (object.fromAddress !== undefined && object.fromAddress !== null) {\n            message.fromAddress = String(object.fromAddress);\n        }\n        else {\n            message.fromAddress = '';\n        }\n        if (object.toAddress !== undefined && object.toAddress !== null) {\n            message.toAddress = String(object.toAddress);\n        }\n        else {\n            message.toAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.endTime !== undefined && object.endTime !== null) {\n            message.endTime = Number(object.endTime);\n        }\n        else {\n            message.endTime = 0;\n        }\n        if (object.delayed !== undefined && object.delayed !== null) {\n            message.delayed = Boolean(object.delayed);\n        }\n        else {\n            message.delayed = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.fromAddress !== undefined && (obj.fromAddress = message.fromAddress);\n        message.toAddress !== undefined && (obj.toAddress = message.toAddress);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        message.endTime !== undefined && (obj.endTime = message.endTime);\n        message.delayed !== undefined && (obj.delayed = message.delayed);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateVestingAccount };\n        message.amount = [];\n        if (object.fromAddress !== undefined && object.fromAddress !== null) {\n            message.fromAddress = object.fromAddress;\n        }\n        else {\n            message.fromAddress = '';\n        }\n        if (object.toAddress !== undefined && object.toAddress !== null) {\n            message.toAddress = object.toAddress;\n        }\n        else {\n            message.toAddress = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.endTime !== undefined && object.endTime !== null) {\n            message.endTime = object.endTime;\n        }\n        else {\n            message.endTime = 0;\n        }\n        if (object.delayed !== undefined && object.delayed !== null) {\n            message.delayed = object.delayed;\n        }\n        else {\n            message.delayed = false;\n        }\n        return message;\n    }\n};\nconst baseMsgCreateVestingAccountResponse = {};\nexport const MsgCreateVestingAccountResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateVestingAccountResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgCreateVestingAccountResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgCreateVestingAccountResponse };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    CreateVestingAccount(request) {\n        const data = MsgCreateVestingAccount.encode(request).finish();\n        const promise = this.rpc.request('cosmos.vesting.v1beta1.Msg', 'CreateVestingAccount', data);\n        return promise.then((data) => MsgCreateVestingAccountResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.base.v1beta1';\nconst baseCoin = { denom: '', amount: '' };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseDecCoin = { denom: '', amount: '' };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseIntProto = { int: '' };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== '') {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    }\n};\nconst baseDecProto = { dec: '' };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== '') {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport { Reader, Writer } from 'protobufjs/minimal';\nimport { Grant } from '../../../cosmos/authz/v1beta1/authz';\nimport { Any } from '../../../google/protobuf/any';\nexport const protobufPackage = 'cosmos.authz.v1beta1';\nconst baseMsgGrant = { granter: '', grantee: '' };\nexport const MsgGrant = {\n    encode(message, writer = Writer.create()) {\n        if (message.granter !== '') {\n            writer.uint32(10).string(message.granter);\n        }\n        if (message.grantee !== '') {\n            writer.uint32(18).string(message.grantee);\n        }\n        if (message.grant !== undefined) {\n            Grant.encode(message.grant, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgGrant };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.granter = reader.string();\n                    break;\n                case 2:\n                    message.grantee = reader.string();\n                    break;\n                case 3:\n                    message.grant = Grant.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgGrant };\n        if (object.granter !== undefined && object.granter !== null) {\n            message.granter = String(object.granter);\n        }\n        else {\n            message.granter = '';\n        }\n        if (object.grantee !== undefined && object.grantee !== null) {\n            message.grantee = String(object.grantee);\n        }\n        else {\n            message.grantee = '';\n        }\n        if (object.grant !== undefined && object.grant !== null) {\n            message.grant = Grant.fromJSON(object.grant);\n        }\n        else {\n            message.grant = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.granter !== undefined && (obj.granter = message.granter);\n        message.grantee !== undefined && (obj.grantee = message.grantee);\n        message.grant !== undefined && (obj.grant = message.grant ? Grant.toJSON(message.grant) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgGrant };\n        if (object.granter !== undefined && object.granter !== null) {\n            message.granter = object.granter;\n        }\n        else {\n            message.granter = '';\n        }\n        if (object.grantee !== undefined && object.grantee !== null) {\n            message.grantee = object.grantee;\n        }\n        else {\n            message.grantee = '';\n        }\n        if (object.grant !== undefined && object.grant !== null) {\n            message.grant = Grant.fromPartial(object.grant);\n        }\n        else {\n            message.grant = undefined;\n        }\n        return message;\n    }\n};\nconst baseMsgExecResponse = {};\nexport const MsgExecResponse = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.results) {\n            writer.uint32(10).bytes(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgExecResponse };\n        message.results = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.results.push(reader.bytes());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgExecResponse };\n        message.results = [];\n        if (object.results !== undefined && object.results !== null) {\n            for (const e of object.results) {\n                message.results.push(bytesFromBase64(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.results) {\n            obj.results = message.results.map((e) => base64FromBytes(e !== undefined ? e : new Uint8Array()));\n        }\n        else {\n            obj.results = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgExecResponse };\n        message.results = [];\n        if (object.results !== undefined && object.results !== null) {\n            for (const e of object.results) {\n                message.results.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseMsgExec = { grantee: '' };\nexport const MsgExec = {\n    encode(message, writer = Writer.create()) {\n        if (message.grantee !== '') {\n            writer.uint32(10).string(message.grantee);\n        }\n        for (const v of message.msgs) {\n            Any.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgExec };\n        message.msgs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.grantee = reader.string();\n                    break;\n                case 2:\n                    message.msgs.push(Any.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgExec };\n        message.msgs = [];\n        if (object.grantee !== undefined && object.grantee !== null) {\n            message.grantee = String(object.grantee);\n        }\n        else {\n            message.grantee = '';\n        }\n        if (object.msgs !== undefined && object.msgs !== null) {\n            for (const e of object.msgs) {\n                message.msgs.push(Any.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.grantee !== undefined && (obj.grantee = message.grantee);\n        if (message.msgs) {\n            obj.msgs = message.msgs.map((e) => (e ? Any.toJSON(e) : undefined));\n        }\n        else {\n            obj.msgs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgExec };\n        message.msgs = [];\n        if (object.grantee !== undefined && object.grantee !== null) {\n            message.grantee = object.grantee;\n        }\n        else {\n            message.grantee = '';\n        }\n        if (object.msgs !== undefined && object.msgs !== null) {\n            for (const e of object.msgs) {\n                message.msgs.push(Any.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseMsgGrantResponse = {};\nexport const MsgGrantResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgGrantResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgGrantResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgGrantResponse };\n        return message;\n    }\n};\nconst baseMsgRevoke = { granter: '', grantee: '', msgTypeUrl: '' };\nexport const MsgRevoke = {\n    encode(message, writer = Writer.create()) {\n        if (message.granter !== '') {\n            writer.uint32(10).string(message.granter);\n        }\n        if (message.grantee !== '') {\n            writer.uint32(18).string(message.grantee);\n        }\n        if (message.msgTypeUrl !== '') {\n            writer.uint32(26).string(message.msgTypeUrl);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRevoke };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.granter = reader.string();\n                    break;\n                case 2:\n                    message.grantee = reader.string();\n                    break;\n                case 3:\n                    message.msgTypeUrl = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRevoke };\n        if (object.granter !== undefined && object.granter !== null) {\n            message.granter = String(object.granter);\n        }\n        else {\n            message.granter = '';\n        }\n        if (object.grantee !== undefined && object.grantee !== null) {\n            message.grantee = String(object.grantee);\n        }\n        else {\n            message.grantee = '';\n        }\n        if (object.msgTypeUrl !== undefined && object.msgTypeUrl !== null) {\n            message.msgTypeUrl = String(object.msgTypeUrl);\n        }\n        else {\n            message.msgTypeUrl = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.granter !== undefined && (obj.granter = message.granter);\n        message.grantee !== undefined && (obj.grantee = message.grantee);\n        message.msgTypeUrl !== undefined && (obj.msgTypeUrl = message.msgTypeUrl);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRevoke };\n        if (object.granter !== undefined && object.granter !== null) {\n            message.granter = object.granter;\n        }\n        else {\n            message.granter = '';\n        }\n        if (object.grantee !== undefined && object.grantee !== null) {\n            message.grantee = object.grantee;\n        }\n        else {\n            message.grantee = '';\n        }\n        if (object.msgTypeUrl !== undefined && object.msgTypeUrl !== null) {\n            message.msgTypeUrl = object.msgTypeUrl;\n        }\n        else {\n            message.msgTypeUrl = '';\n        }\n        return message;\n    }\n};\nconst baseMsgRevokeResponse = {};\nexport const MsgRevokeResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRevokeResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgRevokeResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgRevokeResponse };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    Grant(request) {\n        const data = MsgGrant.encode(request).finish();\n        const promise = this.rpc.request('cosmos.authz.v1beta1.Msg', 'Grant', data);\n        return promise.then((data) => MsgGrantResponse.decode(new Reader(data)));\n    }\n    Exec(request) {\n        const data = MsgExec.encode(request).finish();\n        const promise = this.rpc.request('cosmos.authz.v1beta1.Msg', 'Exec', data);\n        return promise.then((data) => MsgExecResponse.decode(new Reader(data)));\n    }\n    Revoke(request) {\n        const data = MsgRevoke.encode(request).finish();\n        const promise = this.rpc.request('cosmos.authz.v1beta1.Msg', 'Revoke', data);\n        return promise.then((data) => MsgRevokeResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseDuration = { seconds: 0, nanos: 0 };\nexport const Duration = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDuration };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Any } from '../../../google/protobuf/any';\nexport const protobufPackage = 'cosmos.auth.v1beta1';\nconst baseBaseAccount = { address: '', accountNumber: 0, sequence: 0 };\nexport const BaseAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.pubKey !== undefined) {\n            Any.encode(message.pubKey, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.accountNumber !== 0) {\n            writer.uint32(24).uint64(message.accountNumber);\n        }\n        if (message.sequence !== 0) {\n            writer.uint32(32).uint64(message.sequence);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBaseAccount };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.pubKey = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.accountNumber = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.sequence = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBaseAccount };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = Any.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.accountNumber !== undefined && object.accountNumber !== null) {\n            message.accountNumber = Number(object.accountNumber);\n        }\n        else {\n            message.accountNumber = 0;\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = Number(object.sequence);\n        }\n        else {\n            message.sequence = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.pubKey !== undefined && (obj.pubKey = message.pubKey ? Any.toJSON(message.pubKey) : undefined);\n        message.accountNumber !== undefined && (obj.accountNumber = message.accountNumber);\n        message.sequence !== undefined && (obj.sequence = message.sequence);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBaseAccount };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = Any.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.accountNumber !== undefined && object.accountNumber !== null) {\n            message.accountNumber = object.accountNumber;\n        }\n        else {\n            message.accountNumber = 0;\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = object.sequence;\n        }\n        else {\n            message.sequence = 0;\n        }\n        return message;\n    }\n};\nconst baseModuleAccount = { name: '', permissions: '' };\nexport const ModuleAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseAccount !== undefined) {\n            BaseAccount.encode(message.baseAccount, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.name !== '') {\n            writer.uint32(18).string(message.name);\n        }\n        for (const v of message.permissions) {\n            writer.uint32(26).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseModuleAccount };\n        message.permissions = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseAccount = BaseAccount.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.name = reader.string();\n                    break;\n                case 3:\n                    message.permissions.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseModuleAccount };\n        message.permissions = [];\n        if (object.baseAccount !== undefined && object.baseAccount !== null) {\n            message.baseAccount = BaseAccount.fromJSON(object.baseAccount);\n        }\n        else {\n            message.baseAccount = undefined;\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.permissions !== undefined && object.permissions !== null) {\n            for (const e of object.permissions) {\n                message.permissions.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseAccount !== undefined && (obj.baseAccount = message.baseAccount ? BaseAccount.toJSON(message.baseAccount) : undefined);\n        message.name !== undefined && (obj.name = message.name);\n        if (message.permissions) {\n            obj.permissions = message.permissions.map((e) => e);\n        }\n        else {\n            obj.permissions = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseModuleAccount };\n        message.permissions = [];\n        if (object.baseAccount !== undefined && object.baseAccount !== null) {\n            message.baseAccount = BaseAccount.fromPartial(object.baseAccount);\n        }\n        else {\n            message.baseAccount = undefined;\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.permissions !== undefined && object.permissions !== null) {\n            for (const e of object.permissions) {\n                message.permissions.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseParams = { maxMemoCharacters: 0, txSigLimit: 0, txSizeCostPerByte: 0, sigVerifyCostEd25519: 0, sigVerifyCostSecp256k1: 0 };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.maxMemoCharacters !== 0) {\n            writer.uint32(8).uint64(message.maxMemoCharacters);\n        }\n        if (message.txSigLimit !== 0) {\n            writer.uint32(16).uint64(message.txSigLimit);\n        }\n        if (message.txSizeCostPerByte !== 0) {\n            writer.uint32(24).uint64(message.txSizeCostPerByte);\n        }\n        if (message.sigVerifyCostEd25519 !== 0) {\n            writer.uint32(32).uint64(message.sigVerifyCostEd25519);\n        }\n        if (message.sigVerifyCostSecp256k1 !== 0) {\n            writer.uint32(40).uint64(message.sigVerifyCostSecp256k1);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.maxMemoCharacters = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.txSigLimit = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.txSizeCostPerByte = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.sigVerifyCostEd25519 = longToNumber(reader.uint64());\n                    break;\n                case 5:\n                    message.sigVerifyCostSecp256k1 = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.maxMemoCharacters !== undefined && object.maxMemoCharacters !== null) {\n            message.maxMemoCharacters = Number(object.maxMemoCharacters);\n        }\n        else {\n            message.maxMemoCharacters = 0;\n        }\n        if (object.txSigLimit !== undefined && object.txSigLimit !== null) {\n            message.txSigLimit = Number(object.txSigLimit);\n        }\n        else {\n            message.txSigLimit = 0;\n        }\n        if (object.txSizeCostPerByte !== undefined && object.txSizeCostPerByte !== null) {\n            message.txSizeCostPerByte = Number(object.txSizeCostPerByte);\n        }\n        else {\n            message.txSizeCostPerByte = 0;\n        }\n        if (object.sigVerifyCostEd25519 !== undefined && object.sigVerifyCostEd25519 !== null) {\n            message.sigVerifyCostEd25519 = Number(object.sigVerifyCostEd25519);\n        }\n        else {\n            message.sigVerifyCostEd25519 = 0;\n        }\n        if (object.sigVerifyCostSecp256k1 !== undefined && object.sigVerifyCostSecp256k1 !== null) {\n            message.sigVerifyCostSecp256k1 = Number(object.sigVerifyCostSecp256k1);\n        }\n        else {\n            message.sigVerifyCostSecp256k1 = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.maxMemoCharacters !== undefined && (obj.maxMemoCharacters = message.maxMemoCharacters);\n        message.txSigLimit !== undefined && (obj.txSigLimit = message.txSigLimit);\n        message.txSizeCostPerByte !== undefined && (obj.txSizeCostPerByte = message.txSizeCostPerByte);\n        message.sigVerifyCostEd25519 !== undefined && (obj.sigVerifyCostEd25519 = message.sigVerifyCostEd25519);\n        message.sigVerifyCostSecp256k1 !== undefined && (obj.sigVerifyCostSecp256k1 = message.sigVerifyCostSecp256k1);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.maxMemoCharacters !== undefined && object.maxMemoCharacters !== null) {\n            message.maxMemoCharacters = object.maxMemoCharacters;\n        }\n        else {\n            message.maxMemoCharacters = 0;\n        }\n        if (object.txSigLimit !== undefined && object.txSigLimit !== null) {\n            message.txSigLimit = object.txSigLimit;\n        }\n        else {\n            message.txSigLimit = 0;\n        }\n        if (object.txSizeCostPerByte !== undefined && object.txSizeCostPerByte !== null) {\n            message.txSizeCostPerByte = object.txSizeCostPerByte;\n        }\n        else {\n            message.txSizeCostPerByte = 0;\n        }\n        if (object.sigVerifyCostEd25519 !== undefined && object.sigVerifyCostEd25519 !== null) {\n            message.sigVerifyCostEd25519 = object.sigVerifyCostEd25519;\n        }\n        else {\n            message.sigVerifyCostEd25519 = 0;\n        }\n        if (object.sigVerifyCostSecp256k1 !== undefined && object.sigVerifyCostSecp256k1 !== null) {\n            message.sigVerifyCostSecp256k1 = object.sigVerifyCostSecp256k1;\n        }\n        else {\n            message.sigVerifyCostSecp256k1 = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Timestamp } from '../../../google/protobuf/timestamp';\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nimport { Any } from '../../../google/protobuf/any';\nimport { Duration } from '../../../google/protobuf/duration';\nexport const protobufPackage = 'cosmos.gov.v1beta1';\n/** VoteOption enumerates the valid vote options for a given governance proposal. */\nexport var VoteOption;\n(function (VoteOption) {\n    /** VOTE_OPTION_UNSPECIFIED - VOTE_OPTION_UNSPECIFIED defines a no-op vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_UNSPECIFIED\"] = 0] = \"VOTE_OPTION_UNSPECIFIED\";\n    /** VOTE_OPTION_YES - VOTE_OPTION_YES defines a yes vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_YES\"] = 1] = \"VOTE_OPTION_YES\";\n    /** VOTE_OPTION_ABSTAIN - VOTE_OPTION_ABSTAIN defines an abstain vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_ABSTAIN\"] = 2] = \"VOTE_OPTION_ABSTAIN\";\n    /** VOTE_OPTION_NO - VOTE_OPTION_NO defines a no vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_NO\"] = 3] = \"VOTE_OPTION_NO\";\n    /** VOTE_OPTION_NO_WITH_VETO - VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_NO_WITH_VETO\"] = 4] = \"VOTE_OPTION_NO_WITH_VETO\";\n    VoteOption[VoteOption[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(VoteOption || (VoteOption = {}));\nexport function voteOptionFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'VOTE_OPTION_UNSPECIFIED':\n            return VoteOption.VOTE_OPTION_UNSPECIFIED;\n        case 1:\n        case 'VOTE_OPTION_YES':\n            return VoteOption.VOTE_OPTION_YES;\n        case 2:\n        case 'VOTE_OPTION_ABSTAIN':\n            return VoteOption.VOTE_OPTION_ABSTAIN;\n        case 3:\n        case 'VOTE_OPTION_NO':\n            return VoteOption.VOTE_OPTION_NO;\n        case 4:\n        case 'VOTE_OPTION_NO_WITH_VETO':\n            return VoteOption.VOTE_OPTION_NO_WITH_VETO;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return VoteOption.UNRECOGNIZED;\n    }\n}\nexport function voteOptionToJSON(object) {\n    switch (object) {\n        case VoteOption.VOTE_OPTION_UNSPECIFIED:\n            return 'VOTE_OPTION_UNSPECIFIED';\n        case VoteOption.VOTE_OPTION_YES:\n            return 'VOTE_OPTION_YES';\n        case VoteOption.VOTE_OPTION_ABSTAIN:\n            return 'VOTE_OPTION_ABSTAIN';\n        case VoteOption.VOTE_OPTION_NO:\n            return 'VOTE_OPTION_NO';\n        case VoteOption.VOTE_OPTION_NO_WITH_VETO:\n            return 'VOTE_OPTION_NO_WITH_VETO';\n        default:\n            return 'UNKNOWN';\n    }\n}\n/** ProposalStatus enumerates the valid statuses of a proposal. */\nexport var ProposalStatus;\n(function (ProposalStatus) {\n    /** PROPOSAL_STATUS_UNSPECIFIED - PROPOSAL_STATUS_UNSPECIFIED defines the default propopsal status. */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_UNSPECIFIED\"] = 0] = \"PROPOSAL_STATUS_UNSPECIFIED\";\n    /**\n     * PROPOSAL_STATUS_DEPOSIT_PERIOD - PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit\n     * period.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_DEPOSIT_PERIOD\"] = 1] = \"PROPOSAL_STATUS_DEPOSIT_PERIOD\";\n    /**\n     * PROPOSAL_STATUS_VOTING_PERIOD - PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting\n     * period.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_VOTING_PERIOD\"] = 2] = \"PROPOSAL_STATUS_VOTING_PERIOD\";\n    /**\n     * PROPOSAL_STATUS_PASSED - PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has\n     * passed.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_PASSED\"] = 3] = \"PROPOSAL_STATUS_PASSED\";\n    /**\n     * PROPOSAL_STATUS_REJECTED - PROPOSAL_STATUS_REJECTED defines a proposal status of a proposal that has\n     * been rejected.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_REJECTED\"] = 4] = \"PROPOSAL_STATUS_REJECTED\";\n    /**\n     * PROPOSAL_STATUS_FAILED - PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has\n     * failed.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_FAILED\"] = 5] = \"PROPOSAL_STATUS_FAILED\";\n    ProposalStatus[ProposalStatus[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(ProposalStatus || (ProposalStatus = {}));\nexport function proposalStatusFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'PROPOSAL_STATUS_UNSPECIFIED':\n            return ProposalStatus.PROPOSAL_STATUS_UNSPECIFIED;\n        case 1:\n        case 'PROPOSAL_STATUS_DEPOSIT_PERIOD':\n            return ProposalStatus.PROPOSAL_STATUS_DEPOSIT_PERIOD;\n        case 2:\n        case 'PROPOSAL_STATUS_VOTING_PERIOD':\n            return ProposalStatus.PROPOSAL_STATUS_VOTING_PERIOD;\n        case 3:\n        case 'PROPOSAL_STATUS_PASSED':\n            return ProposalStatus.PROPOSAL_STATUS_PASSED;\n        case 4:\n        case 'PROPOSAL_STATUS_REJECTED':\n            return ProposalStatus.PROPOSAL_STATUS_REJECTED;\n        case 5:\n        case 'PROPOSAL_STATUS_FAILED':\n            return ProposalStatus.PROPOSAL_STATUS_FAILED;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return ProposalStatus.UNRECOGNIZED;\n    }\n}\nexport function proposalStatusToJSON(object) {\n    switch (object) {\n        case ProposalStatus.PROPOSAL_STATUS_UNSPECIFIED:\n            return 'PROPOSAL_STATUS_UNSPECIFIED';\n        case ProposalStatus.PROPOSAL_STATUS_DEPOSIT_PERIOD:\n            return 'PROPOSAL_STATUS_DEPOSIT_PERIOD';\n        case ProposalStatus.PROPOSAL_STATUS_VOTING_PERIOD:\n            return 'PROPOSAL_STATUS_VOTING_PERIOD';\n        case ProposalStatus.PROPOSAL_STATUS_PASSED:\n            return 'PROPOSAL_STATUS_PASSED';\n        case ProposalStatus.PROPOSAL_STATUS_REJECTED:\n            return 'PROPOSAL_STATUS_REJECTED';\n        case ProposalStatus.PROPOSAL_STATUS_FAILED:\n            return 'PROPOSAL_STATUS_FAILED';\n        default:\n            return 'UNKNOWN';\n    }\n}\nconst baseWeightedVoteOption = { option: 0, weight: '' };\nexport const WeightedVoteOption = {\n    encode(message, writer = Writer.create()) {\n        if (message.option !== 0) {\n            writer.uint32(8).int32(message.option);\n        }\n        if (message.weight !== '') {\n            writer.uint32(18).string(message.weight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseWeightedVoteOption };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.option = reader.int32();\n                    break;\n                case 2:\n                    message.weight = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseWeightedVoteOption };\n        if (object.option !== undefined && object.option !== null) {\n            message.option = voteOptionFromJSON(object.option);\n        }\n        else {\n            message.option = 0;\n        }\n        if (object.weight !== undefined && object.weight !== null) {\n            message.weight = String(object.weight);\n        }\n        else {\n            message.weight = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.option !== undefined && (obj.option = voteOptionToJSON(message.option));\n        message.weight !== undefined && (obj.weight = message.weight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseWeightedVoteOption };\n        if (object.option !== undefined && object.option !== null) {\n            message.option = object.option;\n        }\n        else {\n            message.option = 0;\n        }\n        if (object.weight !== undefined && object.weight !== null) {\n            message.weight = object.weight;\n        }\n        else {\n            message.weight = '';\n        }\n        return message;\n    }\n};\nconst baseTextProposal = { title: '', description: '' };\nexport const TextProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== '') {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== '') {\n            writer.uint32(18).string(message.description);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTextProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTextProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined && (obj.description = message.description);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTextProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        return message;\n    }\n};\nconst baseDeposit = { proposalId: 0, depositor: '' };\nexport const Deposit = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.depositor !== '') {\n            writer.uint32(18).string(message.depositor);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDeposit };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.depositor = reader.string();\n                    break;\n                case 3:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDeposit };\n        message.amount = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = String(object.depositor);\n        }\n        else {\n            message.depositor = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.depositor !== undefined && (obj.depositor = message.depositor);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDeposit };\n        message.amount = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = object.depositor;\n        }\n        else {\n            message.depositor = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseProposal = { proposalId: 0, status: 0 };\nexport const Proposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.content !== undefined) {\n            Any.encode(message.content, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.status !== 0) {\n            writer.uint32(24).int32(message.status);\n        }\n        if (message.finalTallyResult !== undefined) {\n            TallyResult.encode(message.finalTallyResult, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.submitTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.submitTime), writer.uint32(42).fork()).ldelim();\n        }\n        if (message.depositEndTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.depositEndTime), writer.uint32(50).fork()).ldelim();\n        }\n        for (const v of message.totalDeposit) {\n            Coin.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.votingStartTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.votingStartTime), writer.uint32(66).fork()).ldelim();\n        }\n        if (message.votingEndTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.votingEndTime), writer.uint32(74).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProposal };\n        message.totalDeposit = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.content = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.status = reader.int32();\n                    break;\n                case 4:\n                    message.finalTallyResult = TallyResult.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.submitTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.depositEndTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.totalDeposit.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.votingStartTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 9:\n                    message.votingEndTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProposal };\n        message.totalDeposit = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.content !== undefined && object.content !== null) {\n            message.content = Any.fromJSON(object.content);\n        }\n        else {\n            message.content = undefined;\n        }\n        if (object.status !== undefined && object.status !== null) {\n            message.status = proposalStatusFromJSON(object.status);\n        }\n        else {\n            message.status = 0;\n        }\n        if (object.finalTallyResult !== undefined && object.finalTallyResult !== null) {\n            message.finalTallyResult = TallyResult.fromJSON(object.finalTallyResult);\n        }\n        else {\n            message.finalTallyResult = undefined;\n        }\n        if (object.submitTime !== undefined && object.submitTime !== null) {\n            message.submitTime = fromJsonTimestamp(object.submitTime);\n        }\n        else {\n            message.submitTime = undefined;\n        }\n        if (object.depositEndTime !== undefined && object.depositEndTime !== null) {\n            message.depositEndTime = fromJsonTimestamp(object.depositEndTime);\n        }\n        else {\n            message.depositEndTime = undefined;\n        }\n        if (object.totalDeposit !== undefined && object.totalDeposit !== null) {\n            for (const e of object.totalDeposit) {\n                message.totalDeposit.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.votingStartTime !== undefined && object.votingStartTime !== null) {\n            message.votingStartTime = fromJsonTimestamp(object.votingStartTime);\n        }\n        else {\n            message.votingStartTime = undefined;\n        }\n        if (object.votingEndTime !== undefined && object.votingEndTime !== null) {\n            message.votingEndTime = fromJsonTimestamp(object.votingEndTime);\n        }\n        else {\n            message.votingEndTime = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.content !== undefined && (obj.content = message.content ? Any.toJSON(message.content) : undefined);\n        message.status !== undefined && (obj.status = proposalStatusToJSON(message.status));\n        message.finalTallyResult !== undefined && (obj.finalTallyResult = message.finalTallyResult ? TallyResult.toJSON(message.finalTallyResult) : undefined);\n        message.submitTime !== undefined && (obj.submitTime = message.submitTime !== undefined ? message.submitTime.toISOString() : null);\n        message.depositEndTime !== undefined && (obj.depositEndTime = message.depositEndTime !== undefined ? message.depositEndTime.toISOString() : null);\n        if (message.totalDeposit) {\n            obj.totalDeposit = message.totalDeposit.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.totalDeposit = [];\n        }\n        message.votingStartTime !== undefined && (obj.votingStartTime = message.votingStartTime !== undefined ? message.votingStartTime.toISOString() : null);\n        message.votingEndTime !== undefined && (obj.votingEndTime = message.votingEndTime !== undefined ? message.votingEndTime.toISOString() : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProposal };\n        message.totalDeposit = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.content !== undefined && object.content !== null) {\n            message.content = Any.fromPartial(object.content);\n        }\n        else {\n            message.content = undefined;\n        }\n        if (object.status !== undefined && object.status !== null) {\n            message.status = object.status;\n        }\n        else {\n            message.status = 0;\n        }\n        if (object.finalTallyResult !== undefined && object.finalTallyResult !== null) {\n            message.finalTallyResult = TallyResult.fromPartial(object.finalTallyResult);\n        }\n        else {\n            message.finalTallyResult = undefined;\n        }\n        if (object.submitTime !== undefined && object.submitTime !== null) {\n            message.submitTime = object.submitTime;\n        }\n        else {\n            message.submitTime = undefined;\n        }\n        if (object.depositEndTime !== undefined && object.depositEndTime !== null) {\n            message.depositEndTime = object.depositEndTime;\n        }\n        else {\n            message.depositEndTime = undefined;\n        }\n        if (object.totalDeposit !== undefined && object.totalDeposit !== null) {\n            for (const e of object.totalDeposit) {\n                message.totalDeposit.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.votingStartTime !== undefined && object.votingStartTime !== null) {\n            message.votingStartTime = object.votingStartTime;\n        }\n        else {\n            message.votingStartTime = undefined;\n        }\n        if (object.votingEndTime !== undefined && object.votingEndTime !== null) {\n            message.votingEndTime = object.votingEndTime;\n        }\n        else {\n            message.votingEndTime = undefined;\n        }\n        return message;\n    }\n};\nconst baseTallyResult = { yes: '', abstain: '', no: '', noWithVeto: '' };\nexport const TallyResult = {\n    encode(message, writer = Writer.create()) {\n        if (message.yes !== '') {\n            writer.uint32(10).string(message.yes);\n        }\n        if (message.abstain !== '') {\n            writer.uint32(18).string(message.abstain);\n        }\n        if (message.no !== '') {\n            writer.uint32(26).string(message.no);\n        }\n        if (message.noWithVeto !== '') {\n            writer.uint32(34).string(message.noWithVeto);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTallyResult };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.yes = reader.string();\n                    break;\n                case 2:\n                    message.abstain = reader.string();\n                    break;\n                case 3:\n                    message.no = reader.string();\n                    break;\n                case 4:\n                    message.noWithVeto = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTallyResult };\n        if (object.yes !== undefined && object.yes !== null) {\n            message.yes = String(object.yes);\n        }\n        else {\n            message.yes = '';\n        }\n        if (object.abstain !== undefined && object.abstain !== null) {\n            message.abstain = String(object.abstain);\n        }\n        else {\n            message.abstain = '';\n        }\n        if (object.no !== undefined && object.no !== null) {\n            message.no = String(object.no);\n        }\n        else {\n            message.no = '';\n        }\n        if (object.noWithVeto !== undefined && object.noWithVeto !== null) {\n            message.noWithVeto = String(object.noWithVeto);\n        }\n        else {\n            message.noWithVeto = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.yes !== undefined && (obj.yes = message.yes);\n        message.abstain !== undefined && (obj.abstain = message.abstain);\n        message.no !== undefined && (obj.no = message.no);\n        message.noWithVeto !== undefined && (obj.noWithVeto = message.noWithVeto);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTallyResult };\n        if (object.yes !== undefined && object.yes !== null) {\n            message.yes = object.yes;\n        }\n        else {\n            message.yes = '';\n        }\n        if (object.abstain !== undefined && object.abstain !== null) {\n            message.abstain = object.abstain;\n        }\n        else {\n            message.abstain = '';\n        }\n        if (object.no !== undefined && object.no !== null) {\n            message.no = object.no;\n        }\n        else {\n            message.no = '';\n        }\n        if (object.noWithVeto !== undefined && object.noWithVeto !== null) {\n            message.noWithVeto = object.noWithVeto;\n        }\n        else {\n            message.noWithVeto = '';\n        }\n        return message;\n    }\n};\nconst baseVote = { proposalId: 0, voter: '', option: 0 };\nexport const Vote = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.voter !== '') {\n            writer.uint32(18).string(message.voter);\n        }\n        if (message.option !== 0) {\n            writer.uint32(24).int32(message.option);\n        }\n        for (const v of message.options) {\n            WeightedVoteOption.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVote };\n        message.options = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.voter = reader.string();\n                    break;\n                case 3:\n                    message.option = reader.int32();\n                    break;\n                case 4:\n                    message.options.push(WeightedVoteOption.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVote };\n        message.options = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.voter !== undefined && object.voter !== null) {\n            message.voter = String(object.voter);\n        }\n        else {\n            message.voter = '';\n        }\n        if (object.option !== undefined && object.option !== null) {\n            message.option = voteOptionFromJSON(object.option);\n        }\n        else {\n            message.option = 0;\n        }\n        if (object.options !== undefined && object.options !== null) {\n            for (const e of object.options) {\n                message.options.push(WeightedVoteOption.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.voter !== undefined && (obj.voter = message.voter);\n        message.option !== undefined && (obj.option = voteOptionToJSON(message.option));\n        if (message.options) {\n            obj.options = message.options.map((e) => (e ? WeightedVoteOption.toJSON(e) : undefined));\n        }\n        else {\n            obj.options = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVote };\n        message.options = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.voter !== undefined && object.voter !== null) {\n            message.voter = object.voter;\n        }\n        else {\n            message.voter = '';\n        }\n        if (object.option !== undefined && object.option !== null) {\n            message.option = object.option;\n        }\n        else {\n            message.option = 0;\n        }\n        if (object.options !== undefined && object.options !== null) {\n            for (const e of object.options) {\n                message.options.push(WeightedVoteOption.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseDepositParams = {};\nexport const DepositParams = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.minDeposit) {\n            Coin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.maxDepositPeriod !== undefined) {\n            Duration.encode(message.maxDepositPeriod, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDepositParams };\n        message.minDeposit = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.minDeposit.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.maxDepositPeriod = Duration.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDepositParams };\n        message.minDeposit = [];\n        if (object.minDeposit !== undefined && object.minDeposit !== null) {\n            for (const e of object.minDeposit) {\n                message.minDeposit.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.maxDepositPeriod !== undefined && object.maxDepositPeriod !== null) {\n            message.maxDepositPeriod = Duration.fromJSON(object.maxDepositPeriod);\n        }\n        else {\n            message.maxDepositPeriod = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.minDeposit) {\n            obj.minDeposit = message.minDeposit.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.minDeposit = [];\n        }\n        message.maxDepositPeriod !== undefined && (obj.maxDepositPeriod = message.maxDepositPeriod ? Duration.toJSON(message.maxDepositPeriod) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDepositParams };\n        message.minDeposit = [];\n        if (object.minDeposit !== undefined && object.minDeposit !== null) {\n            for (const e of object.minDeposit) {\n                message.minDeposit.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.maxDepositPeriod !== undefined && object.maxDepositPeriod !== null) {\n            message.maxDepositPeriod = Duration.fromPartial(object.maxDepositPeriod);\n        }\n        else {\n            message.maxDepositPeriod = undefined;\n        }\n        return message;\n    }\n};\nconst baseVotingParams = {};\nexport const VotingParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.votingPeriod !== undefined) {\n            Duration.encode(message.votingPeriod, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVotingParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.votingPeriod = Duration.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVotingParams };\n        if (object.votingPeriod !== undefined && object.votingPeriod !== null) {\n            message.votingPeriod = Duration.fromJSON(object.votingPeriod);\n        }\n        else {\n            message.votingPeriod = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.votingPeriod !== undefined && (obj.votingPeriod = message.votingPeriod ? Duration.toJSON(message.votingPeriod) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVotingParams };\n        if (object.votingPeriod !== undefined && object.votingPeriod !== null) {\n            message.votingPeriod = Duration.fromPartial(object.votingPeriod);\n        }\n        else {\n            message.votingPeriod = undefined;\n        }\n        return message;\n    }\n};\nconst baseTallyParams = {};\nexport const TallyParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.quorum.length !== 0) {\n            writer.uint32(10).bytes(message.quorum);\n        }\n        if (message.threshold.length !== 0) {\n            writer.uint32(18).bytes(message.threshold);\n        }\n        if (message.vetoThreshold.length !== 0) {\n            writer.uint32(26).bytes(message.vetoThreshold);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTallyParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.quorum = reader.bytes();\n                    break;\n                case 2:\n                    message.threshold = reader.bytes();\n                    break;\n                case 3:\n                    message.vetoThreshold = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTallyParams };\n        if (object.quorum !== undefined && object.quorum !== null) {\n            message.quorum = bytesFromBase64(object.quorum);\n        }\n        if (object.threshold !== undefined && object.threshold !== null) {\n            message.threshold = bytesFromBase64(object.threshold);\n        }\n        if (object.vetoThreshold !== undefined && object.vetoThreshold !== null) {\n            message.vetoThreshold = bytesFromBase64(object.vetoThreshold);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.quorum !== undefined && (obj.quorum = base64FromBytes(message.quorum !== undefined ? message.quorum : new Uint8Array()));\n        message.threshold !== undefined && (obj.threshold = base64FromBytes(message.threshold !== undefined ? message.threshold : new Uint8Array()));\n        message.vetoThreshold !== undefined && (obj.vetoThreshold = base64FromBytes(message.vetoThreshold !== undefined ? message.vetoThreshold : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTallyParams };\n        if (object.quorum !== undefined && object.quorum !== null) {\n            message.quorum = object.quorum;\n        }\n        else {\n            message.quorum = new Uint8Array();\n        }\n        if (object.threshold !== undefined && object.threshold !== null) {\n            message.threshold = object.threshold;\n        }\n        else {\n            message.threshold = new Uint8Array();\n        }\n        if (object.vetoThreshold !== undefined && object.vetoThreshold !== null) {\n            message.vetoThreshold = object.vetoThreshold;\n        }\n        else {\n            message.vetoThreshold = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'ElectronicSignaturesIndustries.anconprotocol.anconprotocol';\nconst baseDIDOwner = { identity: '', owner: '', cid: '', didWebDeactivated: false, vanityName: '' };\nexport const DIDOwner = {\n    encode(message, writer = Writer.create()) {\n        if (message.identity !== '') {\n            writer.uint32(10).string(message.identity);\n        }\n        if (message.owner !== '') {\n            writer.uint32(18).string(message.owner);\n        }\n        if (message.cid !== '') {\n            writer.uint32(26).string(message.cid);\n        }\n        if (message.didWebDeactivated === true) {\n            writer.uint32(32).bool(message.didWebDeactivated);\n        }\n        if (message.vanityName !== '') {\n            writer.uint32(42).string(message.vanityName);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDIDOwner };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.identity = reader.string();\n                    break;\n                case 2:\n                    message.owner = reader.string();\n                    break;\n                case 3:\n                    message.cid = reader.string();\n                    break;\n                case 4:\n                    message.didWebDeactivated = reader.bool();\n                    break;\n                case 5:\n                    message.vanityName = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDIDOwner };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = String(object.owner);\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = String(object.cid);\n        }\n        else {\n            message.cid = '';\n        }\n        if (object.didWebDeactivated !== undefined && object.didWebDeactivated !== null) {\n            message.didWebDeactivated = Boolean(object.didWebDeactivated);\n        }\n        else {\n            message.didWebDeactivated = false;\n        }\n        if (object.vanityName !== undefined && object.vanityName !== null) {\n            message.vanityName = String(object.vanityName);\n        }\n        else {\n            message.vanityName = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.identity !== undefined && (obj.identity = message.identity);\n        message.owner !== undefined && (obj.owner = message.owner);\n        message.cid !== undefined && (obj.cid = message.cid);\n        message.didWebDeactivated !== undefined && (obj.didWebDeactivated = message.didWebDeactivated);\n        message.vanityName !== undefined && (obj.vanityName = message.vanityName);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDIDOwner };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = object.owner;\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = object.cid;\n        }\n        else {\n            message.cid = '';\n        }\n        if (object.didWebDeactivated !== undefined && object.didWebDeactivated !== null) {\n            message.didWebDeactivated = object.didWebDeactivated;\n        }\n        else {\n            message.didWebDeactivated = false;\n        }\n        if (object.vanityName !== undefined && object.vanityName !== null) {\n            message.vanityName = object.vanityName;\n        }\n        else {\n            message.vanityName = '';\n        }\n        return message;\n    }\n};\nconst baseDIDWebRoute = { name: '', route: '', cid: '' };\nexport const DIDWebRoute = {\n    encode(message, writer = Writer.create()) {\n        if (message.name !== '') {\n            writer.uint32(10).string(message.name);\n        }\n        if (message.route !== '') {\n            writer.uint32(18).string(message.route);\n        }\n        if (message.cid !== '') {\n            writer.uint32(26).string(message.cid);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDIDWebRoute };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.name = reader.string();\n                    break;\n                case 2:\n                    message.route = reader.string();\n                    break;\n                case 3:\n                    message.cid = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDIDWebRoute };\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.route !== undefined && object.route !== null) {\n            message.route = String(object.route);\n        }\n        else {\n            message.route = '';\n        }\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = String(object.cid);\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.name !== undefined && (obj.name = message.name);\n        message.route !== undefined && (obj.route = message.route);\n        message.cid !== undefined && (obj.cid = message.cid);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDIDWebRoute };\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.route !== undefined && object.route !== null) {\n            message.route = object.route;\n        }\n        else {\n            message.route = '';\n        }\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = object.cid;\n        }\n        else {\n            message.cid = '';\n        }\n        return message;\n    }\n};\nconst baseDelegate = { delegate: '', delegateType: '', validity: 0, creator: '', identity: '' };\nexport const Delegate = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegate !== '') {\n            writer.uint32(10).string(message.delegate);\n        }\n        if (message.delegateType !== '') {\n            writer.uint32(18).string(message.delegateType);\n        }\n        if (message.validity !== 0) {\n            writer.uint32(24).uint64(message.validity);\n        }\n        if (message.creator !== '') {\n            writer.uint32(34).string(message.creator);\n        }\n        if (message.identity !== '') {\n            writer.uint32(42).string(message.identity);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegate = reader.string();\n                    break;\n                case 2:\n                    message.delegateType = reader.string();\n                    break;\n                case 3:\n                    message.validity = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.creator = reader.string();\n                    break;\n                case 5:\n                    message.identity = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegate };\n        if (object.delegate !== undefined && object.delegate !== null) {\n            message.delegate = String(object.delegate);\n        }\n        else {\n            message.delegate = '';\n        }\n        if (object.delegateType !== undefined && object.delegateType !== null) {\n            message.delegateType = String(object.delegateType);\n        }\n        else {\n            message.delegateType = '';\n        }\n        if (object.validity !== undefined && object.validity !== null) {\n            message.validity = Number(object.validity);\n        }\n        else {\n            message.validity = 0;\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegate !== undefined && (obj.delegate = message.delegate);\n        message.delegateType !== undefined && (obj.delegateType = message.delegateType);\n        message.validity !== undefined && (obj.validity = message.validity);\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.identity !== undefined && (obj.identity = message.identity);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegate };\n        if (object.delegate !== undefined && object.delegate !== null) {\n            message.delegate = object.delegate;\n        }\n        else {\n            message.delegate = '';\n        }\n        if (object.delegateType !== undefined && object.delegateType !== null) {\n            message.delegateType = object.delegateType;\n        }\n        else {\n            message.delegateType = '';\n        }\n        if (object.validity !== undefined && object.validity !== null) {\n            message.validity = object.validity;\n        }\n        else {\n            message.validity = 0;\n        }\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = '';\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        return message;\n    }\n};\nconst baseChange = { identity: '', owner: '', previousChange: 0 };\nexport const Change = {\n    encode(message, writer = Writer.create()) {\n        if (message.identity !== '') {\n            writer.uint32(10).string(message.identity);\n        }\n        if (message.owner !== '') {\n            writer.uint32(18).string(message.owner);\n        }\n        if (message.previousChange !== 0) {\n            writer.uint32(24).uint64(message.previousChange);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseChange };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.identity = reader.string();\n                    break;\n                case 2:\n                    message.owner = reader.string();\n                    break;\n                case 3:\n                    message.previousChange = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseChange };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = String(object.owner);\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.previousChange !== undefined && object.previousChange !== null) {\n            message.previousChange = Number(object.previousChange);\n        }\n        else {\n            message.previousChange = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.identity !== undefined && (obj.identity = message.identity);\n        message.owner !== undefined && (obj.owner = message.owner);\n        message.previousChange !== undefined && (obj.previousChange = message.previousChange);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseChange };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = object.owner;\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.previousChange !== undefined && object.previousChange !== null) {\n            message.previousChange = object.previousChange;\n        }\n        else {\n            message.previousChange = 0;\n        }\n        return message;\n    }\n};\nconst baseAttribute = { identity: '' };\nexport const Attribute = {\n    encode(message, writer = Writer.create()) {\n        if (message.identity !== '') {\n            writer.uint32(10).string(message.identity);\n        }\n        if (message.name.length !== 0) {\n            writer.uint32(18).bytes(message.name);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(26).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAttribute };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.identity = reader.string();\n                    break;\n                case 2:\n                    message.name = reader.bytes();\n                    break;\n                case 3:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAttribute };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = bytesFromBase64(object.name);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.identity !== undefined && (obj.identity = message.identity);\n        message.name !== undefined && (obj.name = base64FromBytes(message.name !== undefined ? message.name : new Uint8Array()));\n        message.value !== undefined && (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAttribute };\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = '';\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from 'protobufjs/minimal';\nimport * as Long from 'long';\nimport { PageRequest, PageResponse } from '../cosmos/base/query/v1beta1/pagination';\nimport { Owner, Collection, Denom, BaseNFT } from '../anconprotocol/nft';\nexport const protobufPackage = 'ElectronicSignaturesIndustries.anconprotocol.anconprotocol';\nconst baseQueryDidWebRequest = { name: '' };\nexport const QueryDidWebRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.name !== '') {\n            writer.uint32(10).string(message.name);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryDidWebRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.name = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryDidWebRequest };\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.name !== undefined && (obj.name = message.name);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryDidWebRequest };\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        return message;\n    }\n};\nconst baseQueryProofMetadataRequest = { cid: '', path: '' };\nexport const QueryProofMetadataRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.cid !== '') {\n            writer.uint32(10).string(message.cid);\n        }\n        if (message.path !== '') {\n            writer.uint32(18).string(message.path);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryProofMetadataRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.cid = reader.string();\n                    break;\n                case 2:\n                    message.path = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryProofMetadataRequest };\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = String(object.cid);\n        }\n        else {\n            message.cid = '';\n        }\n        if (object.path !== undefined && object.path !== null) {\n            message.path = String(object.path);\n        }\n        else {\n            message.path = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.cid !== undefined && (obj.cid = message.cid);\n        message.path !== undefined && (obj.path = message.path);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryProofMetadataRequest };\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = object.cid;\n        }\n        else {\n            message.cid = '';\n        }\n        if (object.path !== undefined && object.path !== null) {\n            message.path = object.path;\n        }\n        else {\n            message.path = '';\n        }\n        return message;\n    }\n};\nconst baseQueryProofResponse = { root: '', proof: '' };\nexport const QueryProofResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.root !== '') {\n            writer.uint32(10).string(message.root);\n        }\n        if (message.proof !== '') {\n            writer.uint32(18).string(message.proof);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryProofResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.root = reader.string();\n                    break;\n                case 2:\n                    message.proof = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryProofResponse };\n        if (object.root !== undefined && object.root !== null) {\n            message.root = String(object.root);\n        }\n        else {\n            message.root = '';\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = String(object.proof);\n        }\n        else {\n            message.proof = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.root !== undefined && (obj.root = message.root);\n        message.proof !== undefined && (obj.proof = message.proof);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryProofResponse };\n        if (object.root !== undefined && object.root !== null) {\n            message.root = object.root;\n        }\n        else {\n            message.root = '';\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = object.proof;\n        }\n        else {\n            message.proof = '';\n        }\n        return message;\n    }\n};\nconst baseQueryGetDidRequest = { name: '' };\nexport const QueryGetDidRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.name !== '') {\n            writer.uint32(10).string(message.name);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryGetDidRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.name = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryGetDidRequest };\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.name !== undefined && (obj.name = message.name);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryGetDidRequest };\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        return message;\n    }\n};\nconst baseQueryReadDidKeyRequest = { name: '' };\nexport const QueryReadDidKeyRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.name !== '') {\n            writer.uint32(10).string(message.name);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryReadDidKeyRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.name = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryReadDidKeyRequest };\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.name !== undefined && (obj.name = message.name);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryReadDidKeyRequest };\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        return message;\n    }\n};\nconst baseQueryReadDidKeyResponse = {};\nexport const QueryReadDidKeyResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryReadDidKeyResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseQueryReadDidKeyResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseQueryReadDidKeyResponse };\n        return message;\n    }\n};\nconst baseQueryReadRoyaltyInfo = { cid: '', price: '' };\nexport const QueryReadRoyaltyInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.cid !== '') {\n            writer.uint32(10).string(message.cid);\n        }\n        if (message.price !== '') {\n            writer.uint32(18).string(message.price);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryReadRoyaltyInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.cid = reader.string();\n                    break;\n                case 2:\n                    message.price = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryReadRoyaltyInfo };\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = String(object.cid);\n        }\n        else {\n            message.cid = '';\n        }\n        if (object.price !== undefined && object.price !== null) {\n            message.price = String(object.price);\n        }\n        else {\n            message.price = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.cid !== undefined && (obj.cid = message.cid);\n        message.price !== undefined && (obj.price = message.price);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryReadRoyaltyInfo };\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = object.cid;\n        }\n        else {\n            message.cid = '';\n        }\n        if (object.price !== undefined && object.price !== null) {\n            message.price = object.price;\n        }\n        else {\n            message.price = '';\n        }\n        return message;\n    }\n};\nconst baseQueryReadRoyaltyInfoResponse = { receiver: '', royaltyAmount: 0 };\nexport const QueryReadRoyaltyInfoResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.receiver !== '') {\n            writer.uint32(10).string(message.receiver);\n        }\n        if (message.royaltyAmount !== 0) {\n            writer.uint32(16).uint64(message.royaltyAmount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryReadRoyaltyInfoResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.receiver = reader.string();\n                    break;\n                case 2:\n                    message.royaltyAmount = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryReadRoyaltyInfoResponse };\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = String(object.receiver);\n        }\n        else {\n            message.receiver = '';\n        }\n        if (object.royaltyAmount !== undefined && object.royaltyAmount !== null) {\n            message.royaltyAmount = Number(object.royaltyAmount);\n        }\n        else {\n            message.royaltyAmount = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.receiver !== undefined && (obj.receiver = message.receiver);\n        message.royaltyAmount !== undefined && (obj.royaltyAmount = message.royaltyAmount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryReadRoyaltyInfoResponse };\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = object.receiver;\n        }\n        else {\n            message.receiver = '';\n        }\n        if (object.royaltyAmount !== undefined && object.royaltyAmount !== null) {\n            message.royaltyAmount = object.royaltyAmount;\n        }\n        else {\n            message.royaltyAmount = 0;\n        }\n        return message;\n    }\n};\nconst baseQueryOwnerRequest = { denomId: '', owner: '' };\nexport const QueryOwnerRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.denomId !== '') {\n            writer.uint32(10).string(message.denomId);\n        }\n        if (message.owner !== '') {\n            writer.uint32(18).string(message.owner);\n        }\n        if (message.pagination !== undefined) {\n            PageRequest.encode(message.pagination, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryOwnerRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denomId = reader.string();\n                    break;\n                case 2:\n                    message.owner = reader.string();\n                    break;\n                case 3:\n                    message.pagination = PageRequest.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryOwnerRequest };\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = String(object.owner);\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageRequest.fromJSON(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        message.owner !== undefined && (obj.owner = message.owner);\n        message.pagination !== undefined && (obj.pagination = message.pagination ? PageRequest.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryOwnerRequest };\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = object.owner;\n        }\n        else {\n            message.owner = '';\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageRequest.fromPartial(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    }\n};\nconst baseQueryOwnerResponse = {};\nexport const QueryOwnerResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.owner !== undefined) {\n            Owner.encode(message.owner, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.pagination !== undefined) {\n            PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryOwnerResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.owner = Owner.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.pagination = PageResponse.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryOwnerResponse };\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = Owner.fromJSON(object.owner);\n        }\n        else {\n            message.owner = undefined;\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageResponse.fromJSON(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.owner !== undefined && (obj.owner = message.owner ? Owner.toJSON(message.owner) : undefined);\n        message.pagination !== undefined && (obj.pagination = message.pagination ? PageResponse.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryOwnerResponse };\n        if (object.owner !== undefined && object.owner !== null) {\n            message.owner = Owner.fromPartial(object.owner);\n        }\n        else {\n            message.owner = undefined;\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageResponse.fromPartial(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    }\n};\nconst baseQueryCollectionRequest = { denomId: '' };\nexport const QueryCollectionRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.denomId !== '') {\n            writer.uint32(10).string(message.denomId);\n        }\n        if (message.pagination !== undefined) {\n            PageRequest.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryCollectionRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denomId = reader.string();\n                    break;\n                case 2:\n                    message.pagination = PageRequest.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryCollectionRequest };\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageRequest.fromJSON(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        message.pagination !== undefined && (obj.pagination = message.pagination ? PageRequest.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryCollectionRequest };\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageRequest.fromPartial(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    }\n};\nconst baseQueryCollectionResponse = {};\nexport const QueryCollectionResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.collection !== undefined) {\n            Collection.encode(message.collection, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.pagination !== undefined) {\n            PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryCollectionResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.collection = Collection.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.pagination = PageResponse.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryCollectionResponse };\n        if (object.collection !== undefined && object.collection !== null) {\n            message.collection = Collection.fromJSON(object.collection);\n        }\n        else {\n            message.collection = undefined;\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageResponse.fromJSON(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.collection !== undefined && (obj.collection = message.collection ? Collection.toJSON(message.collection) : undefined);\n        message.pagination !== undefined && (obj.pagination = message.pagination ? PageResponse.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryCollectionResponse };\n        if (object.collection !== undefined && object.collection !== null) {\n            message.collection = Collection.fromPartial(object.collection);\n        }\n        else {\n            message.collection = undefined;\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageResponse.fromPartial(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    }\n};\nconst baseQueryDenomRequest = { denomId: '' };\nexport const QueryDenomRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.denomId !== '') {\n            writer.uint32(10).string(message.denomId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryDenomRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denomId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryDenomRequest };\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryDenomRequest };\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        return message;\n    }\n};\nconst baseQueryDenomResponse = {};\nexport const QueryDenomResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== undefined) {\n            Denom.encode(message.denom, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryDenomResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = Denom.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryDenomResponse };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = Denom.fromJSON(object.denom);\n        }\n        else {\n            message.denom = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom ? Denom.toJSON(message.denom) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryDenomResponse };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = Denom.fromPartial(object.denom);\n        }\n        else {\n            message.denom = undefined;\n        }\n        return message;\n    }\n};\nconst baseQueryDenomsRequest = {};\nexport const QueryDenomsRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.pagination !== undefined) {\n            PageRequest.encode(message.pagination, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryDenomsRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pagination = PageRequest.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryDenomsRequest };\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageRequest.fromJSON(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.pagination !== undefined && (obj.pagination = message.pagination ? PageRequest.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryDenomsRequest };\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageRequest.fromPartial(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    }\n};\nconst baseQueryDenomsResponse = {};\nexport const QueryDenomsResponse = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.denoms) {\n            Denom.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.pagination !== undefined) {\n            PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryDenomsResponse };\n        message.denoms = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denoms.push(Denom.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.pagination = PageResponse.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryDenomsResponse };\n        message.denoms = [];\n        if (object.denoms !== undefined && object.denoms !== null) {\n            for (const e of object.denoms) {\n                message.denoms.push(Denom.fromJSON(e));\n            }\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageResponse.fromJSON(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.denoms) {\n            obj.denoms = message.denoms.map((e) => (e ? Denom.toJSON(e) : undefined));\n        }\n        else {\n            obj.denoms = [];\n        }\n        message.pagination !== undefined && (obj.pagination = message.pagination ? PageResponse.toJSON(message.pagination) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryDenomsResponse };\n        message.denoms = [];\n        if (object.denoms !== undefined && object.denoms !== null) {\n            for (const e of object.denoms) {\n                message.denoms.push(Denom.fromPartial(e));\n            }\n        }\n        if (object.pagination !== undefined && object.pagination !== null) {\n            message.pagination = PageResponse.fromPartial(object.pagination);\n        }\n        else {\n            message.pagination = undefined;\n        }\n        return message;\n    }\n};\nconst baseQueryNFTRequest = { denomId: '', tokenId: '' };\nexport const QueryNFTRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.denomId !== '') {\n            writer.uint32(10).string(message.denomId);\n        }\n        if (message.tokenId !== '') {\n            writer.uint32(18).string(message.tokenId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryNFTRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denomId = reader.string();\n                    break;\n                case 2:\n                    message.tokenId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryNFTRequest };\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = String(object.denomId);\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.tokenId !== undefined && object.tokenId !== null) {\n            message.tokenId = String(object.tokenId);\n        }\n        else {\n            message.tokenId = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denomId !== undefined && (obj.denomId = message.denomId);\n        message.tokenId !== undefined && (obj.tokenId = message.tokenId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryNFTRequest };\n        if (object.denomId !== undefined && object.denomId !== null) {\n            message.denomId = object.denomId;\n        }\n        else {\n            message.denomId = '';\n        }\n        if (object.tokenId !== undefined && object.tokenId !== null) {\n            message.tokenId = object.tokenId;\n        }\n        else {\n            message.tokenId = '';\n        }\n        return message;\n    }\n};\nconst baseQueryNFTResponse = {};\nexport const QueryNFTResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.nft !== undefined) {\n            BaseNFT.encode(message.nft, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryNFTResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.nft = BaseNFT.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryNFTResponse };\n        if (object.nft !== undefined && object.nft !== null) {\n            message.nft = BaseNFT.fromJSON(object.nft);\n        }\n        else {\n            message.nft = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.nft !== undefined && (obj.nft = message.nft ? BaseNFT.toJSON(message.nft) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryNFTResponse };\n        if (object.nft !== undefined && object.nft !== null) {\n            message.nft = BaseNFT.fromPartial(object.nft);\n        }\n        else {\n            message.nft = undefined;\n        }\n        return message;\n    }\n};\nconst baseQueryGetDelegateRequest = { id: '' };\nexport const QueryGetDelegateRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryGetDelegateRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryGetDelegateRequest };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryGetDelegateRequest };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        return message;\n    }\n};\nconst baseQueryGetDelegateResponse = {};\nexport const QueryGetDelegateResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryGetDelegateResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseQueryGetDelegateResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseQueryGetDelegateResponse };\n        return message;\n    }\n};\nconst baseQueryNonceRequest = { id: '' };\nexport const QueryNonceRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== '') {\n            writer.uint32(10).string(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryNonceRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryNonceRequest };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryNonceRequest };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = '';\n        }\n        return message;\n    }\n};\nconst baseQueryNonceResponse = {};\nexport const QueryNonceResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryNonceResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseQueryNonceResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseQueryNonceResponse };\n        return message;\n    }\n};\nconst baseQueryGetAttributesResponse = {};\nexport const QueryGetAttributesResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryGetAttributesResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseQueryGetAttributesResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseQueryGetAttributesResponse };\n        return message;\n    }\n};\nconst baseQueryIdentifyOwnerResponse = {};\nexport const QueryIdentifyOwnerResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryIdentifyOwnerResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseQueryIdentifyOwnerResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseQueryIdentifyOwnerResponse };\n        return message;\n    }\n};\nconst baseQueryGetAttributesRequest = { address: '' };\nexport const QueryGetAttributesRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryGetAttributesRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryGetAttributesRequest };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryGetAttributesRequest };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        return message;\n    }\n};\nconst baseQueryIdentifyOwnerRequest = { address: '' };\nexport const QueryIdentifyOwnerRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryIdentifyOwnerRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryIdentifyOwnerRequest };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryIdentifyOwnerRequest };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        return message;\n    }\n};\nconst baseQueryOwnersResponse = {};\nexport const QueryOwnersResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryOwnersResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseQueryOwnersResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseQueryOwnersResponse };\n        return message;\n    }\n};\nconst baseQueryResourceRequest = { cid: '', path: '' };\nexport const QueryResourceRequest = {\n    encode(message, writer = Writer.create()) {\n        if (message.cid !== '') {\n            writer.uint32(10).string(message.cid);\n        }\n        if (message.path !== '') {\n            writer.uint32(18).string(message.path);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryResourceRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.cid = reader.string();\n                    break;\n                case 2:\n                    message.path = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryResourceRequest };\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = String(object.cid);\n        }\n        else {\n            message.cid = '';\n        }\n        if (object.path !== undefined && object.path !== null) {\n            message.path = String(object.path);\n        }\n        else {\n            message.path = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.cid !== undefined && (obj.cid = message.cid);\n        message.path !== undefined && (obj.path = message.path);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryResourceRequest };\n        if (object.cid !== undefined && object.cid !== null) {\n            message.cid = object.cid;\n        }\n        else {\n            message.cid = '';\n        }\n        if (object.path !== undefined && object.path !== null) {\n            message.path = object.path;\n        }\n        else {\n            message.path = '';\n        }\n        return message;\n    }\n};\nconst baseQueryResourceResponse = { data: '' };\nexport const QueryResourceResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.data !== '') {\n            writer.uint32(10).string(message.data);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseQueryResourceResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.data = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseQueryResourceResponse };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = String(object.data);\n        }\n        else {\n            message.data = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.data !== undefined && (obj.data = message.data);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseQueryResourceResponse };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = '';\n        }\n        return message;\n    }\n};\nexport class QueryClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    ReadRoyaltyInfo(request) {\n        const data = QueryReadRoyaltyInfo.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'ReadRoyaltyInfo', data);\n        return promise.then((data) => QueryReadRoyaltyInfoResponse.decode(new Reader(data)));\n    }\n    ReadWithPath(request) {\n        const data = QueryResourceRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'ReadWithPath', data);\n        return promise.then((data) => QueryResourceResponse.decode(new Reader(data)));\n    }\n    ReadMetadataProof(request) {\n        const data = QueryProofMetadataRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'ReadMetadataProof', data);\n        return promise.then((data) => QueryProofResponse.decode(new Reader(data)));\n    }\n    IdentifyOwner(request) {\n        const data = QueryIdentifyOwnerRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'IdentifyOwner', data);\n        return promise.then((data) => QueryIdentifyOwnerResponse.decode(new Reader(data)));\n    }\n    GetAttributes(request) {\n        const data = QueryGetAttributesRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'GetAttributes', data);\n        return promise.then((data) => QueryGetAttributesResponse.decode(new Reader(data)));\n    }\n    Resource(request) {\n        const data = QueryResourceRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'Resource', data);\n        return promise.then((data) => QueryResourceResponse.decode(new Reader(data)));\n    }\n    ReadDelegate(request) {\n        const data = QueryGetDelegateRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'ReadDelegate', data);\n        return promise.then((data) => QueryGetDelegateResponse.decode(new Reader(data)));\n    }\n    Owner(request) {\n        const data = QueryOwnerRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'Owner', data);\n        return promise.then((data) => QueryOwnerResponse.decode(new Reader(data)));\n    }\n    Collection(request) {\n        const data = QueryCollectionRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'Collection', data);\n        return promise.then((data) => QueryCollectionResponse.decode(new Reader(data)));\n    }\n    Denom(request) {\n        const data = QueryDenomRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'Denom', data);\n        return promise.then((data) => QueryDenomResponse.decode(new Reader(data)));\n    }\n    Denoms(request) {\n        const data = QueryDenomsRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'Denoms', data);\n        return promise.then((data) => QueryDenomsResponse.decode(new Reader(data)));\n    }\n    GetNft(request) {\n        const data = QueryNFTRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'GetNft', data);\n        return promise.then((data) => QueryNFTResponse.decode(new Reader(data)));\n    }\n    ResolveDidWeb(request) {\n        const data = QueryDidWebRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'ResolveDidWeb', data);\n        return promise.then((data) => QueryResourceResponse.decode(new Reader(data)));\n    }\n    GetDidKey(request) {\n        const data = QueryGetDidRequest.encode(request).finish();\n        const promise = this.rpc.request('ElectronicSignaturesIndustries.anconprotocol.anconprotocol.Query', 'GetDidKey', data);\n        return promise.then((data) => QueryResourceResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'tendermint.version';\nconst baseApp = { protocol: 0, software: '' };\nexport const App = {\n    encode(message, writer = Writer.create()) {\n        if (message.protocol !== 0) {\n            writer.uint32(8).uint64(message.protocol);\n        }\n        if (message.software !== '') {\n            writer.uint32(18).string(message.software);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseApp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.protocol = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.software = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseApp };\n        if (object.protocol !== undefined && object.protocol !== null) {\n            message.protocol = Number(object.protocol);\n        }\n        else {\n            message.protocol = 0;\n        }\n        if (object.software !== undefined && object.software !== null) {\n            message.software = String(object.software);\n        }\n        else {\n            message.software = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.protocol !== undefined && (obj.protocol = message.protocol);\n        message.software !== undefined && (obj.software = message.software);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseApp };\n        if (object.protocol !== undefined && object.protocol !== null) {\n            message.protocol = object.protocol;\n        }\n        else {\n            message.protocol = 0;\n        }\n        if (object.software !== undefined && object.software !== null) {\n            message.software = object.software;\n        }\n        else {\n            message.software = '';\n        }\n        return message;\n    }\n};\nconst baseConsensus = { block: 0, app: 0 };\nexport const Consensus = {\n    encode(message, writer = Writer.create()) {\n        if (message.block !== 0) {\n            writer.uint32(8).uint64(message.block);\n        }\n        if (message.app !== 0) {\n            writer.uint32(16).uint64(message.app);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConsensus };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.block = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.app = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConsensus };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = Number(object.block);\n        }\n        else {\n            message.block = 0;\n        }\n        if (object.app !== undefined && object.app !== null) {\n            message.app = Number(object.app);\n        }\n        else {\n            message.app = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.block !== undefined && (obj.block = message.block);\n        message.app !== undefined && (obj.app = message.app);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConsensus };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = object.block;\n        }\n        else {\n            message.block = 0;\n        }\n        if (object.app !== undefined && object.app !== null) {\n            message.app = object.app;\n        }\n        else {\n            message.app = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined && (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Params, Validator, Delegation, UnbondingDelegation, Redelegation } from '../../../cosmos/staking/v1beta1/staking';\nexport const protobufPackage = 'cosmos.staking.v1beta1';\nconst baseGenesisState = { exported: false };\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.lastTotalPower.length !== 0) {\n            writer.uint32(18).bytes(message.lastTotalPower);\n        }\n        for (const v of message.lastValidatorPowers) {\n            LastValidatorPower.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.validators) {\n            Validator.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        for (const v of message.delegations) {\n            Delegation.encode(v, writer.uint32(42).fork()).ldelim();\n        }\n        for (const v of message.unbondingDelegations) {\n            UnbondingDelegation.encode(v, writer.uint32(50).fork()).ldelim();\n        }\n        for (const v of message.redelegations) {\n            Redelegation.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.exported === true) {\n            writer.uint32(64).bool(message.exported);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.lastValidatorPowers = [];\n        message.validators = [];\n        message.delegations = [];\n        message.unbondingDelegations = [];\n        message.redelegations = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.lastTotalPower = reader.bytes();\n                    break;\n                case 3:\n                    message.lastValidatorPowers.push(LastValidatorPower.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.validators.push(Validator.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.delegations.push(Delegation.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.unbondingDelegations.push(UnbondingDelegation.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.redelegations.push(Redelegation.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.exported = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.lastValidatorPowers = [];\n        message.validators = [];\n        message.delegations = [];\n        message.unbondingDelegations = [];\n        message.redelegations = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.lastTotalPower !== undefined && object.lastTotalPower !== null) {\n            message.lastTotalPower = bytesFromBase64(object.lastTotalPower);\n        }\n        if (object.lastValidatorPowers !== undefined && object.lastValidatorPowers !== null) {\n            for (const e of object.lastValidatorPowers) {\n                message.lastValidatorPowers.push(LastValidatorPower.fromJSON(e));\n            }\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromJSON(e));\n            }\n        }\n        if (object.delegations !== undefined && object.delegations !== null) {\n            for (const e of object.delegations) {\n                message.delegations.push(Delegation.fromJSON(e));\n            }\n        }\n        if (object.unbondingDelegations !== undefined && object.unbondingDelegations !== null) {\n            for (const e of object.unbondingDelegations) {\n                message.unbondingDelegations.push(UnbondingDelegation.fromJSON(e));\n            }\n        }\n        if (object.redelegations !== undefined && object.redelegations !== null) {\n            for (const e of object.redelegations) {\n                message.redelegations.push(Redelegation.fromJSON(e));\n            }\n        }\n        if (object.exported !== undefined && object.exported !== null) {\n            message.exported = Boolean(object.exported);\n        }\n        else {\n            message.exported = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.params !== undefined && (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        message.lastTotalPower !== undefined &&\n            (obj.lastTotalPower = base64FromBytes(message.lastTotalPower !== undefined ? message.lastTotalPower : new Uint8Array()));\n        if (message.lastValidatorPowers) {\n            obj.lastValidatorPowers = message.lastValidatorPowers.map((e) => (e ? LastValidatorPower.toJSON(e) : undefined));\n        }\n        else {\n            obj.lastValidatorPowers = [];\n        }\n        if (message.validators) {\n            obj.validators = message.validators.map((e) => (e ? Validator.toJSON(e) : undefined));\n        }\n        else {\n            obj.validators = [];\n        }\n        if (message.delegations) {\n            obj.delegations = message.delegations.map((e) => (e ? Delegation.toJSON(e) : undefined));\n        }\n        else {\n            obj.delegations = [];\n        }\n        if (message.unbondingDelegations) {\n            obj.unbondingDelegations = message.unbondingDelegations.map((e) => (e ? UnbondingDelegation.toJSON(e) : undefined));\n        }\n        else {\n            obj.unbondingDelegations = [];\n        }\n        if (message.redelegations) {\n            obj.redelegations = message.redelegations.map((e) => (e ? Redelegation.toJSON(e) : undefined));\n        }\n        else {\n            obj.redelegations = [];\n        }\n        message.exported !== undefined && (obj.exported = message.exported);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.lastValidatorPowers = [];\n        message.validators = [];\n        message.delegations = [];\n        message.unbondingDelegations = [];\n        message.redelegations = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.lastTotalPower !== undefined && object.lastTotalPower !== null) {\n            message.lastTotalPower = object.lastTotalPower;\n        }\n        else {\n            message.lastTotalPower = new Uint8Array();\n        }\n        if (object.lastValidatorPowers !== undefined && object.lastValidatorPowers !== null) {\n            for (const e of object.lastValidatorPowers) {\n                message.lastValidatorPowers.push(LastValidatorPower.fromPartial(e));\n            }\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromPartial(e));\n            }\n        }\n        if (object.delegations !== undefined && object.delegations !== null) {\n            for (const e of object.delegations) {\n                message.delegations.push(Delegation.fromPartial(e));\n            }\n        }\n        if (object.unbondingDelegations !== undefined && object.unbondingDelegations !== null) {\n            for (const e of object.unbondingDelegations) {\n                message.unbondingDelegations.push(UnbondingDelegation.fromPartial(e));\n            }\n        }\n        if (object.redelegations !== undefined && object.redelegations !== null) {\n            for (const e of object.redelegations) {\n                message.redelegations.push(Redelegation.fromPartial(e));\n            }\n        }\n        if (object.exported !== undefined && object.exported !== null) {\n            message.exported = object.exported;\n        }\n        else {\n            message.exported = false;\n        }\n        return message;\n    }\n};\nconst baseLastValidatorPower = { address: '', power: 0 };\nexport const LastValidatorPower = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== '') {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.power !== 0) {\n            writer.uint32(16).int64(message.power);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseLastValidatorPower };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.power = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseLastValidatorPower };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = '';\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = Number(object.power);\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.power !== undefined && (obj.power = message.power);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseLastValidatorPower };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = '';\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = object.power;\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Timestamp } from '../../../google/protobuf/timestamp';\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.upgrade.v1beta1';\nconst basePlan = { name: '', height: 0, info: '' };\nexport const Plan = {\n    encode(message, writer = Writer.create()) {\n        if (message.name !== '') {\n            writer.uint32(10).string(message.name);\n        }\n        if (message.time !== undefined) {\n            Timestamp.encode(toTimestamp(message.time), writer.uint32(18).fork()).ldelim();\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).int64(message.height);\n        }\n        if (message.info !== '') {\n            writer.uint32(34).string(message.info);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePlan };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.name = reader.string();\n                    break;\n                case 2:\n                    message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.info = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePlan };\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = '';\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = fromJsonTimestamp(object.time);\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = String(object.info);\n        }\n        else {\n            message.info = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.name !== undefined && (obj.name = message.name);\n        message.time !== undefined && (obj.time = message.time !== undefined ? message.time.toISOString() : null);\n        message.height !== undefined && (obj.height = message.height);\n        message.info !== undefined && (obj.info = message.info);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePlan };\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = '';\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = object.info;\n        }\n        else {\n            message.info = '';\n        }\n        return message;\n    }\n};\nconst baseSoftwareUpgradeProposal = { title: '', description: '' };\nexport const SoftwareUpgradeProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== '') {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== '') {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.plan !== undefined) {\n            Plan.encode(message.plan, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSoftwareUpgradeProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.plan = Plan.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSoftwareUpgradeProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        if (object.plan !== undefined && object.plan !== null) {\n            message.plan = Plan.fromJSON(object.plan);\n        }\n        else {\n            message.plan = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined && (obj.description = message.description);\n        message.plan !== undefined && (obj.plan = message.plan ? Plan.toJSON(message.plan) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSoftwareUpgradeProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        if (object.plan !== undefined && object.plan !== null) {\n            message.plan = Plan.fromPartial(object.plan);\n        }\n        else {\n            message.plan = undefined;\n        }\n        return message;\n    }\n};\nconst baseCancelSoftwareUpgradeProposal = { title: '', description: '' };\nexport const CancelSoftwareUpgradeProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== '') {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== '') {\n            writer.uint32(18).string(message.description);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCancelSoftwareUpgradeProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCancelSoftwareUpgradeProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined && (obj.description = message.description);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCancelSoftwareUpgradeProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = '';\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = '';\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined && (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'tendermint.crypto';\nconst basePublicKey = {};\nexport const PublicKey = {\n    encode(message, writer = Writer.create()) {\n        if (message.ed25519 !== undefined) {\n            writer.uint32(10).bytes(message.ed25519);\n        }\n        if (message.secp256k1 !== undefined) {\n            writer.uint32(18).bytes(message.secp256k1);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePublicKey };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.ed25519 = reader.bytes();\n                    break;\n                case 2:\n                    message.secp256k1 = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePublicKey };\n        if (object.ed25519 !== undefined && object.ed25519 !== null) {\n            message.ed25519 = bytesFromBase64(object.ed25519);\n        }\n        if (object.secp256k1 !== undefined && object.secp256k1 !== null) {\n            message.secp256k1 = bytesFromBase64(object.secp256k1);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.ed25519 !== undefined && (obj.ed25519 = message.ed25519 !== undefined ? base64FromBytes(message.ed25519) : undefined);\n        message.secp256k1 !== undefined && (obj.secp256k1 = message.secp256k1 !== undefined ? base64FromBytes(message.secp256k1) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePublicKey };\n        if (object.ed25519 !== undefined && object.ed25519 !== null) {\n            message.ed25519 = object.ed25519;\n        }\n        else {\n            message.ed25519 = undefined;\n        }\n        if (object.secp256k1 !== undefined && object.secp256k1 !== null) {\n            message.secp256k1 = object.secp256k1;\n        }\n        else {\n            message.secp256k1 = undefined;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { PublicKey } from '../../tendermint/crypto/keys';\nexport const protobufPackage = 'tendermint.types';\nconst baseValidatorSet = { totalVotingPower: 0 };\nexport const ValidatorSet = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.validators) {\n            Validator.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proposer !== undefined) {\n            Validator.encode(message.proposer, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.totalVotingPower !== 0) {\n            writer.uint32(24).int64(message.totalVotingPower);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validators.push(Validator.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.proposer = Validator.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.totalVotingPower = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromJSON(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = Validator.fromJSON(object.proposer);\n        }\n        else {\n            message.proposer = undefined;\n        }\n        if (object.totalVotingPower !== undefined && object.totalVotingPower !== null) {\n            message.totalVotingPower = Number(object.totalVotingPower);\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.validators) {\n            obj.validators = message.validators.map((e) => (e ? Validator.toJSON(e) : undefined));\n        }\n        else {\n            obj.validators = [];\n        }\n        message.proposer !== undefined && (obj.proposer = message.proposer ? Validator.toJSON(message.proposer) : undefined);\n        message.totalVotingPower !== undefined && (obj.totalVotingPower = message.totalVotingPower);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromPartial(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = Validator.fromPartial(object.proposer);\n        }\n        else {\n            message.proposer = undefined;\n        }\n        if (object.totalVotingPower !== undefined && object.totalVotingPower !== null) {\n            message.totalVotingPower = object.totalVotingPower;\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    }\n};\nconst baseValidator = { votingPower: 0, proposerPriority: 0 };\nexport const Validator = {\n    encode(message, writer = Writer.create()) {\n        if (message.address.length !== 0) {\n            writer.uint32(10).bytes(message.address);\n        }\n        if (message.pubKey !== undefined) {\n            PublicKey.encode(message.pubKey, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.votingPower !== 0) {\n            writer.uint32(24).int64(message.votingPower);\n        }\n        if (message.proposerPriority !== 0) {\n            writer.uint32(32).int64(message.proposerPriority);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.bytes();\n                    break;\n                case 2:\n                    message.pubKey = PublicKey.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.votingPower = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.proposerPriority = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = bytesFromBase64(object.address);\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = Number(object.votingPower);\n        }\n        else {\n            message.votingPower = 0;\n        }\n        if (object.proposerPriority !== undefined && object.proposerPriority !== null) {\n            message.proposerPriority = Number(object.proposerPriority);\n        }\n        else {\n            message.proposerPriority = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = base64FromBytes(message.address !== undefined ? message.address : new Uint8Array()));\n        message.pubKey !== undefined && (obj.pubKey = message.pubKey ? PublicKey.toJSON(message.pubKey) : undefined);\n        message.votingPower !== undefined && (obj.votingPower = message.votingPower);\n        message.proposerPriority !== undefined && (obj.proposerPriority = message.proposerPriority);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = new Uint8Array();\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = object.votingPower;\n        }\n        else {\n            message.votingPower = 0;\n        }\n        if (object.proposerPriority !== undefined && object.proposerPriority !== null) {\n            message.proposerPriority = object.proposerPriority;\n        }\n        else {\n            message.proposerPriority = 0;\n        }\n        return message;\n    }\n};\nconst baseSimpleValidator = { votingPower: 0 };\nexport const SimpleValidator = {\n    encode(message, writer = Writer.create()) {\n        if (message.pubKey !== undefined) {\n            PublicKey.encode(message.pubKey, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.votingPower !== 0) {\n            writer.uint32(16).int64(message.votingPower);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSimpleValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pubKey = PublicKey.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.votingPower = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSimpleValidator };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = Number(object.votingPower);\n        }\n        else {\n            message.votingPower = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.pubKey !== undefined && (obj.pubKey = message.pubKey ? PublicKey.toJSON(message.pubKey) : undefined);\n        message.votingPower !== undefined && (obj.votingPower = message.votingPower);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSimpleValidator };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = object.votingPower;\n        }\n        else {\n            message.votingPower = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Timestamp } from '../../google/protobuf/timestamp';\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nimport { Proof } from '../../tendermint/crypto/proof';\nimport { Consensus } from '../../tendermint/version/types';\nimport { ValidatorSet } from '../../tendermint/types/validator';\nexport const protobufPackage = 'tendermint.types';\n/** BlockIdFlag indicates which BlcokID the signature is for */\nexport var BlockIDFlag;\n(function (BlockIDFlag) {\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_UNKNOWN\"] = 0] = \"BLOCK_ID_FLAG_UNKNOWN\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_ABSENT\"] = 1] = \"BLOCK_ID_FLAG_ABSENT\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_COMMIT\"] = 2] = \"BLOCK_ID_FLAG_COMMIT\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_NIL\"] = 3] = \"BLOCK_ID_FLAG_NIL\";\n    BlockIDFlag[BlockIDFlag[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(BlockIDFlag || (BlockIDFlag = {}));\nexport function blockIDFlagFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'BLOCK_ID_FLAG_UNKNOWN':\n            return BlockIDFlag.BLOCK_ID_FLAG_UNKNOWN;\n        case 1:\n        case 'BLOCK_ID_FLAG_ABSENT':\n            return BlockIDFlag.BLOCK_ID_FLAG_ABSENT;\n        case 2:\n        case 'BLOCK_ID_FLAG_COMMIT':\n            return BlockIDFlag.BLOCK_ID_FLAG_COMMIT;\n        case 3:\n        case 'BLOCK_ID_FLAG_NIL':\n            return BlockIDFlag.BLOCK_ID_FLAG_NIL;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return BlockIDFlag.UNRECOGNIZED;\n    }\n}\nexport function blockIDFlagToJSON(object) {\n    switch (object) {\n        case BlockIDFlag.BLOCK_ID_FLAG_UNKNOWN:\n            return 'BLOCK_ID_FLAG_UNKNOWN';\n        case BlockIDFlag.BLOCK_ID_FLAG_ABSENT:\n            return 'BLOCK_ID_FLAG_ABSENT';\n        case BlockIDFlag.BLOCK_ID_FLAG_COMMIT:\n            return 'BLOCK_ID_FLAG_COMMIT';\n        case BlockIDFlag.BLOCK_ID_FLAG_NIL:\n            return 'BLOCK_ID_FLAG_NIL';\n        default:\n            return 'UNKNOWN';\n    }\n}\n/** SignedMsgType is a type of signed message in the consensus. */\nexport var SignedMsgType;\n(function (SignedMsgType) {\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_UNKNOWN\"] = 0] = \"SIGNED_MSG_TYPE_UNKNOWN\";\n    /** SIGNED_MSG_TYPE_PREVOTE - Votes */\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PREVOTE\"] = 1] = \"SIGNED_MSG_TYPE_PREVOTE\";\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PRECOMMIT\"] = 2] = \"SIGNED_MSG_TYPE_PRECOMMIT\";\n    /** SIGNED_MSG_TYPE_PROPOSAL - Proposals */\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PROPOSAL\"] = 32] = \"SIGNED_MSG_TYPE_PROPOSAL\";\n    SignedMsgType[SignedMsgType[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(SignedMsgType || (SignedMsgType = {}));\nexport function signedMsgTypeFromJSON(object) {\n    switch (object) {\n        case 0:\n        case 'SIGNED_MSG_TYPE_UNKNOWN':\n            return SignedMsgType.SIGNED_MSG_TYPE_UNKNOWN;\n        case 1:\n        case 'SIGNED_MSG_TYPE_PREVOTE':\n            return SignedMsgType.SIGNED_MSG_TYPE_PREVOTE;\n        case 2:\n        case 'SIGNED_MSG_TYPE_PRECOMMIT':\n            return SignedMsgType.SIGNED_MSG_TYPE_PRECOMMIT;\n        case 32:\n        case 'SIGNED_MSG_TYPE_PROPOSAL':\n            return SignedMsgType.SIGNED_MSG_TYPE_PROPOSAL;\n        case -1:\n        case 'UNRECOGNIZED':\n        default:\n            return SignedMsgType.UNRECOGNIZED;\n    }\n}\nexport function signedMsgTypeToJSON(object) {\n    switch (object) {\n        case SignedMsgType.SIGNED_MSG_TYPE_UNKNOWN:\n            return 'SIGNED_MSG_TYPE_UNKNOWN';\n        case SignedMsgType.SIGNED_MSG_TYPE_PREVOTE:\n            return 'SIGNED_MSG_TYPE_PREVOTE';\n        case SignedMsgType.SIGNED_MSG_TYPE_PRECOMMIT:\n            return 'SIGNED_MSG_TYPE_PRECOMMIT';\n        case SignedMsgType.SIGNED_MSG_TYPE_PROPOSAL:\n            return 'SIGNED_MSG_TYPE_PROPOSAL';\n        default:\n            return 'UNKNOWN';\n    }\n}\nconst basePartSetHeader = { total: 0 };\nexport const PartSetHeader = {\n    encode(message, writer = Writer.create()) {\n        if (message.total !== 0) {\n            writer.uint32(8).uint32(message.total);\n        }\n        if (message.hash.length !== 0) {\n            writer.uint32(18).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePartSetHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total = reader.uint32();\n                    break;\n                case 2:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePartSetHeader };\n        if (object.total !== undefined && object.total !== null) {\n            message.total = Number(object.total);\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.total !== undefined && (obj.total = message.total);\n        message.hash !== undefined && (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePartSetHeader };\n        if (object.total !== undefined && object.total !== null) {\n            message.total = object.total;\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst basePart = { index: 0 };\nexport const Part = {\n    encode(message, writer = Writer.create()) {\n        if (message.index !== 0) {\n            writer.uint32(8).uint32(message.index);\n        }\n        if (message.bytes.length !== 0) {\n            writer.uint32(18).bytes(message.bytes);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePart };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.index = reader.uint32();\n                    break;\n                case 2:\n                    message.bytes = reader.bytes();\n                    break;\n                case 3:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePart };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.bytes !== undefined && object.bytes !== null) {\n            message.bytes = bytesFromBase64(object.bytes);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.index !== undefined && (obj.index = message.index);\n        message.bytes !== undefined && (obj.bytes = base64FromBytes(message.bytes !== undefined ? message.bytes : new Uint8Array()));\n        message.proof !== undefined && (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePart };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.bytes !== undefined && object.bytes !== null) {\n            message.bytes = object.bytes;\n        }\n        else {\n            message.bytes = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    }\n};\nconst baseBlockID = {};\nexport const BlockID = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        if (message.partSetHeader !== undefined) {\n            PartSetHeader.encode(message.partSetHeader, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockID };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                case 2:\n                    message.partSetHeader = PartSetHeader.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockID };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        if (object.partSetHeader !== undefined && object.partSetHeader !== null) {\n            message.partSetHeader = PartSetHeader.fromJSON(object.partSetHeader);\n        }\n        else {\n            message.partSetHeader = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        message.partSetHeader !== undefined && (obj.partSetHeader = message.partSetHeader ? PartSetHeader.toJSON(message.partSetHeader) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockID };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        if (object.partSetHeader !== undefined && object.partSetHeader !== null) {\n            message.partSetHeader = PartSetHeader.fromPartial(object.partSetHeader);\n        }\n        else {\n            message.partSetHeader = undefined;\n        }\n        return message;\n    }\n};\nconst baseHeader = { chainId: '', height: 0 };\nexport const Header = {\n    encode(message, writer = Writer.create()) {\n        if (message.version !== undefined) {\n            Consensus.encode(message.version, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.chainId !== '') {\n            writer.uint32(18).string(message.chainId);\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).int64(message.height);\n        }\n        if (message.time !== undefined) {\n            Timestamp.encode(toTimestamp(message.time), writer.uint32(34).fork()).ldelim();\n        }\n        if (message.lastBlockId !== undefined) {\n            BlockID.encode(message.lastBlockId, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.lastCommitHash.length !== 0) {\n            writer.uint32(50).bytes(message.lastCommitHash);\n        }\n        if (message.dataHash.length !== 0) {\n            writer.uint32(58).bytes(message.dataHash);\n        }\n        if (message.validatorsHash.length !== 0) {\n            writer.uint32(66).bytes(message.validatorsHash);\n        }\n        if (message.nextValidatorsHash.length !== 0) {\n            writer.uint32(74).bytes(message.nextValidatorsHash);\n        }\n        if (message.consensusHash.length !== 0) {\n            writer.uint32(82).bytes(message.consensusHash);\n        }\n        if (message.appHash.length !== 0) {\n            writer.uint32(90).bytes(message.appHash);\n        }\n        if (message.lastResultsHash.length !== 0) {\n            writer.uint32(98).bytes(message.lastResultsHash);\n        }\n        if (message.evidenceHash.length !== 0) {\n            writer.uint32(106).bytes(message.evidenceHash);\n        }\n        if (message.proposerAddress.length !== 0) {\n            writer.uint32(114).bytes(message.proposerAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.version = Consensus.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.chainId = reader.string();\n                    break;\n                case 3:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.lastBlockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.lastCommitHash = reader.bytes();\n                    break;\n                case 7:\n                    message.dataHash = reader.bytes();\n                    break;\n                case 8:\n                    message.validatorsHash = reader.bytes();\n                    break;\n                case 9:\n                    message.nextValidatorsHash = reader.bytes();\n                    break;\n                case 10:\n                    message.consensusHash = reader.bytes();\n                    break;\n                case 11:\n                    message.appHash = reader.bytes();\n                    break;\n                case 12:\n                    message.lastResultsHash = reader.bytes();\n                    break;\n                case 13:\n                    message.evidenceHash = reader.bytes();\n                    break;\n                case 14:\n                    message.proposerAddress = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeader };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Consensus.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = String(object.chainId);\n        }\n        else {\n            message.chainId = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = fromJsonTimestamp(object.time);\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.lastBlockId !== undefined && object.lastBlockId !== null) {\n            message.lastBlockId = BlockID.fromJSON(object.lastBlockId);\n        }\n        else {\n            message.lastBlockId = undefined;\n        }\n        if (object.lastCommitHash !== undefined && object.lastCommitHash !== null) {\n            message.lastCommitHash = bytesFromBase64(object.lastCommitHash);\n        }\n        if (object.dataHash !== undefined && object.dataHash !== null) {\n            message.dataHash = bytesFromBase64(object.dataHash);\n        }\n        if (object.validatorsHash !== undefined && object.validatorsHash !== null) {\n            message.validatorsHash = bytesFromBase64(object.validatorsHash);\n        }\n        if (object.nextValidatorsHash !== undefined && object.nextValidatorsHash !== null) {\n            message.nextValidatorsHash = bytesFromBase64(object.nextValidatorsHash);\n        }\n        if (object.consensusHash !== undefined && object.consensusHash !== null) {\n            message.consensusHash = bytesFromBase64(object.consensusHash);\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = bytesFromBase64(object.appHash);\n        }\n        if (object.lastResultsHash !== undefined && object.lastResultsHash !== null) {\n            message.lastResultsHash = bytesFromBase64(object.lastResultsHash);\n        }\n        if (object.evidenceHash !== undefined && object.evidenceHash !== null) {\n            message.evidenceHash = bytesFromBase64(object.evidenceHash);\n        }\n        if (object.proposerAddress !== undefined && object.proposerAddress !== null) {\n            message.proposerAddress = bytesFromBase64(object.proposerAddress);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.version !== undefined && (obj.version = message.version ? Consensus.toJSON(message.version) : undefined);\n        message.chainId !== undefined && (obj.chainId = message.chainId);\n        message.height !== undefined && (obj.height = message.height);\n        message.time !== undefined && (obj.time = message.time !== undefined ? message.time.toISOString() : null);\n        message.lastBlockId !== undefined && (obj.lastBlockId = message.lastBlockId ? BlockID.toJSON(message.lastBlockId) : undefined);\n        message.lastCommitHash !== undefined &&\n            (obj.lastCommitHash = base64FromBytes(message.lastCommitHash !== undefined ? message.lastCommitHash : new Uint8Array()));\n        message.dataHash !== undefined && (obj.dataHash = base64FromBytes(message.dataHash !== undefined ? message.dataHash : new Uint8Array()));\n        message.validatorsHash !== undefined &&\n            (obj.validatorsHash = base64FromBytes(message.validatorsHash !== undefined ? message.validatorsHash : new Uint8Array()));\n        message.nextValidatorsHash !== undefined &&\n            (obj.nextValidatorsHash = base64FromBytes(message.nextValidatorsHash !== undefined ? message.nextValidatorsHash : new Uint8Array()));\n        message.consensusHash !== undefined && (obj.consensusHash = base64FromBytes(message.consensusHash !== undefined ? message.consensusHash : new Uint8Array()));\n        message.appHash !== undefined && (obj.appHash = base64FromBytes(message.appHash !== undefined ? message.appHash : new Uint8Array()));\n        message.lastResultsHash !== undefined &&\n            (obj.lastResultsHash = base64FromBytes(message.lastResultsHash !== undefined ? message.lastResultsHash : new Uint8Array()));\n        message.evidenceHash !== undefined && (obj.evidenceHash = base64FromBytes(message.evidenceHash !== undefined ? message.evidenceHash : new Uint8Array()));\n        message.proposerAddress !== undefined &&\n            (obj.proposerAddress = base64FromBytes(message.proposerAddress !== undefined ? message.proposerAddress : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeader };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Consensus.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = object.chainId;\n        }\n        else {\n            message.chainId = '';\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.lastBlockId !== undefined && object.lastBlockId !== null) {\n            message.lastBlockId = BlockID.fromPartial(object.lastBlockId);\n        }\n        else {\n            message.lastBlockId = undefined;\n        }\n        if (object.lastCommitHash !== undefined && object.lastCommitHash !== null) {\n            message.lastCommitHash = object.lastCommitHash;\n        }\n        else {\n            message.lastCommitHash = new Uint8Array();\n        }\n        if (object.dataHash !== undefined && object.dataHash !== null) {\n            message.dataHash = object.dataHash;\n        }\n        else {\n            message.dataHash = new Uint8Array();\n        }\n        if (object.validatorsHash !== undefined && object.validatorsHash !== null) {\n            message.validatorsHash = object.validatorsHash;\n        }\n        else {\n            message.validatorsHash = new Uint8Array();\n        }\n        if (object.nextValidatorsHash !== undefined && object.nextValidatorsHash !== null) {\n            message.nextValidatorsHash = object.nextValidatorsHash;\n        }\n        else {\n            message.nextValidatorsHash = new Uint8Array();\n        }\n        if (object.consensusHash !== undefined && object.consensusHash !== null) {\n            message.consensusHash = object.consensusHash;\n        }\n        else {\n            message.consensusHash = new Uint8Array();\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = object.appHash;\n        }\n        else {\n            message.appHash = new Uint8Array();\n        }\n        if (object.lastResultsHash !== undefined && object.lastResultsHash !== null) {\n            message.lastResultsHash = object.lastResultsHash;\n        }\n        else {\n            message.lastResultsHash = new Uint8Array();\n        }\n        if (object.evidenceHash !== undefined && object.evidenceHash !== null) {\n            message.evidenceHash = object.evidenceHash;\n        }\n        else {\n            message.evidenceHash = new Uint8Array();\n        }\n        if (object.proposerAddress !== undefined && object.proposerAddress !== null) {\n            message.proposerAddress = object.proposerAddress;\n        }\n        else {\n            message.proposerAddress = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseData = {};\nexport const Data = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.txs) {\n            writer.uint32(10).bytes(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseData };\n        message.txs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.txs.push(reader.bytes());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseData };\n        message.txs = [];\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(bytesFromBase64(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.txs) {\n            obj.txs = message.txs.map((e) => base64FromBytes(e !== undefined ? e : new Uint8Array()));\n        }\n        else {\n            obj.txs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseData };\n        message.txs = [];\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(e);\n            }\n        }\n        return message;\n    }\n};\nconst baseVote = { type: 0, height: 0, round: 0, validatorIndex: 0 };\nexport const Vote = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(24).int32(message.round);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(42).fork()).ldelim();\n        }\n        if (message.validatorAddress.length !== 0) {\n            writer.uint32(50).bytes(message.validatorAddress);\n        }\n        if (message.validatorIndex !== 0) {\n            writer.uint32(56).int32(message.validatorIndex);\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(66).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVote };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.round = reader.int32();\n                    break;\n                case 4:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.validatorAddress = reader.bytes();\n                    break;\n                case 7:\n                    message.validatorIndex = reader.int32();\n                    break;\n                case 8:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVote };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = signedMsgTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = bytesFromBase64(object.validatorAddress);\n        }\n        if (object.validatorIndex !== undefined && object.validatorIndex !== null) {\n            message.validatorIndex = Number(object.validatorIndex);\n        }\n        else {\n            message.validatorIndex = 0;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = signedMsgTypeToJSON(message.type));\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.blockId !== undefined && (obj.blockId = message.blockId ? BlockID.toJSON(message.blockId) : undefined);\n        message.timestamp !== undefined && (obj.timestamp = message.timestamp !== undefined ? message.timestamp.toISOString() : null);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = base64FromBytes(message.validatorAddress !== undefined ? message.validatorAddress : new Uint8Array()));\n        message.validatorIndex !== undefined && (obj.validatorIndex = message.validatorIndex);\n        message.signature !== undefined && (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVote };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = new Uint8Array();\n        }\n        if (object.validatorIndex !== undefined && object.validatorIndex !== null) {\n            message.validatorIndex = object.validatorIndex;\n        }\n        else {\n            message.validatorIndex = 0;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseCommit = { height: 0, round: 0 };\nexport const Commit = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(16).int32(message.round);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.signatures) {\n            CommitSig.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommit };\n        message.signatures = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.round = reader.int32();\n                    break;\n                case 3:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.signatures.push(CommitSig.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommit };\n        message.signatures = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.signatures !== undefined && object.signatures !== null) {\n            for (const e of object.signatures) {\n                message.signatures.push(CommitSig.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.blockId !== undefined && (obj.blockId = message.blockId ? BlockID.toJSON(message.blockId) : undefined);\n        if (message.signatures) {\n            obj.signatures = message.signatures.map((e) => (e ? CommitSig.toJSON(e) : undefined));\n        }\n        else {\n            obj.signatures = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommit };\n        message.signatures = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.signatures !== undefined && object.signatures !== null) {\n            for (const e of object.signatures) {\n                message.signatures.push(CommitSig.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseCommitSig = { blockIdFlag: 0 };\nexport const CommitSig = {\n    encode(message, writer = Writer.create()) {\n        if (message.blockIdFlag !== 0) {\n            writer.uint32(8).int32(message.blockIdFlag);\n        }\n        if (message.validatorAddress.length !== 0) {\n            writer.uint32(18).bytes(message.validatorAddress);\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(26).fork()).ldelim();\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(34).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommitSig };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.blockIdFlag = reader.int32();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.bytes();\n                    break;\n                case 3:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommitSig };\n        if (object.blockIdFlag !== undefined && object.blockIdFlag !== null) {\n            message.blockIdFlag = blockIDFlagFromJSON(object.blockIdFlag);\n        }\n        else {\n            message.blockIdFlag = 0;\n        }\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = bytesFromBase64(object.validatorAddress);\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.blockIdFlag !== undefined && (obj.blockIdFlag = blockIDFlagToJSON(message.blockIdFlag));\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = base64FromBytes(message.validatorAddress !== undefined ? message.validatorAddress : new Uint8Array()));\n        message.timestamp !== undefined && (obj.timestamp = message.timestamp !== undefined ? message.timestamp.toISOString() : null);\n        message.signature !== undefined && (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommitSig };\n        if (object.blockIdFlag !== undefined && object.blockIdFlag !== null) {\n            message.blockIdFlag = object.blockIdFlag;\n        }\n        else {\n            message.blockIdFlag = 0;\n        }\n        if (object.validatorAddress !== undefined && object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = new Uint8Array();\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseProposal = { type: 0, height: 0, round: 0, polRound: 0 };\nexport const Proposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(24).int32(message.round);\n        }\n        if (message.polRound !== 0) {\n            writer.uint32(32).int32(message.polRound);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(50).fork()).ldelim();\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(58).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.round = reader.int32();\n                    break;\n                case 4:\n                    message.polRound = reader.int32();\n                    break;\n                case 5:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProposal };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = signedMsgTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.polRound !== undefined && object.polRound !== null) {\n            message.polRound = Number(object.polRound);\n        }\n        else {\n            message.polRound = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = signedMsgTypeToJSON(message.type));\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.polRound !== undefined && (obj.polRound = message.polRound);\n        message.blockId !== undefined && (obj.blockId = message.blockId ? BlockID.toJSON(message.blockId) : undefined);\n        message.timestamp !== undefined && (obj.timestamp = message.timestamp !== undefined ? message.timestamp.toISOString() : null);\n        message.signature !== undefined && (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProposal };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.polRound !== undefined && object.polRound !== null) {\n            message.polRound = object.polRound;\n        }\n        else {\n            message.polRound = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    }\n};\nconst baseSignedHeader = {};\nexport const SignedHeader = {\n    encode(message, writer = Writer.create()) {\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.commit !== undefined) {\n            Commit.encode(message.commit, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSignedHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.commit = Commit.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSignedHeader };\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = Commit.fromJSON(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.header !== undefined && (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        message.commit !== undefined && (obj.commit = message.commit ? Commit.toJSON(message.commit) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSignedHeader };\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = Commit.fromPartial(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        return message;\n    }\n};\nconst baseLightBlock = {};\nexport const LightBlock = {\n    encode(message, writer = Writer.create()) {\n        if (message.signedHeader !== undefined) {\n            SignedHeader.encode(message.signedHeader, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.validatorSet !== undefined) {\n            ValidatorSet.encode(message.validatorSet, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseLightBlock };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.signedHeader = SignedHeader.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.validatorSet = ValidatorSet.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseLightBlock };\n        if (object.signedHeader !== undefined && object.signedHeader !== null) {\n            message.signedHeader = SignedHeader.fromJSON(object.signedHeader);\n        }\n        else {\n            message.signedHeader = undefined;\n        }\n        if (object.validatorSet !== undefined && object.validatorSet !== null) {\n            message.validatorSet = ValidatorSet.fromJSON(object.validatorSet);\n        }\n        else {\n            message.validatorSet = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.signedHeader !== undefined && (obj.signedHeader = message.signedHeader ? SignedHeader.toJSON(message.signedHeader) : undefined);\n        message.validatorSet !== undefined && (obj.validatorSet = message.validatorSet ? ValidatorSet.toJSON(message.validatorSet) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseLightBlock };\n        if (object.signedHeader !== undefined && object.signedHeader !== null) {\n            message.signedHeader = SignedHeader.fromPartial(object.signedHeader);\n        }\n        else {\n            message.signedHeader = undefined;\n        }\n        if (object.validatorSet !== undefined && object.validatorSet !== null) {\n            message.validatorSet = ValidatorSet.fromPartial(object.validatorSet);\n        }\n        else {\n            message.validatorSet = undefined;\n        }\n        return message;\n    }\n};\nconst baseBlockMeta = { blockSize: 0, numTxs: 0 };\nexport const BlockMeta = {\n    encode(message, writer = Writer.create()) {\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.blockSize !== 0) {\n            writer.uint32(16).int64(message.blockSize);\n        }\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.numTxs !== 0) {\n            writer.uint32(32).int64(message.numTxs);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockMeta };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.blockSize = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.numTxs = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockMeta };\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.blockSize !== undefined && object.blockSize !== null) {\n            message.blockSize = Number(object.blockSize);\n        }\n        else {\n            message.blockSize = 0;\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.numTxs !== undefined && object.numTxs !== null) {\n            message.numTxs = Number(object.numTxs);\n        }\n        else {\n            message.numTxs = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.blockId !== undefined && (obj.blockId = message.blockId ? BlockID.toJSON(message.blockId) : undefined);\n        message.blockSize !== undefined && (obj.blockSize = message.blockSize);\n        message.header !== undefined && (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        message.numTxs !== undefined && (obj.numTxs = message.numTxs);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockMeta };\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.blockSize !== undefined && object.blockSize !== null) {\n            message.blockSize = object.blockSize;\n        }\n        else {\n            message.blockSize = 0;\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.numTxs !== undefined && object.numTxs !== null) {\n            message.numTxs = object.numTxs;\n        }\n        else {\n            message.numTxs = 0;\n        }\n        return message;\n    }\n};\nconst baseTxProof = {};\nexport const TxProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.rootHash.length !== 0) {\n            writer.uint32(10).bytes(message.rootHash);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTxProof };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rootHash = reader.bytes();\n                    break;\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                case 3:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTxProof };\n        if (object.rootHash !== undefined && object.rootHash !== null) {\n            message.rootHash = bytesFromBase64(object.rootHash);\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.rootHash !== undefined && (obj.rootHash = base64FromBytes(message.rootHash !== undefined ? message.rootHash : new Uint8Array()));\n        message.data !== undefined && (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.proof !== undefined && (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTxProof };\n        if (object.rootHash !== undefined && object.rootHash !== null) {\n            message.rootHash = object.rootHash;\n        }\n        else {\n            message.rootHash = new Uint8Array();\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Timestamp } from '../../../google/protobuf/timestamp';\nimport { Any } from '../../../google/protobuf/any';\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.authz.v1beta1';\nconst baseGenericAuthorization = { msg: '' };\nexport const GenericAuthorization = {\n    encode(message, writer = Writer.create()) {\n        if (message.msg !== '') {\n            writer.uint32(10).string(message.msg);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenericAuthorization };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.msg = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenericAuthorization };\n        if (object.msg !== undefined && object.msg !== null) {\n            message.msg = String(object.msg);\n        }\n        else {\n            message.msg = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.msg !== undefined && (obj.msg = message.msg);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenericAuthorization };\n        if (object.msg !== undefined && object.msg !== null) {\n            message.msg = object.msg;\n        }\n        else {\n            message.msg = '';\n        }\n        return message;\n    }\n};\nconst baseGrant = {};\nexport const Grant = {\n    encode(message, writer = Writer.create()) {\n        if (message.authorization !== undefined) {\n            Any.encode(message.authorization, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.expiration !== undefined) {\n            Timestamp.encode(toTimestamp(message.expiration), writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGrant };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.authorization = Any.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.expiration = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGrant };\n        if (object.authorization !== undefined && object.authorization !== null) {\n            message.authorization = Any.fromJSON(object.authorization);\n        }\n        else {\n            message.authorization = undefined;\n        }\n        if (object.expiration !== undefined && object.expiration !== null) {\n            message.expiration = fromJsonTimestamp(object.expiration);\n        }\n        else {\n            message.expiration = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.authorization !== undefined && (obj.authorization = message.authorization ? Any.toJSON(message.authorization) : undefined);\n        message.expiration !== undefined && (obj.expiration = message.expiration !== undefined ? message.expiration.toISOString() : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGrant };\n        if (object.authorization !== undefined && object.authorization !== null) {\n            message.authorization = Any.fromPartial(object.authorization);\n        }\n        else {\n            message.authorization = undefined;\n        }\n        if (object.expiration !== undefined && object.expiration !== null) {\n            message.expiration = object.expiration;\n        }\n        else {\n            message.expiration = undefined;\n        }\n        return message;\n    }\n};\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === 'string') {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseAny = { typeUrl: '' };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== '') {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined && (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = '';\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nconst atob = globalThis.atob || ((b64) => globalThis.Buffer.from(b64, 'base64').toString('binary'));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa || ((bin) => globalThis.Buffer.from(bin, 'binary').toString('base64'));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(''));\n}\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseDuration = { seconds: 0, nanos: 0 };\nexport const Duration = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDuration };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.base.v1beta1';\nconst baseCoin = { denom: '', amount: '' };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseDecCoin = { denom: '', amount: '' };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseIntProto = { int: '' };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== '') {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    }\n};\nconst baseDecProto = { dec: '' };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== '') {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport { Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'cosmos.base.v1beta1';\nconst baseCoin = { denom: '', amount: '' };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseDecCoin = { denom: '', amount: '' };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== '') {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== '') {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = '';\n        }\n        return message;\n    }\n};\nconst baseIntProto = { int: '' };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== '') {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = '';\n        }\n        return message;\n    }\n};\nconst baseDecProto = { dec: '' };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== '') {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = '';\n        }\n        return message;\n    }\n};\n","/* eslint-disable */\nimport * as Long from 'long';\nimport { util, configure, Writer, Reader } from 'protobufjs/minimal';\nexport const protobufPackage = 'google.protobuf';\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    }\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { WeightedVoteOption, voteOptionFromJSON, voteOptionToJSON } from '../../../cosmos/gov/v1beta1/gov';\nimport { Reader, util, configure, Writer } from 'protobufjs/minimal';\nimport * as Long from 'long';\nimport { Any } from '../../../google/protobuf/any';\nimport { Coin } from '../../../cosmos/base/v1beta1/coin';\nexport const protobufPackage = 'cosmos.gov.v1beta1';\nconst baseMsgSubmitProposal = { proposer: '' };\nexport const MsgSubmitProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.content !== undefined) {\n            Any.encode(message.content, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.initialDeposit) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.proposer !== '') {\n            writer.uint32(26).string(message.proposer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSubmitProposal };\n        message.initialDeposit = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.content = Any.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.initialDeposit.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.proposer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSubmitProposal };\n        message.initialDeposit = [];\n        if (object.content !== undefined && object.content !== null) {\n            message.content = Any.fromJSON(object.content);\n        }\n        else {\n            message.content = undefined;\n        }\n        if (object.initialDeposit !== undefined && object.initialDeposit !== null) {\n            for (const e of object.initialDeposit) {\n                message.initialDeposit.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = String(object.proposer);\n        }\n        else {\n            message.proposer = '';\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.content !== undefined && (obj.content = message.content ? Any.toJSON(message.content) : undefined);\n        if (message.initialDeposit) {\n            obj.initialDeposit = message.initialDeposit.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.initialDeposit = [];\n        }\n        message.proposer !== undefined && (obj.proposer = message.proposer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSubmitProposal };\n        message.initialDeposit = [];\n        if (object.content !== undefined && object.content !== null) {\n            message.content = Any.fromPartial(object.content);\n        }\n        else {\n            message.content = undefined;\n        }\n        if (object.initialDeposit !== undefined && object.initialDeposit !== null) {\n            for (const e of object.initialDeposit) {\n                message.initialDeposit.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = object.proposer;\n        }\n        else {\n            message.proposer = '';\n        }\n        return message;\n    }\n};\nconst baseMsgSubmitProposalResponse = { proposalId: 0 };\nexport const MsgSubmitProposalResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSubmitProposalResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSubmitProposalResponse };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSubmitProposalResponse };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgVote = { proposalId: 0, voter: '', option: 0 };\nexport const MsgVote = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.voter !== '') {\n            writer.uint32(18).string(message.voter);\n        }\n        if (message.option !== 0) {\n            writer.uint32(24).int32(message.option);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgVote };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.voter = reader.string();\n                    break;\n                case 3:\n                    message.option = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgVote };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.voter !== undefined && object.voter !== null) {\n            message.voter = String(object.voter);\n        }\n        else {\n            message.voter = '';\n        }\n        if (object.option !== undefined && object.option !== null) {\n            message.option = voteOptionFromJSON(object.option);\n        }\n        else {\n            message.option = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.voter !== undefined && (obj.voter = message.voter);\n        message.option !== undefined && (obj.option = voteOptionToJSON(message.option));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgVote };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.voter !== undefined && object.voter !== null) {\n            message.voter = object.voter;\n        }\n        else {\n            message.voter = '';\n        }\n        if (object.option !== undefined && object.option !== null) {\n            message.option = object.option;\n        }\n        else {\n            message.option = 0;\n        }\n        return message;\n    }\n};\nconst baseMsgVoteResponse = {};\nexport const MsgVoteResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgVoteResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgVoteResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgVoteResponse };\n        return message;\n    }\n};\nconst baseMsgVoteWeighted = { proposalId: 0, voter: '' };\nexport const MsgVoteWeighted = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.voter !== '') {\n            writer.uint32(18).string(message.voter);\n        }\n        for (const v of message.options) {\n            WeightedVoteOption.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgVoteWeighted };\n        message.options = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.voter = reader.string();\n                    break;\n                case 3:\n                    message.options.push(WeightedVoteOption.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgVoteWeighted };\n        message.options = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.voter !== undefined && object.voter !== null) {\n            message.voter = String(object.voter);\n        }\n        else {\n            message.voter = '';\n        }\n        if (object.options !== undefined && object.options !== null) {\n            for (const e of object.options) {\n                message.options.push(WeightedVoteOption.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.voter !== undefined && (obj.voter = message.voter);\n        if (message.options) {\n            obj.options = message.options.map((e) => (e ? WeightedVoteOption.toJSON(e) : undefined));\n        }\n        else {\n            obj.options = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgVoteWeighted };\n        message.options = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.voter !== undefined && object.voter !== null) {\n            message.voter = object.voter;\n        }\n        else {\n            message.voter = '';\n        }\n        if (object.options !== undefined && object.options !== null) {\n            for (const e of object.options) {\n                message.options.push(WeightedVoteOption.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseMsgVoteWeightedResponse = {};\nexport const MsgVoteWeightedResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgVoteWeightedResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgVoteWeightedResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgVoteWeightedResponse };\n        return message;\n    }\n};\nconst baseMsgDeposit = { proposalId: 0, depositor: '' };\nexport const MsgDeposit = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.depositor !== '') {\n            writer.uint32(18).string(message.depositor);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDeposit };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.depositor = reader.string();\n                    break;\n                case 3:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgDeposit };\n        message.amount = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = String(object.depositor);\n        }\n        else {\n            message.depositor = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.depositor !== undefined && (obj.depositor = message.depositor);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgDeposit };\n        message.amount = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = object.depositor;\n        }\n        else {\n            message.depositor = '';\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    }\n};\nconst baseMsgDepositResponse = {};\nexport const MsgDepositResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDepositResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgDepositResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgDepositResponse };\n        return message;\n    }\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    SubmitProposal(request) {\n        const data = MsgSubmitProposal.encode(request).finish();\n        const promise = this.rpc.request('cosmos.gov.v1beta1.Msg', 'SubmitProposal', data);\n        return promise.then((data) => MsgSubmitProposalResponse.decode(new Reader(data)));\n    }\n    Vote(request) {\n        const data = MsgVote.encode(request).finish();\n        const promise = this.rpc.request('cosmos.gov.v1beta1.Msg', 'Vote', data);\n        return promise.then((data) => MsgVoteResponse.decode(new Reader(data)));\n    }\n    VoteWeighted(request) {\n        const data = MsgVoteWeighted.encode(request).finish();\n        const promise = this.rpc.request('cosmos.gov.v1beta1.Msg', 'VoteWeighted', data);\n        return promise.then((data) => MsgVoteWeightedResponse.decode(new Reader(data)));\n    }\n    Deposit(request) {\n        const data = MsgDeposit.encode(request).finish();\n        const promise = this.rpc.request('cosmos.gov.v1beta1.Msg', 'Deposit', data);\n        return promise.then((data) => MsgDepositResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== 'undefined')\n        return globalThis;\n    if (typeof self !== 'undefined')\n        return self;\n    if (typeof window !== 'undefined')\n        return window;\n    if (typeof global !== 'undefined')\n        return global;\n    throw 'Unable to locate global object';\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER');\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n"],"sourceRoot":""}